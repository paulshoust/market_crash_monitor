2025-08-09 19:59:41,282 DEBUG Entering download()
2025-08-09 19:59:41,284 DEBUG  Entering history()
2025-08-09 19:59:41,302 DEBUG ('CREATE TABLE IF NOT EXISTS "_tz_kv" ("key" VARCHAR(255) NOT NULL PRIMARY KEY, "value" VARCHAR(255)) WITHOUT ROWID', [])
2025-08-09 19:59:41,324 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['^GSPC', 1, 0])
2025-08-09 19:59:41,326 DEBUG   Entering _fetch_ticker_tz()
2025-08-09 19:59:41,326 DEBUG    Entering get()
2025-08-09 19:59:41,327 DEBUG     Entering _make_request()
2025-08-09 19:59:41,327 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/^GSPC
2025-08-09 19:59:41,327 DEBUG params=frozendict.frozendict({'range': '1d', 'interval': '1d'})
2025-08-09 19:59:41,328 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 19:59:41,328 DEBUG cookie_mode = 'basic'
2025-08-09 19:59:41,328 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 19:59:41,329 DEBUG        Entering _get_cookie_basic()
2025-08-09 19:59:41,329 DEBUG         Entering _load_cookie_curlCffi()
2025-08-09 19:59:41,337 DEBUG ('CREATE TABLE IF NOT EXISTS "_cookieschema" ("strategy" VARCHAR(255) NOT NULL PRIMARY KEY, "fetch_date" DATETIME NOT NULL, "cookie_bytes" BLOB NOT NULL) WITHOUT ROWID', [])
2025-08-09 19:59:41,343 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-09 19:59:41,344 DEBUG         Exiting _load_cookie_curlCffi()
2025-08-09 19:59:41,503 DEBUG         Entering _save_cookie_curlCffi()
2025-08-09 19:59:41,504 DEBUG ('DELETE FROM "_cookieschema" WHERE ("_cookieschema"."strategy" = ?)', ['curlCffi'])
2025-08-09 19:59:41,504 DEBUG ('BEGIN', None)
2025-08-09 19:59:41,505 DEBUG ('INSERT INTO "_cookieschema" ("strategy", "fetch_date", "cookie_bytes") VALUES (?, ?, ?)', ['curlCffi', '2025-08-09T19:59:41.505142', <memory at 0x000002C7CF1053C0>])
2025-08-09 19:59:41,507 DEBUG         Exiting _save_cookie_curlCffi()
2025-08-09 19:59:41,507 DEBUG        Exiting _get_cookie_basic()
2025-08-09 19:59:41,507 DEBUG        Entering _get_crumb_basic()
2025-08-09 19:59:41,508 DEBUG         Entering _get_cookie_basic()
2025-08-09 19:59:41,508 DEBUG          Entering _load_cookie_curlCffi()
2025-08-09 19:59:41,509 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-09 19:59:41,509 DEBUG          Exiting _load_cookie_curlCffi()
2025-08-09 19:59:41,509 DEBUG reusing persistent cookie
2025-08-09 19:59:41,510 DEBUG         Exiting _get_cookie_basic()
2025-08-09 19:59:41,635 DEBUG crumb = 'FULGNX2cwi/'
2025-08-09 19:59:41,636 DEBUG        Exiting _get_crumb_basic()
2025-08-09 19:59:41,636 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 19:59:41,636 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 19:59:41,800 DEBUG response code=200
2025-08-09 19:59:41,801 DEBUG     Exiting _make_request()
2025-08-09 19:59:41,801 DEBUG    Exiting get()
2025-08-09 19:59:41,801 DEBUG   Exiting _fetch_ticker_tz()
2025-08-09 19:59:45,162 DEBUG ('BEGIN', None)
2025-08-09 19:59:45,163 DEBUG ('INSERT INTO "_tz_kv" ("key", "value") VALUES (?, ?)', ['^GSPC', 'America/New_York'])
2025-08-09 19:59:45,165 DEBUG   Entering history()
2025-08-09 19:59:45,183 DEBUG ^GSPC: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 19:59:45,186 DEBUG    Entering get()
2025-08-09 19:59:45,186 DEBUG     Entering _make_request()
2025-08-09 19:59:45,186 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/^GSPC
2025-08-09 19:59:45,187 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 19:59:45,187 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 19:59:45,187 DEBUG cookie_mode = 'basic'
2025-08-09 19:59:45,187 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 19:59:45,188 DEBUG        Entering _get_cookie_basic()
2025-08-09 19:59:45,188 DEBUG reusing cookie
2025-08-09 19:59:45,188 DEBUG        Exiting _get_cookie_basic()
2025-08-09 19:59:45,189 DEBUG        Entering _get_crumb_basic()
2025-08-09 19:59:45,189 DEBUG reusing crumb
2025-08-09 19:59:45,189 DEBUG        Exiting _get_crumb_basic()
2025-08-09 19:59:45,189 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 19:59:45,190 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 19:59:45,301 DEBUG response code=200
2025-08-09 19:59:45,301 DEBUG     Exiting _make_request()
2025-08-09 19:59:45,302 DEBUG    Exiting get()
2025-08-09 19:59:45,321 DEBUG ^GSPC: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 19:59:45,330 DEBUG ^GSPC: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 19:59:45,347 DEBUG ^GSPC: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 19:59:45,362 DEBUG ^GSPC: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 19:59:45,362 DEBUG   Exiting history()
2025-08-09 19:59:45,363 DEBUG  Exiting history()
2025-08-09 19:59:45,374 DEBUG Exiting download()
2025-08-09 19:59:45,379 DEBUG Ticker ^GSPC failed: TypeError("'str' object is not callable")
2025-08-09 19:59:45,379 DEBUG Entering download()
2025-08-09 19:59:45,380 DEBUG  Entering history()
2025-08-09 19:59:45,380 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SPY', 1, 0])
2025-08-09 19:59:45,381 DEBUG   Entering _fetch_ticker_tz()
2025-08-09 19:59:45,381 DEBUG    Entering get()
2025-08-09 19:59:45,381 DEBUG     Entering _make_request()
2025-08-09 19:59:45,382 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/SPY
2025-08-09 19:59:45,382 DEBUG params=frozendict.frozendict({'range': '1d', 'interval': '1d'})
2025-08-09 19:59:45,382 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 19:59:45,382 DEBUG cookie_mode = 'basic'
2025-08-09 19:59:45,383 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 19:59:45,383 DEBUG        Entering _get_cookie_basic()
2025-08-09 19:59:45,383 DEBUG reusing cookie
2025-08-09 19:59:45,384 DEBUG        Exiting _get_cookie_basic()
2025-08-09 19:59:45,384 DEBUG        Entering _get_crumb_basic()
2025-08-09 19:59:45,384 DEBUG reusing crumb
2025-08-09 19:59:45,384 DEBUG        Exiting _get_crumb_basic()
2025-08-09 19:59:45,385 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 19:59:45,385 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 19:59:45,539 DEBUG response code=200
2025-08-09 19:59:45,539 DEBUG     Exiting _make_request()
2025-08-09 19:59:45,540 DEBUG    Exiting get()
2025-08-09 19:59:45,540 DEBUG   Exiting _fetch_ticker_tz()
2025-08-09 19:59:45,541 DEBUG ('BEGIN', None)
2025-08-09 19:59:45,542 DEBUG ('INSERT INTO "_tz_kv" ("key", "value") VALUES (?, ?)', ['SPY', 'America/New_York'])
2025-08-09 19:59:45,544 DEBUG   Entering history()
2025-08-09 19:59:45,546 DEBUG SPY: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 19:59:45,547 DEBUG    Entering get()
2025-08-09 19:59:45,548 DEBUG     Entering _make_request()
2025-08-09 19:59:45,548 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/SPY
2025-08-09 19:59:45,549 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 19:59:45,551 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 19:59:45,552 DEBUG cookie_mode = 'basic'
2025-08-09 19:59:45,553 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 19:59:45,555 DEBUG        Entering _get_cookie_basic()
2025-08-09 19:59:45,556 DEBUG reusing cookie
2025-08-09 19:59:45,558 DEBUG        Exiting _get_cookie_basic()
2025-08-09 19:59:45,559 DEBUG        Entering _get_crumb_basic()
2025-08-09 19:59:45,560 DEBUG reusing crumb
2025-08-09 19:59:45,561 DEBUG        Exiting _get_crumb_basic()
2025-08-09 19:59:45,563 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 19:59:45,564 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 19:59:45,747 DEBUG response code=200
2025-08-09 19:59:45,747 DEBUG     Exiting _make_request()
2025-08-09 19:59:45,747 DEBUG    Exiting get()
2025-08-09 19:59:45,755 DEBUG SPY: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 19:59:45,757 DEBUG SPY: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 19:59:45,774 DEBUG SPY: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 19:59:45,781 DEBUG SPY: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 19:59:45,782 DEBUG   Exiting history()
2025-08-09 19:59:45,782 DEBUG  Exiting history()
2025-08-09 19:59:45,786 DEBUG Exiting download()
2025-08-09 19:59:45,791 DEBUG Ticker SPY failed: TypeError("'str' object is not callable")
2025-08-09 19:59:45,791 ERROR Run failed: 'str' object is not callable
Traceback (most recent call last):
  File "C:\Dev\market_monitor\market_monitor.py", line 376, in run_once
    ind = compute_indicators()
  File "C:\Dev\market_monitor\market_monitor.py", line 265, in compute_indicators
    spx = fetch_yf_first_available(TICKERS["SPX"], start, end)
  File "C:\Dev\market_monitor\market_monitor.py", line 244, in fetch_yf_first_available
    raise last_exc
  File "C:\Dev\market_monitor\market_monitor.py", line 235, in fetch_yf_first_available
    ser = df["Close"].dropna().rename(s)
  File "C:\Dev\market_monitor\venv\Lib\site-packages\pandas\core\frame.py", line 5774, in rename
    return super()._rename(
           ~~~~~~~~~~~~~~~^
        mapper=mapper,
        ^^^^^^^^^^^^^^
    ...<6 lines>...
        errors=errors,
        ^^^^^^^^^^^^^^
    )
    ^
  File "C:\Dev\market_monitor\venv\Lib\site-packages\pandas\core\generic.py", line 1132, in _rename
    new_index = ax._transform_index(f, level=level)
  File "C:\Dev\market_monitor\venv\Lib\site-packages\pandas\core\indexes\base.py", line 6583, in _transform_index
    items = [func(x) for x in self]
             ~~~~^^^
TypeError: 'str' object is not callable
2025-08-09 20:01:45,903 DEBUG Entering download()
2025-08-09 20:01:45,905 DEBUG  Entering history()
2025-08-09 20:01:45,918 DEBUG ('CREATE TABLE IF NOT EXISTS "_tz_kv" ("key" VARCHAR(255) NOT NULL PRIMARY KEY, "value" VARCHAR(255)) WITHOUT ROWID', [])
2025-08-09 20:01:45,920 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['^GSPC', 1, 0])
2025-08-09 20:01:46,067 DEBUG   Entering history()
2025-08-09 20:01:46,073 DEBUG ^GSPC: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:01:46,075 DEBUG    Entering get()
2025-08-09 20:01:46,075 DEBUG     Entering _make_request()
2025-08-09 20:01:46,075 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/^GSPC
2025-08-09 20:01:46,076 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:01:46,076 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:01:46,077 DEBUG cookie_mode = 'basic'
2025-08-09 20:01:46,077 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:01:46,077 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:01:46,077 DEBUG         Entering _load_cookie_curlCffi()
2025-08-09 20:01:46,081 DEBUG ('CREATE TABLE IF NOT EXISTS "_cookieschema" ("strategy" VARCHAR(255) NOT NULL PRIMARY KEY, "fetch_date" DATETIME NOT NULL, "cookie_bytes" BLOB NOT NULL) WITHOUT ROWID', [])
2025-08-09 20:01:46,082 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-09 20:01:46,084 DEBUG         Exiting _load_cookie_curlCffi()
2025-08-09 20:01:46,084 DEBUG reusing persistent cookie
2025-08-09 20:01:46,085 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:01:46,085 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:01:46,085 DEBUG         Entering _get_cookie_basic()
2025-08-09 20:01:46,086 DEBUG reusing cookie
2025-08-09 20:01:46,086 DEBUG         Exiting _get_cookie_basic()
2025-08-09 20:01:46,238 DEBUG crumb = 'FULGNX2cwi/'
2025-08-09 20:01:46,238 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:01:46,239 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:01:46,239 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:01:46,436 DEBUG response code=200
2025-08-09 20:01:46,436 DEBUG     Exiting _make_request()
2025-08-09 20:01:46,437 DEBUG    Exiting get()
2025-08-09 20:01:46,452 DEBUG ^GSPC: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:01:46,458 DEBUG ^GSPC: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:01:46,472 DEBUG ^GSPC: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:01:46,487 DEBUG ^GSPC: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:01:46,488 DEBUG   Exiting history()
2025-08-09 20:01:46,488 DEBUG  Exiting history()
2025-08-09 20:01:46,499 DEBUG Exiting download()
2025-08-09 20:01:46,504 DEBUG Ticker ^GSPC failed: TypeError("'str' object is not callable")
2025-08-09 20:01:46,504 DEBUG Entering download()
2025-08-09 20:01:46,505 DEBUG  Entering history()
2025-08-09 20:01:46,505 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SPY', 1, 0])
2025-08-09 20:01:46,506 DEBUG   Entering history()
2025-08-09 20:01:46,507 DEBUG SPY: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:01:46,507 DEBUG    Entering get()
2025-08-09 20:01:46,507 DEBUG     Entering _make_request()
2025-08-09 20:01:46,508 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/SPY
2025-08-09 20:01:46,508 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:01:46,508 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:01:46,509 DEBUG cookie_mode = 'basic'
2025-08-09 20:01:46,509 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:01:46,509 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:01:46,510 DEBUG reusing cookie
2025-08-09 20:01:46,510 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:01:46,510 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:01:46,511 DEBUG reusing crumb
2025-08-09 20:01:46,511 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:01:46,511 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:01:46,511 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:01:46,707 DEBUG response code=200
2025-08-09 20:01:46,708 DEBUG     Exiting _make_request()
2025-08-09 20:01:46,708 DEBUG    Exiting get()
2025-08-09 20:01:46,720 DEBUG SPY: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:01:46,723 DEBUG SPY: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:01:46,738 DEBUG SPY: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:01:46,746 DEBUG SPY: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:01:46,747 DEBUG   Exiting history()
2025-08-09 20:01:46,747 DEBUG  Exiting history()
2025-08-09 20:01:46,752 DEBUG Exiting download()
2025-08-09 20:01:46,757 DEBUG Ticker SPY failed: TypeError("'str' object is not callable")
2025-08-09 20:01:46,758 ERROR Run failed: 'str' object is not callable
Traceback (most recent call last):
  File "C:\Dev\market_monitor\market_monitor.py", line 377, in run_once
    ind = compute_indicators()
  File "C:\Dev\market_monitor\market_monitor.py", line 266, in compute_indicators
    spx = fetch_yf_first_available(TICKERS["SPX"], start, end)
  File "C:\Dev\market_monitor\market_monitor.py", line 245, in fetch_yf_first_available
    raise last_exc
  File "C:\Dev\market_monitor\market_monitor.py", line 235, in fetch_yf_first_available
    ser = df["Close"].dropna().rename(s)
  File "C:\Dev\market_monitor\venv\Lib\site-packages\pandas\core\frame.py", line 5774, in rename
    return super()._rename(
           ~~~~~~~~~~~~~~~^
        mapper=mapper,
        ^^^^^^^^^^^^^^
    ...<6 lines>...
        errors=errors,
        ^^^^^^^^^^^^^^
    )
    ^
  File "C:\Dev\market_monitor\venv\Lib\site-packages\pandas\core\generic.py", line 1132, in _rename
    new_index = ax._transform_index(f, level=level)
  File "C:\Dev\market_monitor\venv\Lib\site-packages\pandas\core\indexes\base.py", line 6583, in _transform_index
    items = [func(x) for x in self]
             ~~~~^^^
TypeError: 'str' object is not callable
2025-08-09 20:03:10,707 DEBUG Entering download()
2025-08-09 20:03:10,708 DEBUG  Entering history()
2025-08-09 20:03:10,719 DEBUG ('CREATE TABLE IF NOT EXISTS "_tz_kv" ("key" VARCHAR(255) NOT NULL PRIMARY KEY, "value" VARCHAR(255)) WITHOUT ROWID', [])
2025-08-09 20:03:10,720 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['^GSPC', 1, 0])
2025-08-09 20:03:10,783 DEBUG   Entering history()
2025-08-09 20:03:10,791 DEBUG ^GSPC: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:03:10,793 DEBUG    Entering get()
2025-08-09 20:03:10,793 DEBUG     Entering _make_request()
2025-08-09 20:03:10,793 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/^GSPC
2025-08-09 20:03:10,794 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:03:10,794 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:03:10,794 DEBUG cookie_mode = 'basic'
2025-08-09 20:03:10,795 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:03:10,795 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:03:10,795 DEBUG         Entering _load_cookie_curlCffi()
2025-08-09 20:03:10,798 DEBUG ('CREATE TABLE IF NOT EXISTS "_cookieschema" ("strategy" VARCHAR(255) NOT NULL PRIMARY KEY, "fetch_date" DATETIME NOT NULL, "cookie_bytes" BLOB NOT NULL) WITHOUT ROWID', [])
2025-08-09 20:03:10,799 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-09 20:03:10,800 DEBUG         Exiting _load_cookie_curlCffi()
2025-08-09 20:03:10,800 DEBUG reusing persistent cookie
2025-08-09 20:03:10,800 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:03:10,801 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:03:10,801 DEBUG         Entering _get_cookie_basic()
2025-08-09 20:03:10,801 DEBUG reusing cookie
2025-08-09 20:03:10,801 DEBUG         Exiting _get_cookie_basic()
2025-08-09 20:03:10,943 DEBUG crumb = 'FULGNX2cwi/'
2025-08-09 20:03:10,944 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:03:10,944 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:03:10,944 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:03:11,119 DEBUG response code=200
2025-08-09 20:03:11,120 DEBUG     Exiting _make_request()
2025-08-09 20:03:11,122 DEBUG    Exiting get()
2025-08-09 20:03:11,159 DEBUG ^GSPC: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:03:11,174 DEBUG ^GSPC: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:03:11,201 DEBUG ^GSPC: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:03:11,218 DEBUG ^GSPC: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:03:11,218 DEBUG   Exiting history()
2025-08-09 20:03:11,219 DEBUG  Exiting history()
2025-08-09 20:03:11,230 DEBUG Exiting download()
2025-08-09 20:03:11,232 DEBUG Entering download()
2025-08-09 20:03:11,232 DEBUG  Entering history()
2025-08-09 20:03:11,233 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['XAUUSD=X', 1, 0])
2025-08-09 20:03:11,233 DEBUG   Entering _fetch_ticker_tz()
2025-08-09 20:03:11,234 DEBUG    Entering get()
2025-08-09 20:03:11,234 DEBUG     Entering _make_request()
2025-08-09 20:03:11,234 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/XAUUSD=X
2025-08-09 20:03:11,234 DEBUG params=frozendict.frozendict({'range': '1d', 'interval': '1d'})
2025-08-09 20:03:11,235 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:03:11,235 DEBUG cookie_mode = 'basic'
2025-08-09 20:03:11,235 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:03:11,236 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:03:11,236 DEBUG reusing cookie
2025-08-09 20:03:11,237 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:03:11,237 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:03:11,237 DEBUG reusing crumb
2025-08-09 20:03:11,238 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:03:11,238 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:03:11,238 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:03:11,339 DEBUG response code=404
2025-08-09 20:03:11,339 DEBUG toggling cookie strategy basic -> csrf
2025-08-09 20:03:11,339 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:03:11,340 DEBUG cookie_mode = 'csrf'
2025-08-09 20:03:11,340 DEBUG       Entering _get_crumb_csrf()
2025-08-09 20:03:11,340 DEBUG        Entering _get_cookie_csrf()
2025-08-09 20:03:11,341 DEBUG         Entering _load_cookie_curlCffi()
2025-08-09 20:03:11,341 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-09 20:03:11,342 DEBUG         Exiting _load_cookie_curlCffi()
2025-08-09 20:03:11,342 DEBUG reusing persistent cookie
2025-08-09 20:03:11,342 DEBUG        Exiting _get_cookie_csrf()
2025-08-09 20:03:11,406 DEBUG crumb = 'FULGNX2cwi/'
2025-08-09 20:03:11,406 DEBUG       Exiting _get_crumb_csrf()
2025-08-09 20:03:11,407 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:03:11,474 DEBUG response code=404
2025-08-09 20:03:11,474 DEBUG     Exiting _make_request()
2025-08-09 20:03:11,475 DEBUG    Exiting get()
2025-08-09 20:03:11,475 DEBUG Got error from yahoo api for ticker XAUUSD=X, Error: {'code': 'Not Found', 'description': 'No data found, symbol may be delisted'}
2025-08-09 20:03:11,476 DEBUG   Exiting _fetch_ticker_tz()
2025-08-09 20:03:11,476 DEBUG get_raw_json(): https://query2.finance.yahoo.com/v10/finance/quoteSummary/XAUUSD=X
2025-08-09 20:03:11,476 DEBUG   Entering get()
2025-08-09 20:03:11,477 DEBUG    Entering _make_request()
2025-08-09 20:03:11,477 DEBUG url=https://query2.finance.yahoo.com/v10/finance/quoteSummary/XAUUSD=X
2025-08-09 20:03:11,478 DEBUG params={'modules': 'financialData,quoteType,defaultKeyStatistics,assetProfile,summaryDetail', 'corsDomain': 'finance.yahoo.com', 'formatted': 'false', 'symbol': 'XAUUSD=X'}
2025-08-09 20:03:11,478 DEBUG     Entering _get_cookie_and_crumb()
2025-08-09 20:03:11,479 DEBUG cookie_mode = 'csrf'
2025-08-09 20:03:11,479 DEBUG      Entering _get_crumb_csrf()
2025-08-09 20:03:11,480 DEBUG reusing crumb
2025-08-09 20:03:11,480 DEBUG      Exiting _get_crumb_csrf()
2025-08-09 20:03:11,481 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-09 20:03:11,637 DEBUG response code=404
2025-08-09 20:03:11,638 DEBUG toggling cookie strategy csrf -> basic
2025-08-09 20:03:11,638 DEBUG     Entering _get_cookie_and_crumb()
2025-08-09 20:03:11,639 DEBUG cookie_mode = 'basic'
2025-08-09 20:03:11,639 DEBUG      Entering _get_cookie_and_crumb_basic()
2025-08-09 20:03:11,640 DEBUG       Entering _get_cookie_basic()
2025-08-09 20:03:11,640 DEBUG        Entering _load_cookie_curlCffi()
2025-08-09 20:03:11,641 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-09 20:03:11,642 DEBUG        Exiting _load_cookie_curlCffi()
2025-08-09 20:03:11,643 DEBUG reusing persistent cookie
2025-08-09 20:03:11,643 DEBUG       Exiting _get_cookie_basic()
2025-08-09 20:03:11,644 DEBUG       Entering _get_crumb_basic()
2025-08-09 20:03:11,645 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:03:11,645 DEBUG reusing cookie
2025-08-09 20:03:11,646 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:03:11,760 DEBUG crumb = 'FULGNX2cwi/'
2025-08-09 20:03:11,761 DEBUG       Exiting _get_crumb_basic()
2025-08-09 20:03:11,761 DEBUG      Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:03:11,762 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-09 20:03:11,917 DEBUG response code=404
2025-08-09 20:03:11,917 DEBUG    Exiting _make_request()
2025-08-09 20:03:11,918 DEBUG   Exiting get()
2025-08-09 20:03:11,918 ERROR HTTP Error 404: 
2025-08-09 20:03:11,919 DEBUG get_raw_json(): https://query1.finance.yahoo.com/v7/finance/quote?
2025-08-09 20:03:11,919 DEBUG   Entering get()
2025-08-09 20:03:11,920 DEBUG    Entering _make_request()
2025-08-09 20:03:11,920 DEBUG url=https://query1.finance.yahoo.com/v7/finance/quote?
2025-08-09 20:03:11,921 DEBUG params={'symbols': 'XAUUSD=X', 'formatted': 'false'}
2025-08-09 20:03:11,922 DEBUG     Entering _get_cookie_and_crumb()
2025-08-09 20:03:11,922 DEBUG cookie_mode = 'basic'
2025-08-09 20:03:11,923 DEBUG      Entering _get_cookie_and_crumb_basic()
2025-08-09 20:03:11,923 DEBUG       Entering _get_cookie_basic()
2025-08-09 20:03:11,924 DEBUG reusing cookie
2025-08-09 20:03:11,924 DEBUG       Exiting _get_cookie_basic()
2025-08-09 20:03:11,925 DEBUG       Entering _get_crumb_basic()
2025-08-09 20:03:11,925 DEBUG reusing crumb
2025-08-09 20:03:11,926 DEBUG       Exiting _get_crumb_basic()
2025-08-09 20:03:11,926 DEBUG      Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:03:11,927 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-09 20:03:12,001 DEBUG response code=200
2025-08-09 20:03:12,001 DEBUG    Exiting _make_request()
2025-08-09 20:03:12,002 DEBUG   Exiting get()
2025-08-09 20:03:12,003 DEBUG   Entering get()
2025-08-09 20:03:12,003 DEBUG    Entering _make_request()
2025-08-09 20:03:12,003 DEBUG url=https://query1.finance.yahoo.com/ws/fundamentals-timeseries/v1/finance/timeseries/XAUUSD=X?symbol=XAUUSD=X&type=trailingPegRatio&period1=1738972800&period2=1754784000
2025-08-09 20:03:12,004 DEBUG params=None
2025-08-09 20:03:12,004 DEBUG     Entering _get_cookie_and_crumb()
2025-08-09 20:03:12,004 DEBUG cookie_mode = 'basic'
2025-08-09 20:03:12,005 DEBUG      Entering _get_cookie_and_crumb_basic()
2025-08-09 20:03:12,005 DEBUG       Entering _get_cookie_basic()
2025-08-09 20:03:12,005 DEBUG reusing cookie
2025-08-09 20:03:12,006 DEBUG       Exiting _get_cookie_basic()
2025-08-09 20:03:12,006 DEBUG       Entering _get_crumb_basic()
2025-08-09 20:03:12,006 DEBUG reusing crumb
2025-08-09 20:03:12,006 DEBUG       Exiting _get_crumb_basic()
2025-08-09 20:03:12,007 DEBUG      Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:03:12,007 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-09 20:03:12,159 DEBUG response code=200
2025-08-09 20:03:12,160 DEBUG    Exiting _make_request()
2025-08-09 20:03:12,160 DEBUG   Exiting get()
2025-08-09 20:03:12,161 DEBUG   Entering history()
2025-08-09 20:03:12,177 ERROR 
1 Failed download:
2025-08-09 20:03:12,178 ERROR ['XAUUSD=X']: YFTzMissingError('possibly delisted; no timezone found')
2025-08-09 20:03:12,179 DEBUG ['XAUUSD=X']: Traceback (most recent call last):
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\multi.py", line 281, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\utils.py", line 92, in wrapper
    result = func(*args, **kwargs)
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\base.py", line 101, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\utils.py", line 92, in wrapper
    result = func(*args, **kwargs)
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\scrapers\history.py", line 128, in history
    raise _exception
yfinance.exceptions.YFTzMissingError: possibly delisted; no timezone found

2025-08-09 20:03:12,190 DEBUG Exiting download()
2025-08-09 20:03:12,192 DEBUG Entering download()
2025-08-09 20:03:12,194 DEBUG  Entering history()
2025-08-09 20:03:12,196 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GC=F', 1, 0])
2025-08-09 20:03:12,198 DEBUG   Entering _fetch_ticker_tz()
2025-08-09 20:03:12,199 DEBUG    Entering get()
2025-08-09 20:03:12,199 DEBUG     Entering _make_request()
2025-08-09 20:03:12,200 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/GC=F
2025-08-09 20:03:12,201 DEBUG params=frozendict.frozendict({'range': '1d', 'interval': '1d'})
2025-08-09 20:03:12,202 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:03:12,203 DEBUG cookie_mode = 'basic'
2025-08-09 20:03:12,205 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:03:12,206 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:03:12,207 DEBUG reusing cookie
2025-08-09 20:03:12,208 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:03:12,209 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:03:12,210 DEBUG reusing crumb
2025-08-09 20:03:12,211 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:03:12,211 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:03:12,212 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:03:12,378 DEBUG response code=200
2025-08-09 20:03:12,378 DEBUG     Exiting _make_request()
2025-08-09 20:03:12,379 DEBUG    Exiting get()
2025-08-09 20:03:12,379 DEBUG   Exiting _fetch_ticker_tz()
2025-08-09 20:03:12,380 DEBUG ('BEGIN', None)
2025-08-09 20:03:12,380 DEBUG ('INSERT INTO "_tz_kv" ("key", "value") VALUES (?, ?)', ['GC=F', 'America/New_York'])
2025-08-09 20:03:12,389 DEBUG   Entering history()
2025-08-09 20:03:12,390 DEBUG GC=F: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:03:12,391 DEBUG    Entering get()
2025-08-09 20:03:12,392 DEBUG     Entering _make_request()
2025-08-09 20:03:12,392 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/GC=F
2025-08-09 20:03:12,392 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:03:12,393 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:03:12,394 DEBUG cookie_mode = 'basic'
2025-08-09 20:03:12,394 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:03:12,395 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:03:12,395 DEBUG reusing cookie
2025-08-09 20:03:12,396 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:03:12,396 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:03:12,397 DEBUG reusing crumb
2025-08-09 20:03:12,398 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:03:12,398 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:03:12,399 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:03:12,529 DEBUG response code=200
2025-08-09 20:03:12,530 DEBUG     Exiting _make_request()
2025-08-09 20:03:12,531 DEBUG    Exiting get()
2025-08-09 20:03:12,551 DEBUG GC=F: yfinance received OHLC data: 2019-08-12 04:00:00 -> 2025-08-08 04:00:00
2025-08-09 20:03:12,554 DEBUG GC=F: OHLC after cleaning: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:03:12,561 DEBUG GC=F: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:03:12,568 DEBUG GC=F: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:03:12,568 DEBUG   Exiting history()
2025-08-09 20:03:12,568 DEBUG  Exiting history()
2025-08-09 20:03:12,573 DEBUG Exiting download()
2025-08-09 20:03:12,576 DEBUG Entering download()
2025-08-09 20:03:12,576 DEBUG  Entering history()
2025-08-09 20:03:12,577 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['^VIX', 1, 0])
2025-08-09 20:03:12,577 DEBUG   Entering _fetch_ticker_tz()
2025-08-09 20:03:12,578 DEBUG    Entering get()
2025-08-09 20:03:12,578 DEBUG     Entering _make_request()
2025-08-09 20:03:12,578 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/^VIX
2025-08-09 20:03:12,579 DEBUG params=frozendict.frozendict({'range': '1d', 'interval': '1d'})
2025-08-09 20:03:12,579 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:03:12,579 DEBUG cookie_mode = 'basic'
2025-08-09 20:03:12,579 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:03:12,580 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:03:12,580 DEBUG reusing cookie
2025-08-09 20:03:12,580 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:03:12,580 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:03:12,581 DEBUG reusing crumb
2025-08-09 20:03:12,581 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:03:12,581 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:03:12,582 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:03:12,684 DEBUG response code=200
2025-08-09 20:03:12,685 DEBUG     Exiting _make_request()
2025-08-09 20:03:12,685 DEBUG    Exiting get()
2025-08-09 20:03:12,685 DEBUG   Exiting _fetch_ticker_tz()
2025-08-09 20:03:12,687 DEBUG ('BEGIN', None)
2025-08-09 20:03:12,687 DEBUG ('INSERT INTO "_tz_kv" ("key", "value") VALUES (?, ?)', ['^VIX', 'America/Chicago'])
2025-08-09 20:03:12,693 DEBUG   Entering history()
2025-08-09 20:03:12,694 DEBUG ^VIX: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-05:00', 'period2': '2025-08-09 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:03:12,694 DEBUG    Entering get()
2025-08-09 20:03:12,695 DEBUG     Entering _make_request()
2025-08-09 20:03:12,695 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/^VIX
2025-08-09 20:03:12,695 DEBUG params=frozendict.frozendict({'period1': 1565499600, 'period2': 1754715600, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:03:12,696 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:03:12,696 DEBUG cookie_mode = 'basic'
2025-08-09 20:03:12,696 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:03:12,697 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:03:12,697 DEBUG reusing cookie
2025-08-09 20:03:12,697 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:03:12,698 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:03:12,698 DEBUG reusing crumb
2025-08-09 20:03:12,698 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:03:12,698 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:03:12,699 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:03:12,817 DEBUG response code=200
2025-08-09 20:03:12,817 DEBUG     Exiting _make_request()
2025-08-09 20:03:12,817 DEBUG    Exiting get()
2025-08-09 20:03:12,844 DEBUG ^VIX: yfinance received OHLC data: 2019-08-12 07:00:00 -> 2025-08-08 07:00:00
2025-08-09 20:03:12,851 DEBUG ^VIX: OHLC after cleaning: 2019-08-12 02:00:00-05:00 -> 2025-08-08 02:00:00-05:00
2025-08-09 20:03:12,860 DEBUG ^VIX: OHLC after combining events: 2019-08-12 00:00:00-05:00 -> 2025-08-08 00:00:00-05:00
2025-08-09 20:03:12,867 DEBUG ^VIX: yfinance returning OHLC: 2019-08-12 00:00:00-05:00 -> 2025-08-08 00:00:00-05:00
2025-08-09 20:03:12,867 DEBUG   Exiting history()
2025-08-09 20:03:12,868 DEBUG  Exiting history()
2025-08-09 20:03:12,872 DEBUG Exiting download()
2025-08-09 20:03:12,874 DEBUG Entering download()
2025-08-09 20:03:12,875 DEBUG  Entering history()
2025-08-09 20:03:12,876 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GNR', 1, 0])
2025-08-09 20:03:12,877 DEBUG   Entering _fetch_ticker_tz()
2025-08-09 20:03:12,877 DEBUG    Entering get()
2025-08-09 20:03:12,877 DEBUG     Entering _make_request()
2025-08-09 20:03:12,878 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/GNR
2025-08-09 20:03:12,878 DEBUG params=frozendict.frozendict({'range': '1d', 'interval': '1d'})
2025-08-09 20:03:12,878 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:03:12,878 DEBUG cookie_mode = 'basic'
2025-08-09 20:03:12,879 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:03:12,879 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:03:12,879 DEBUG reusing cookie
2025-08-09 20:03:12,879 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:03:12,880 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:03:12,880 DEBUG reusing crumb
2025-08-09 20:03:12,880 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:03:12,880 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:03:12,881 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:03:13,038 DEBUG response code=200
2025-08-09 20:03:13,039 DEBUG     Exiting _make_request()
2025-08-09 20:03:13,040 DEBUG    Exiting get()
2025-08-09 20:03:13,040 DEBUG   Exiting _fetch_ticker_tz()
2025-08-09 20:03:13,041 DEBUG ('BEGIN', None)
2025-08-09 20:03:13,042 DEBUG ('INSERT INTO "_tz_kv" ("key", "value") VALUES (?, ?)', ['GNR', 'America/New_York'])
2025-08-09 20:03:13,048 DEBUG   Entering history()
2025-08-09 20:03:13,049 DEBUG GNR: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:03:13,050 DEBUG    Entering get()
2025-08-09 20:03:13,051 DEBUG     Entering _make_request()
2025-08-09 20:03:13,052 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/GNR
2025-08-09 20:03:13,052 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:03:13,053 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:03:13,054 DEBUG cookie_mode = 'basic'
2025-08-09 20:03:13,054 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:03:13,055 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:03:13,056 DEBUG reusing cookie
2025-08-09 20:03:13,056 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:03:13,057 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:03:13,058 DEBUG reusing crumb
2025-08-09 20:03:13,058 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:03:13,059 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:03:13,060 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:03:13,223 DEBUG response code=200
2025-08-09 20:03:13,223 DEBUG     Exiting _make_request()
2025-08-09 20:03:13,224 DEBUG    Exiting get()
2025-08-09 20:03:13,242 DEBUG GNR: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:03:13,246 DEBUG GNR: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:03:13,271 DEBUG GNR: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:03:13,280 DEBUG GNR: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:03:13,281 DEBUG   Exiting history()
2025-08-09 20:03:13,281 DEBUG  Exiting history()
2025-08-09 20:03:13,286 DEBUG Exiting download()
2025-08-09 20:03:13,288 DEBUG Entering download()
2025-08-09 20:03:13,289 DEBUG  Entering history()
2025-08-09 20:03:13,289 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['XLU', 1, 0])
2025-08-09 20:03:13,290 DEBUG   Entering _fetch_ticker_tz()
2025-08-09 20:03:13,290 DEBUG    Entering get()
2025-08-09 20:03:13,291 DEBUG     Entering _make_request()
2025-08-09 20:03:13,291 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/XLU
2025-08-09 20:03:13,291 DEBUG params=frozendict.frozendict({'range': '1d', 'interval': '1d'})
2025-08-09 20:03:13,291 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:03:13,292 DEBUG cookie_mode = 'basic'
2025-08-09 20:03:13,292 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:03:13,292 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:03:13,293 DEBUG reusing cookie
2025-08-09 20:03:13,293 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:03:13,293 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:03:13,293 DEBUG reusing crumb
2025-08-09 20:03:13,294 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:03:13,294 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:03:13,294 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:03:13,439 DEBUG response code=200
2025-08-09 20:03:13,439 DEBUG     Exiting _make_request()
2025-08-09 20:03:13,440 DEBUG    Exiting get()
2025-08-09 20:03:13,440 DEBUG   Exiting _fetch_ticker_tz()
2025-08-09 20:03:13,441 DEBUG ('BEGIN', None)
2025-08-09 20:03:13,441 DEBUG ('INSERT INTO "_tz_kv" ("key", "value") VALUES (?, ?)', ['XLU', 'America/New_York'])
2025-08-09 20:03:13,443 DEBUG   Entering history()
2025-08-09 20:03:13,444 DEBUG XLU: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:03:13,445 DEBUG    Entering get()
2025-08-09 20:03:13,445 DEBUG     Entering _make_request()
2025-08-09 20:03:13,445 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/XLU
2025-08-09 20:03:13,446 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:03:13,446 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:03:13,447 DEBUG cookie_mode = 'basic'
2025-08-09 20:03:13,447 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:03:13,447 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:03:13,448 DEBUG reusing cookie
2025-08-09 20:03:13,448 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:03:13,448 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:03:13,448 DEBUG reusing crumb
2025-08-09 20:03:13,449 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:03:13,449 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:03:13,449 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:03:13,604 DEBUG response code=200
2025-08-09 20:03:13,606 DEBUG     Exiting _make_request()
2025-08-09 20:03:13,607 DEBUG    Exiting get()
2025-08-09 20:03:13,635 DEBUG XLU: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:03:13,640 DEBUG XLU: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:03:13,667 DEBUG XLU: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:03:13,675 DEBUG XLU: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:03:13,675 DEBUG   Exiting history()
2025-08-09 20:03:13,676 DEBUG  Exiting history()
2025-08-09 20:03:13,679 DEBUG Exiting download()
2025-08-09 20:03:13,681 DEBUG Entering download()
2025-08-09 20:03:13,682 DEBUG  Entering history()
2025-08-09 20:03:13,682 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['INDA', 1, 0])
2025-08-09 20:03:13,683 DEBUG   Entering _fetch_ticker_tz()
2025-08-09 20:03:13,683 DEBUG    Entering get()
2025-08-09 20:03:13,683 DEBUG     Entering _make_request()
2025-08-09 20:03:13,684 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/INDA
2025-08-09 20:03:13,684 DEBUG params=frozendict.frozendict({'range': '1d', 'interval': '1d'})
2025-08-09 20:03:13,684 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:03:13,685 DEBUG cookie_mode = 'basic'
2025-08-09 20:03:13,685 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:03:13,685 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:03:13,685 DEBUG reusing cookie
2025-08-09 20:03:13,686 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:03:13,686 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:03:13,686 DEBUG reusing crumb
2025-08-09 20:03:13,686 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:03:13,686 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:03:13,687 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:03:13,826 DEBUG response code=200
2025-08-09 20:03:13,826 DEBUG     Exiting _make_request()
2025-08-09 20:03:13,827 DEBUG    Exiting get()
2025-08-09 20:03:13,827 DEBUG   Exiting _fetch_ticker_tz()
2025-08-09 20:03:13,827 DEBUG ('BEGIN', None)
2025-08-09 20:03:13,828 DEBUG ('INSERT INTO "_tz_kv" ("key", "value") VALUES (?, ?)', ['INDA', 'America/New_York'])
2025-08-09 20:03:13,829 DEBUG   Entering history()
2025-08-09 20:03:13,830 DEBUG INDA: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:03:13,830 DEBUG    Entering get()
2025-08-09 20:03:13,830 DEBUG     Entering _make_request()
2025-08-09 20:03:13,831 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/INDA
2025-08-09 20:03:13,831 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:03:13,831 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:03:13,832 DEBUG cookie_mode = 'basic'
2025-08-09 20:03:13,832 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:03:13,832 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:03:13,832 DEBUG reusing cookie
2025-08-09 20:03:13,833 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:03:13,833 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:03:13,833 DEBUG reusing crumb
2025-08-09 20:03:13,833 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:03:13,834 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:03:13,834 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:03:13,994 DEBUG response code=200
2025-08-09 20:03:13,995 DEBUG     Exiting _make_request()
2025-08-09 20:03:13,997 DEBUG    Exiting get()
2025-08-09 20:03:14,024 DEBUG INDA: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:03:14,026 DEBUG INDA: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:03:14,037 DEBUG INDA: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:03:14,044 DEBUG INDA: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:03:14,044 DEBUG   Exiting history()
2025-08-09 20:03:14,045 DEBUG  Exiting history()
2025-08-09 20:03:14,048 DEBUG Exiting download()
2025-08-09 20:03:14,054 DEBUG Starting new HTTPS connection (1): fred.stlouisfed.org:443
2025-08-09 20:03:14,543 DEBUG https://fred.stlouisfed.org:443 "GET /graph/fredgraph.csv?id=DGS10 HTTP/1.1" 200 62241
2025-08-09 20:03:14,614 DEBUG Starting new HTTPS connection (1): fred.stlouisfed.org:443
2025-08-09 20:03:15,132 DEBUG https://fred.stlouisfed.org:443 "GET /graph/fredgraph.csv?id=TB3MS HTTP/1.1" 200 4344
2025-08-09 20:03:15,149 DEBUG Starting new HTTPS connection (1): fred.stlouisfed.org:443
2025-08-09 20:03:15,562 DEBUG https://fred.stlouisfed.org:443 "GET /graph/fredgraph.csv?id=BAA10YM HTTP/1.1" 200 3349
2025-08-09 20:03:15,573 DEBUG Starting new HTTPS connection (1): fred.stlouisfed.org:443
2025-08-09 20:03:16,976 DEBUG https://fred.stlouisfed.org:443 "GET /graph/fredgraph.csv?id=TEDRATE HTTP/1.1" 200 31322
2025-08-09 20:03:17,038 DEBUG Starting new HTTPS connection (1): fred.stlouisfed.org:443
2025-08-09 20:03:17,296 DEBUG https://fred.stlouisfed.org:443 "GET /graph/fredgraph.csv?id=NAPM HTTP/1.1" 404 28941
2025-08-09 20:03:17,442 DEBUG https://fred.stlouisfed.org:443 "GET /graph/fredgraph.csv?id=NAPM HTTP/1.1" 404 28941
2025-08-09 20:03:17,590 DEBUG https://fred.stlouisfed.org:443 "GET /graph/fredgraph.csv?id=NAPM HTTP/1.1" 404 28941
2025-08-09 20:03:17,730 DEBUG https://fred.stlouisfed.org:443 "GET /graph/fredgraph.csv?id=NAPM HTTP/1.1" 404 28941
2025-08-09 20:03:17,863 WARNING Retry 1/3 after error: Unable to read URL: https://fred.stlouisfed.org/graph/fredgraph.csv?id=NAPM
Response Text:
b'<!DOCTYPE html>\r\n<html lang="en">\r\n<head>\r\n    <meta charset="utf-8">\r\n    <meta http-equiv="X-UA-Compatible" content="IE=edge">\r\n    <meta name="viewport" content="width=device-width, initial-scale=1">\r\n    <title>Error - St. Louis Fed</title>\r\n    <meta name="description" content="">\r\n    <meta name="keywords" content="">    \r\n    <link rel="stylesheet" type="text/css" href="/assets/bootstrap/dist/css/bootstrap.min.css">\r\n    <link rel="stylesheet" type="text/css" href="/css/home.min.css?1553087253">\r\n    <link rel="stylesheet" type="text/css" href="/assets/fontawesome-free/css/all.min.css">\r\n    <link rel="stylesheet" type="text/css" href="/assets/select2/dist/css/select2.min.css">\r\n    <style>p {\r\n        margin-bottom: 1.5em;\r\n    }</style>\r\n</head>\r\n<body>\r\n<link rel="preconnect" href="https://fonts.googleapis.com">\n<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>\n<link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">\n<link href="https://fonts.googleapis.com/css2?family=Roboto+Slab&display=swap" rel="stylesheet">\n<!--googleoff: snippet-->\n<a href="#content-container" class="skip-to">Skip to main content</a>\n<!--googleon: snippet-->\n<a id="top"></a>\n<!--Move content shift styles internal to boost performance scores-->\n<style>\n    #zoom-and-share {\n        position:relative;\n        background-color: rgb(225, 233, 240);\n        min-height: 437px;\n    }\n</style>\n<div id="container">\n    <header>\n        <h1 class="visually-hidden">Federal Reserve Economic Data</h1>\n        <nav class="navbar navbar-expand-lg header-not-home py-0 EL-nonhomepage-header EL-header-and-subheader">\n            <div id="hidden-user" class=\'hide\'></div>\n            <div id="action-modal"></div>\n            <div class="col-12 d-none d-lg-block">\n                <div class="col-12 d-none d-lg-flex">\n                    <a class="bank-logo-gtm" target="_blank" href="https://www.stlouisfed.org">\n                        <img class="research-logo-gtm" src="//fred.stlouisfed.org/images/Small_Stl_Fed_Logo.svg" alt="Federal Reserve Bank of St. Louis">\n                    </a>\n                    <hr class=" hr-post-frb-stls-logo">\n                </div>\n                <div class="col-12 d-none d-lg-flex">\n                    <div class="col-3 align-content-center">\n                        <a class="fred-logo-gtm" target="_blank" href="//fred.stlouisfed.org">\n                            <img class="header-logo-eagle" src="//fred.stlouisfed.org/images/FRED_Logo_Header.svg" alt="FRED homepage">\n                        </a>\n                    </div>    \n                    <div class="col-9 d-none d-lg-flex align-content-center justify-content-end">\n                        <div class=\'input-group EL-header-search-container\' id="search-container-header">\n    <select id="head-search" class=\'EL-header-search\'>\n        <option></option>\n    </select>\n    <input type="hidden" name="st" class="search-text-input">\n    <button class="search-submit-select2" id="select2-nav-search-button" type="submit" aria-label="Submit Search">\n        <i class="fa fa-search" title="Submit Search"></i>\n    </button>\n</div>                        <nav id="blueheader-navbar-nav">\n                            <ul id="blueheader-navbar" class="nav float-end">\n                                <li class="blueheader-navbar-item center-content-vertically switch-products-gtm">\n                                    <span id="switchprod-popover-container" class="switchprod-popover-container">\n\n  <button type="button" id="switchProd" data-toggle="popover" aria-controls="switch-prod-list" \n    aria-haspopup="true" class="header-popover" aria-label="Toggle Explore Our Apps Menu">\n    <img class="Switch-Products-gtm" src="//fred.stlouisfed.org/images/Waffle_Menu_off.svg" alt="Toggle Explore Our Apps Menu" />\n  </button>\n</span>\n\n<div id="switchprod-popover" class="hide">\n  <!-- empty alt values handle older screen readers that don\'t handle WAI-ARIA roles. Both methods allow the screenreader to skip the image and not read the filename to the user. -->\n<h2 class="explore-products-desk">Explore Our Apps</h2>\n<hr>\n<ul id="switch-prod-list" class="list-group switch-products-list" role="menu" aria-labelledby="switchProduct">\n    <li role="presentaion" id="ham-fred-dev" class="list-group-item product-fred">\n      <a class="d-flex burger-fred-gtm" role="menuitem" href="//fred.stlouisfed.org">\n        <div>\n          <img class="switch-icon-padding burger-fred-gtm" src="//fred.stlouisfed.org/images/FRED_Logo_for_Waffle.svg" alt="" role="presentation">\n        </div>\n        <div>\n          <h3 class="burger-fred-gtm">FRED</h3>\n          <p>Tools and resources to find and use economic data worldwide</p>\n        </div>\n      </a>\n    </li>\n    <li role="presentaion" id="ham-fraser" class="list-group-item">\n      <a rel="noopener" target="_blank" class="d-flex burger-fraser-gtm" role="menuitem" href="https://fraser.stlouisfed.org/">\n        <div>\n          <img class="switch-icon-padding burger-fraser-gtm" src="//fred.stlouisfed.org/images/FRASER_Logo_for_Waffle.svg" alt="" role="presentation">\n        </div>\n        <div>\n          <h3 class="burger-fraser-gtm">FRASER</h3>\n          <p>U.S. financial, economic, and banking history</p>\n        </div>\n      </a>\n    </li>\n    <li role="presentaion" id="ham-alfred" class="list-group-item">\n      <a rel="noopener" target="_blank" class="d-flex burger-alfred-gtm" role="menuitem" href="//alfred.stlouisfed.org">\n        <div>\n          <img class="switch-icon-padding burger-alfred-gtm" src="//fred.stlouisfed.org/images/ALFRED_Logo_for_Waffle.svg" alt="" role="presentation">\n        </div>\n        <div>\n          <h3 class="burger-alfred-gtm">ALFRED</h3>\n          <p>Vintages of economic data from specific dates in history</p>\n        </div>\n      </a>\n    </li>\n    <li role="presentaion" id="ham-ecolowdown" class="list-group-item">\n      <a rel="noopener" target="_blank" class="d-flex burger-econlowdown-gtm" role="menuitem" href="https://cassidi.stlouisfed.org/index">\n        <div>\n          <img class="burger-econlowdown-gtm" src="//fred.stlouisfed.org/images/CASSIDI_Logo_for_Waffle.svg" alt="" role="presentation">\n        </div>\n        <div>\n          <h3 class="burger-econlowdown-gtm">CASSIDI</h3>\n          <p>View banking market concentrations and perform HHI analysis</p>\n        </div>\n      </a>\n  </li>\n</ul>\n</div>                                </li>\n                                <li class="blueheader-navbar-item center-content-vertically">\n                                    <div class="hidden-xs" id="signin-wrap">\n                                        <div id="user-nav" class="EL-my-account-link"></div>\n                                    </div>\n                                </li>\n                            </ul>\n                        </nav>\n                    </div>\n                </div>\n            </div>\n            <div class="col-12 d-lg-none">\n                <div class="fred-logo-div col-6 align-content-center">\n                    <a class="fred-logo-gtm" href="//fred.stlouisfed.org/">\n                        <img class="header-logo" src="//fred.stlouisfed.org/images/FRED_Logo_Header_white_text.svg" alt="FRED homepage">\n                    </a>\n                </div>\n                <div class="blueheader-navbar center-content-vertically">\n                    <button type="button" id="search-btn-open" aria-controls="mobile-search-container" \n    onclick="mobileSearchToggle(\'open\')" aria-label="Open Search">\n    <i class="fas fa-solid fa-search" title="Open Search"></i>\n</button>\n<button type="button" id="search-btn-close" class="hide" aria-controls="mobile-search-container" \n    onclick="mobileSearchToggle(\'close\')" aria-label="Close Search" disabled="true">\n    <i class="fa-solid fa-x" title="Close Search"></i>\n</button>  \n                    <button type="button" id="hamburger-btn-open" class="hamburger-gtm" aria-controls="hamburger-drawer" \n    onclick="hamburgerMenuToggle(\'open\')" aria-label="Open Mobile Menu">\n    <i id="hamburger" class="fas fa-bars hamburger-header" title="Open Mobile Menu"></i>\n</button> \n<button type="button" id="hamburger-btn-close" class="close-btn burger-close-gtm hide" aria-controls="hamburger-drawer" \n    onclick="hamburgerMenuToggle(\'close\')" aria-label="Close Mobile Menu">\n    <i class="fa-solid fa-x" title="Close Mobile Menu"></i>\n</button> \n                </div>\n            </div>\n            <div id="notifications-container"></div>\n        </nav>\n        <div class="blueheader-navbar d-lg-none">\n            <div id="mobile-search-container" class="hide col-12">\n                <input type="hidden" id="mobile-search-input" class="search-text-input" placeholder="Search FRED Data..." disabled="disabled">\n                <button type="submit" class="search-submit-select2" id="mobile-search-submit" disabled="disabled">\n                    <i class="fas fa-solid fa-search" title="Search"></i>\n                </button>\n            </div>\n            <nav id="hamburger-drawer" class="hide">\n    <div class="slide-content">\n        <div id="hamburger-navigation">\n            <div id="hamburger-home">\n                <ul class="list-group flush-list hamburger-list col-12">\n                    <li class="list-group-item">\n                        <a class="burger-calendar-gtm" href="https://fred.stlouisfed.org/releases/calendar">Release Calendar</a>\n                    </li>\n                    <li class="list-group-item hamburger-menu-item">\n                        <button type="button" class="burger-tools-gtm" onclick="toggleMenuNavigation(\'hamburger-tools\', true)" aria-controls="hamburger-tools">Tools\n                            <i class="fas fa-solid fa-angle-down" title="Toggle FRED Tools Submenu"></i>\n                        </button>\n                        <ul id="hamburger-tools" role="menu" class="hide list-group hamburger-submenu-list col-12">\n                            <li role="presentation" class="list-group-item">\n                                <a role="menuitem" class="burger-fred-excel-add-in-gtm" href="https://fred.stlouisfed.org/fred-addin"> FRED Add-in for Excel</a>\n                            </li>\n                            <li role="presentation" class="list-group-item">\n                                <a role="menuitem" class="burger-fred-api-gtm" href="https://fred.stlouisfed.org/docs/api/fred"> FRED API</a>\n                            </li>\n                            <li role="presentation" class="list-group-item">\n                                <a role="menuitem" class="burger-fred-mobile-apps-gtm" href="https://fred.stlouisfed.org/fred-mobile"> FRED Mobile Apps</a>\n                            </li>\n                        </ul>\n                    </li>\n                    <li class="list-group-item">\n                        <a class="burger-news-gtm" href="https://news.research.stlouisfed.org/category/fred-announcements/">News</a>\n                    </li>\n                    <li class="list-group-item">\n                        <a class="burger-blog-gtm" href="https://fredblog.stlouisfed.org">Blog</a>\n                    </li>\n                    <li class="list-group-item hamburger-menu-item">\n                        <button type="button" class="burger-about-gtm" onclick="toggleMenuNavigation(\'hamburger-about-fred\', true)" aria-controls="hamburger-about-fred">About\n                            <i class="fas fa-solid fa-angle-down" title="Toggle About FRED Submenu"></i>\n                        </button>\n                        <ul id="hamburger-about-fred" role="menu" class="hide list-group hamburger-submenu-list col-12">\n                            <li role="presentation" class="list-group-item">\n                                <a role="menuitem" class="burger-fred-about-gtm" href="https://fredhelp.stlouisfed.org/fred/about/about-fred/what-is-fred/"> What is FRED</a>\n                            </li>\n                            <li role="presentation" class="list-group-item">\n                                <a role="menuitem" class="burger-tutorials-gtm" href="https://fredhelp.stlouisfed.org"> Tutorials</a>\n                            </li>\n                            <li role="presentation" class="list-group-item">\n                                <a role="menuitem" class="burger-data-literacy-gtm" href="https://fred.stlouisfed.org/digital-badges/">\n                                Digital Badges\n                                </a>\n                            </li>\n                            <li role="presentation" class="list-group-item">\n                                <a role="menuitem" class="burger-contact-us-gtm" href="https://fred.stlouisfed.org/contactus/"> Contact Us</a>\n                            </li>\n                        </ul>\n                    </li>\n                    <li class="list-group-item">\n                        <a class="burger-myaccount-gtm" href="https://fredaccount.stlouisfed.org">My Account</a>\n                    </li>\n                    <li class="list-group-item hamburger-menu-item">\n                        <button type="button" class="burger-switch-gtm" onclick="toggleMenuNavigation(\'hamburger-products\', true)" aria-controls="hamburger-products">\n                            Explore Our Apps\n                            <i class="fas fa-solid fa-angle-down" title="Toggle Apps Submenu"></i>\n                        </button>\n                        <div id="hamburger-products" class="hide">\n                            <!-- empty alt values handle older screen readers that don\'t handle WAI-ARIA roles. Both methods allow the screenreader to skip the image and not read the filename to the user. -->\n<h2 class="explore-products-desk">Explore Our Apps</h2>\n<hr>\n<ul id="switch-prod-list" class="list-group switch-products-list" role="menu" aria-labelledby="switchProduct">\n    <li role="presentaion" id="ham-fred-dev" class="list-group-item product-fred">\n      <a class="d-flex burger-fred-gtm" role="menuitem" href="//fred.stlouisfed.org">\n        <div>\n          <img class="switch-icon-padding burger-fred-gtm" src="//fred.stlouisfed.org/images/FRED_Logo_for_Waffle.svg" alt="" role="presentation">\n        </div>\n        <div>\n          <h3 class="burger-fred-gtm">FRED</h3>\n          <p>Tools and resources to find and use economic data worldwide</p>\n        </div>\n      </a>\n    </li>\n    <li role="presentaion" id="ham-fraser" class="list-group-item">\n      <a rel="noopener" target="_blank" class="d-flex burger-fraser-gtm" role="menuitem" href="https://fraser.stlouisfed.org/">\n        <div>\n          <img class="switch-icon-padding burger-fraser-gtm" src="//fred.stlouisfed.org/images/FRASER_Logo_for_Waffle.svg" alt="" role="presentation">\n        </div>\n        <div>\n          <h3 class="burger-fraser-gtm">FRASER</h3>\n          <p>U.S. financial, economic, and banking history</p>\n        </div>\n      </a>\n    </li>\n    <li role="presentaion" id="ham-alfred" class="list-group-item">\n      <a rel="noopener" target="_blank" class="d-flex burger-alfred-gtm" role="menuitem" href="//alfred.stlouisfed.org">\n        <div>\n          <img class="switch-icon-padding burger-alfred-gtm" src="//fred.stlouisfed.org/images/ALFRED_Logo_for_Waffle.svg" alt="" role="presentation">\n        </div>\n        <div>\n          <h3 class="burger-alfred-gtm">ALFRED</h3>\n          <p>Vintages of economic data from specific dates in history</p>\n        </div>\n      </a>\n    </li>\n    <li role="presentaion" id="ham-ecolowdown" class="list-group-item">\n      <a rel="noopener" target="_blank" class="d-flex burger-econlowdown-gtm" role="menuitem" href="https://cassidi.stlouisfed.org/index">\n        <div>\n          <img class="burger-econlowdown-gtm" src="//fred.stlouisfed.org/images/CASSIDI_Logo_for_Waffle.svg" alt="" role="presentation">\n        </div>\n        <div>\n          <h3 class="burger-econlowdown-gtm">CASSIDI</h3>\n          <p>View banking market concentrations and perform HHI analysis</p>\n        </div>\n      </a>\n  </li>\n</ul>\n                        </div>\n                    </li>\n                    <li class="list-group-item">\n                        <a class="burger-stls-home-gtm" href="https://www.stlouisfed.org/">STL Fed Home Page</a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</nav>\n        </div>\n        <div class=\'navbar navbar-expand-lg sub-header EL-header-and-subheader\'>\n            <div class="container-fluid gx-0">\n                <div class="col d-flex justify-content-end">\n                    <div class="container-fluid gx-0">\n                        \n<hr class="col-12 hr-pre-subheader-nav d-none d-lg-block">\n<nav class="col-12 navbar EL-main-nav navbar-expand-sm d-none d-lg-flex" id="subheader-nav">\n    <div class="navbar-collapse collapse d-flex justify-content-end">\n        <ul id="subheader-navbar" class="nav float-end navbar-nav">\n            <li class="nav-li-subheader">\n                <a href="https://fred.stlouisfed.org/releases/calendar" class="nav-releasecal-subheader-gtm">Release Calendar</a>\n            </li>\n            <li class="nav-li-subheader">\n              <span class="sub-header-nav-tools-gtm  header-popover fred-tools-container">\n  <button type="button" id="fred-tools-link" class="align-icon header-popover tools-gtm" \n    aria-haspopup="true" aria-controls="fred-tools-menu" data-toggle="popover" \n    onclick="toggleMenuNavigation(\'fred-tools-popover\')">Tools\n    <i class="fas fa-angle-down" title="Toggle Tools Menu"></i>\n  </button>\n</span>\n\n<div id="fred-tools-popover" class="hide">\n  <ul id="fred-tools-menu" role="menu" class="header-list-popover list-group flush-list">\n    <li role="presentation" class="list-group-item">\n      <a role="menuitem" class="homepage-nav-tools-fred-excel-addin-gtm" href="https://fred.stlouisfed.org/fred-addin">FRED Add-in for Excel</a>\n    </li>\n    <li role="presentation" class="list-group-item">\n      <a role="menuitem" class="homepage-nav-tools-fred-api-gtm" href="https://fred.stlouisfed.org/docs/api/fred">FRED API</a>\n    </li>\n    <li role="presentation" class="list-group-item">\n      <a role="menuitem" class="homepage-nav-tools-fred-mobile-gtm" href="https://fred.stlouisfed.org/fred-mobile">FRED Mobile Apps</a>\n    </li>\n  </ul>\n</div>            </li>\n            <li class="nav-li-subheader">\n                <a href="https://news.research.stlouisfed.org/category/fred-announcements/" class="nav-news-subheader-gtm">News</a>\n            </li>\n            <li class="nav-li-subheader">\n                <a href="https://fredblog.stlouisfed.org" class="nav-fredblog-subheader-gtm">Blog</a>\n            </li>\n            <li class="nav-li-subheader">\n              \n<span class="subheader-nav-about-gtm about-fred-container">\n  <button type="button" id="about-fred-link" class="align-icon header-popover about-gtm" \n    data-toggle="popover" aria-controls="about-fred-menu" aria-haspopup="true"\n    onclick="toggleMenuNavigation(\'about-fred-popover\')">About\n    <i class="fas fa-angle-down" alt="Toggle About Menu"></i>\n  </button>\n</span>\n\n<div id="about-fred-popover" class="hide">\n  <ul id="about-fred-menu" role="menu" aria-labelledby="about-fred-link" class="header-list-popover list-group flush-list">\n    <li role="presentation" class="list-group-item">\n      <a role="menuitem" class="about-fred-what-is-gtm" href="https://fredhelp.stlouisfed.org/fred/about/about-fred/what-is-fred/">\n        What is FRED\n      </a>\n    </li>\n    <li role="presentation" class="list-group-item">\n      <a role="menuitem" class="about-fred-tutorials-gtm" href="https://fredhelp.stlouisfed.org">\n        Tutorials\n      </a>\n    </li>\n    <li role="presentation" class="list-group-item">\n      <a role="menuitem" class="about-research-data-literacy-gtm" href="https://fred.stlouisfed.org/digital-badges/">\n        Digital Badges\n      </a>\n    </li>\n    <li role="presentation" class="list-group-item">\n      <a role="menuitem" class="about-fred-contact-gtm" href="https://fred.stlouisfed.org/contactus/ ">\n        Contact Us\n      </a>\n    </li>\n  </ul>\n</div>\n            </li>\n        </ul>\n    </div>\n</nav>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </header>\n\r\n<!--BEGIN CONTENT-->\r\n<div class="container">\r\n    <h1>Looking for Something?</h1>\r\n    <p class="large">We\'re sorry, the page you were looking for cannot be found. Please feel free\r\n        to <a href="/contactus/">contact us</a> if the problem persists.</p>\r\n    <p class="large">Searching may help find what are you looking for. If all else fails, you can head\r\n        <a href="/">Home</a>\r\n    </p>\r\n    <form action="/searchresults" id="search-form-404">\r\n        <label for="search-text">Search for:</label><br>\r\n        <input type="text" name="st" id="search-text" size="50" class="form-control">\r\n        <input type="submit" class="btn btn-default" value="Search" id="404-search-button" name="404-search-button">\r\n    </form>\r\n</div>\r\n<link href="/css/footer.min.css?1553087256" rel="stylesheet" media="all">\r\n<!--END CONTENT-->\r\n<br class="clear">\n</div>\n\n<div class="hidden-print d-lg-none icon-container sticky-bottom btt-ct col-12">\n    <a id="back-to-top" class="back-to-top" href="#top">\n        <i aria-hidden="true" class="fas fa-solid fa-chevron-up" title="Back to Top"></i>\n    <span class="fa-sr-only">Back to Top</span></a>\n</div>\n<button disabled id="filter-button" class="hidden drawer-dropdown-trigger filter-tags-btn btn sticky-bottom btn-block btn-default dropdown-is-active">\n    <div class="filter-button-inner">\n        <i class="fa fa-filter" style="padding-right:5px;"></i>Filter\n        <span class="badge badge-primary subpage-badge-primary">0</span>\n    </div>\n</button>\n\n<div class="footer2 hidden-print row EL-footer2">\n    <div class="container d-md-flex">\n        <div class="col-md-6 col-lg-5 col-12">\n            <div class="col-12">\n                <h3 class="col-12">Subscribe to the FRED newsletter</h3>\n                <form id="subscribe-div" class="form-horizontal form-control newsletter-form">\n                    <div class="col-12">\n                        <div class="input-group">\n                            <input id="subscribe-email-input" type="text" name="email" placeholder="Email"\n                            class="form-control email" aria-label="email">\n                            <button id="subscribe-email-btn" type="button"\n                            class="btn subscribe-newsletter-btn-gtm">\n                            Subscribe</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class="col-12">\n                <h3 class="col-12">Follow us</h3>\n                <div id="follow-icons" class="col-12">\n                    <span id="li-container" class="icon-container">\n                        <a href="http://bit.ly/d056zL">\n                            <i aria-hidden="true" class="fab fa-brands fa-linkedin-in" title="Linked In"></i>\n                            <span class="fa-sr-only">Saint Louis Fed linkedin page</span></a></span>\n                    <span id="fb-container" class="icon-container">\n                        <a href="https://www.facebook.com/stlfed">\n                            <i aria-hidden="true" class="fab fa-brands fa-facebook-f" title="Facebook"></i>\n                            <span class="fa-sr-only">Saint Louis Fed facebook page</span></a></span>\n                    <span id="x-container" class="icon-container">\n                        <a href="http://bit.ly/9ngC3L">\n                            <i aria-hidden="true" class="fab fa-brands fa-x-twitter" title="X (formerly Twitter)"></i>\n                            <span class="fa-sr-only">Saint Louis Fed X page</span></a></span>\n                    <span id="yt-container" class="icon-container">\n                        <a href="http://bit.ly/aY9TVF">\n                            <i aria-hidden="true" class="fab fa-brands fa-youtube" title="YouTube"></i>\n                            <span class="fa-sr-only">Saint Louis Fed YouTube page</span></a></span> \n                </div>\n            </div>\n        </div>\n        <div class="col-md-1 col-lg-2 d-none d-md-block">&nbsp;</div>\n        <div class="col-md-4 col-lg-3 col-7 need-help">\n            <h3 class="col-12">Need Help?</h3>\n            <div class="col-12">\n                <div class="footer-link">\n                    <a class="footer-questions-gtm q-and-a-link-gtm" href="//fred.stlouisfed.org/contactus/">\n                        Questions or Comments</a></div>\n                <div class="footer-link">\n                    <a class="footer-fredhelp-gtm" href="//fredhelp.stlouisfed.org/">FRED Help</a></div>\n            </div>\n            <hr class="col-12">\n            <div class="col-12">\n                <div class="footer-link">\n                    <a href="//fred.stlouisfed.org/legal/">Legal</a></div>\n                <div class="footer-link">\n                    <a href="//research.stlouisfed.org/privacy.html">Privacy Notice & Policy</a></div>\n            </div>\n        </div>\n        <div class="col-md-1 col-lg-2 d-none d-md-block">&nbsp;</div>\n    </div>\n</div>\n\n<script>\n    // function to parse cookies, and return the value\n    function getCookie(name) {\n        var cookies = document.cookie.split(\';\');\n        for (var i in cookies) {\n            var cookie = cookies[i].trim().split(\'=\');\n            if (cookie[0] == name) {\n                return cookie[1];\n            }\n        }\n        return null;\n    }\n    // certain pages in FRED set a custom tag variable\n    // this gets sent to Google Analytics so we can see what tags people are using\n    if (window.tags) {\n        dataLayer.push({ \'tags\': tags });\n\n    }\n\n    // if the user is logged in, send the value of the liruid cookie to Google Analytics\n    var researchLiruid = getCookie(\'research-liruid\');\n    dataLayer.push({ \'userId\': researchLiruid });\n\n</script>\n<script src="//fred.stlouisfed.org/assets/jquery/dist/1754599989.jquery.min.js" type="text/javascript"></script>\n<script src="//fred.stlouisfed.org/assets/popperjs/dist/umd/1754599989.popper.min.js"></script>\n<script src="//fred.stlouisfed.org/assets/bootstrap/dist/js/1754599988.bootstrap.min.js"></script>\n<script src="//fred.stlouisfed.org/assets/select2/dist/js/1754599989.select2.full.min.js"></script>\n<script>\n    // force expire the .fred.stlouisfed.org _ga cookie\n    document.cookie = document.cookie + \'_ga=;domain=.fred.stlouisfed.org;expires=Sat, 01-Jan-2000 00:00:00 GMT\';\n</script>\n\n<script defer src="//fred.stlouisfed.org/assets/jquery-menu-aim/1754599989.jquery.menu-aim.min.js"></script>\n\n<script src="//fred.stlouisfed.org/js/1754599989.common.min.js"></script>\n\n<script src="//fred.stlouisfed.org/assets/js-cookie/src/js.cookie.js"></script>\n<script src="//fred.stlouisfed.org/js/1754599989.508.min.js"></script>\n\n<script>\n    var appConfig = {\n        uapi_host: \'https://fred.stlouisfed.org/uapi\',\n        research_host: \'https://research.stlouisfed.org\',\n        fred_host: \'https://fred.stlouisfed.org\',\n        alfred_host: \'https://alfred.stlouisfed.org\',\n        gsi_client_id: \'115290014367-vpb89b600koe9kn0njeeq38c1unfr3gk.apps.googleusercontent.com\',\n        fred_account_host: \'https://fredaccount.stlouisfed.org\',\n    };\n\n    var domain_suffix = (window.location.hostname.split(".")[0].split("-")[1] || \'\');\n    appConfig.logged_in = Cookies.get(\'research-lirua\' + (domain_suffix ? \'-\' + domain_suffix : \'\')) !== null && Cookies.get(\'research-lirua\' + (domain_suffix ? \'-\' + domain_suffix : \'\')) !== undefined;\n    var getAuth = function (callback) {\n        if (typeof callback === \'function\') {\n            callback();\n        }\n        return;\n    };\n    window.getAuth = getAuth;\n\n</script>\n\n<script>\n    <!--suppress back to top before scroll-->\n    window.onscroll = function(){\n        backTop = $("#back-to-top");\n        window.pageYOffset >= 205 ? backTop.css(\'display\', \'block\') : backTop.css(\'display\', \'none\');\n    }\n\n</script>\n\n<script defer src="//fred.stlouisfed.org/js/1754599989.banner.js"></script>\n<script src="//accounts.google.com/gsi/client" async defer></script>\n<script src="//fred.stlouisfed.org/assets/research/fred-account-react/dist/1754599989.main.dist.js"></script>\n<script src="//fred.stlouisfed.org/assets/research/fred-account-react/dist/1754599989.vendor.dist.js"></script>\n\n<script type="text/javascript">\n    // update mobile footer filter bar active filter count to content.tagsDrawers tags-number\n    $(\'.filter-button-inner .badge\').text($(\'.tags-number\').text());\n</script>\n\r\n<script type="text/javascript"  src="/EPNAkEJdsI9Q-zn__5qe/aGD5kDk4zwrVDV/Z1VmRmZ6JA/JnFN/Tw1HGycB"></script></body>\r\n</html>\r\n'
2025-08-09 20:03:19,888 DEBUG Starting new HTTPS connection (1): fred.stlouisfed.org:443
2025-08-09 20:03:19,984 DEBUG https://fred.stlouisfed.org:443 "GET /graph/fredgraph.csv?id=NAPM HTTP/1.1" 404 28941
2025-08-09 20:03:20,150 DEBUG https://fred.stlouisfed.org:443 "GET /graph/fredgraph.csv?id=NAPM HTTP/1.1" 404 28941
2025-08-09 20:03:20,302 DEBUG https://fred.stlouisfed.org:443 "GET /graph/fredgraph.csv?id=NAPM HTTP/1.1" 404 28941
2025-08-09 20:03:20,485 DEBUG https://fred.stlouisfed.org:443 "GET /graph/fredgraph.csv?id=NAPM HTTP/1.1" 404 28941
2025-08-09 20:03:20,626 WARNING Retry 2/3 after error: Unable to read URL: https://fred.stlouisfed.org/graph/fredgraph.csv?id=NAPM
Response Text:
b'<!DOCTYPE html>\r\n<html lang="en">\r\n<head>\r\n    <meta charset="utf-8">\r\n    <meta http-equiv="X-UA-Compatible" content="IE=edge">\r\n    <meta name="viewport" content="width=device-width, initial-scale=1">\r\n    <title>Error - St. Louis Fed</title>\r\n    <meta name="description" content="">\r\n    <meta name="keywords" content="">    \r\n    <link rel="stylesheet" type="text/css" href="/assets/bootstrap/dist/css/bootstrap.min.css">\r\n    <link rel="stylesheet" type="text/css" href="/css/home.min.css?1553087253">\r\n    <link rel="stylesheet" type="text/css" href="/assets/fontawesome-free/css/all.min.css">\r\n    <link rel="stylesheet" type="text/css" href="/assets/select2/dist/css/select2.min.css">\r\n    <style>p {\r\n        margin-bottom: 1.5em;\r\n    }</style>\r\n</head>\r\n<body>\r\n<link rel="preconnect" href="https://fonts.googleapis.com">\n<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>\n<link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">\n<link href="https://fonts.googleapis.com/css2?family=Roboto+Slab&display=swap" rel="stylesheet">\n<!--googleoff: snippet-->\n<a href="#content-container" class="skip-to">Skip to main content</a>\n<!--googleon: snippet-->\n<a id="top"></a>\n<!--Move content shift styles internal to boost performance scores-->\n<style>\n    #zoom-and-share {\n        position:relative;\n        background-color: rgb(225, 233, 240);\n        min-height: 437px;\n    }\n</style>\n<div id="container">\n    <header>\n        <h1 class="visually-hidden">Federal Reserve Economic Data</h1>\n        <nav class="navbar navbar-expand-lg header-not-home py-0 EL-nonhomepage-header EL-header-and-subheader">\n            <div id="hidden-user" class=\'hide\'></div>\n            <div id="action-modal"></div>\n            <div class="col-12 d-none d-lg-block">\n                <div class="col-12 d-none d-lg-flex">\n                    <a class="bank-logo-gtm" target="_blank" href="https://www.stlouisfed.org">\n                        <img class="research-logo-gtm" src="//fred.stlouisfed.org/images/Small_Stl_Fed_Logo.svg" alt="Federal Reserve Bank of St. Louis">\n                    </a>\n                    <hr class=" hr-post-frb-stls-logo">\n                </div>\n                <div class="col-12 d-none d-lg-flex">\n                    <div class="col-3 align-content-center">\n                        <a class="fred-logo-gtm" target="_blank" href="//fred.stlouisfed.org">\n                            <img class="header-logo-eagle" src="//fred.stlouisfed.org/images/FRED_Logo_Header.svg" alt="FRED homepage">\n                        </a>\n                    </div>    \n                    <div class="col-9 d-none d-lg-flex align-content-center justify-content-end">\n                        <div class=\'input-group EL-header-search-container\' id="search-container-header">\n    <select id="head-search" class=\'EL-header-search\'>\n        <option></option>\n    </select>\n    <input type="hidden" name="st" class="search-text-input">\n    <button class="search-submit-select2" id="select2-nav-search-button" type="submit" aria-label="Submit Search">\n        <i class="fa fa-search" title="Submit Search"></i>\n    </button>\n</div>                        <nav id="blueheader-navbar-nav">\n                            <ul id="blueheader-navbar" class="nav float-end">\n                                <li class="blueheader-navbar-item center-content-vertically switch-products-gtm">\n                                    <span id="switchprod-popover-container" class="switchprod-popover-container">\n\n  <button type="button" id="switchProd" data-toggle="popover" aria-controls="switch-prod-list" \n    aria-haspopup="true" class="header-popover" aria-label="Toggle Explore Our Apps Menu">\n    <img class="Switch-Products-gtm" src="//fred.stlouisfed.org/images/Waffle_Menu_off.svg" alt="Toggle Explore Our Apps Menu" />\n  </button>\n</span>\n\n<div id="switchprod-popover" class="hide">\n  <!-- empty alt values handle older screen readers that don\'t handle WAI-ARIA roles. Both methods allow the screenreader to skip the image and not read the filename to the user. -->\n<h2 class="explore-products-desk">Explore Our Apps</h2>\n<hr>\n<ul id="switch-prod-list" class="list-group switch-products-list" role="menu" aria-labelledby="switchProduct">\n    <li role="presentaion" id="ham-fred-dev" class="list-group-item product-fred">\n      <a class="d-flex burger-fred-gtm" role="menuitem" href="//fred.stlouisfed.org">\n        <div>\n          <img class="switch-icon-padding burger-fred-gtm" src="//fred.stlouisfed.org/images/FRED_Logo_for_Waffle.svg" alt="" role="presentation">\n        </div>\n        <div>\n          <h3 class="burger-fred-gtm">FRED</h3>\n          <p>Tools and resources to find and use economic data worldwide</p>\n        </div>\n      </a>\n    </li>\n    <li role="presentaion" id="ham-fraser" class="list-group-item">\n      <a rel="noopener" target="_blank" class="d-flex burger-fraser-gtm" role="menuitem" href="https://fraser.stlouisfed.org/">\n        <div>\n          <img class="switch-icon-padding burger-fraser-gtm" src="//fred.stlouisfed.org/images/FRASER_Logo_for_Waffle.svg" alt="" role="presentation">\n        </div>\n        <div>\n          <h3 class="burger-fraser-gtm">FRASER</h3>\n          <p>U.S. financial, economic, and banking history</p>\n        </div>\n      </a>\n    </li>\n    <li role="presentaion" id="ham-alfred" class="list-group-item">\n      <a rel="noopener" target="_blank" class="d-flex burger-alfred-gtm" role="menuitem" href="//alfred.stlouisfed.org">\n        <div>\n          <img class="switch-icon-padding burger-alfred-gtm" src="//fred.stlouisfed.org/images/ALFRED_Logo_for_Waffle.svg" alt="" role="presentation">\n        </div>\n        <div>\n          <h3 class="burger-alfred-gtm">ALFRED</h3>\n          <p>Vintages of economic data from specific dates in history</p>\n        </div>\n      </a>\n    </li>\n    <li role="presentaion" id="ham-ecolowdown" class="list-group-item">\n      <a rel="noopener" target="_blank" class="d-flex burger-econlowdown-gtm" role="menuitem" href="https://cassidi.stlouisfed.org/index">\n        <div>\n          <img class="burger-econlowdown-gtm" src="//fred.stlouisfed.org/images/CASSIDI_Logo_for_Waffle.svg" alt="" role="presentation">\n        </div>\n        <div>\n          <h3 class="burger-econlowdown-gtm">CASSIDI</h3>\n          <p>View banking market concentrations and perform HHI analysis</p>\n        </div>\n      </a>\n  </li>\n</ul>\n</div>                                </li>\n                                <li class="blueheader-navbar-item center-content-vertically">\n                                    <div class="hidden-xs" id="signin-wrap">\n                                        <div id="user-nav" class="EL-my-account-link"></div>\n                                    </div>\n                                </li>\n                            </ul>\n                        </nav>\n                    </div>\n                </div>\n            </div>\n            <div class="col-12 d-lg-none">\n                <div class="fred-logo-div col-6 align-content-center">\n                    <a class="fred-logo-gtm" href="//fred.stlouisfed.org/">\n                        <img class="header-logo" src="//fred.stlouisfed.org/images/FRED_Logo_Header_white_text.svg" alt="FRED homepage">\n                    </a>\n                </div>\n                <div class="blueheader-navbar center-content-vertically">\n                    <button type="button" id="search-btn-open" aria-controls="mobile-search-container" \n    onclick="mobileSearchToggle(\'open\')" aria-label="Open Search">\n    <i class="fas fa-solid fa-search" title="Open Search"></i>\n</button>\n<button type="button" id="search-btn-close" class="hide" aria-controls="mobile-search-container" \n    onclick="mobileSearchToggle(\'close\')" aria-label="Close Search" disabled="true">\n    <i class="fa-solid fa-x" title="Close Search"></i>\n</button>  \n                    <button type="button" id="hamburger-btn-open" class="hamburger-gtm" aria-controls="hamburger-drawer" \n    onclick="hamburgerMenuToggle(\'open\')" aria-label="Open Mobile Menu">\n    <i id="hamburger" class="fas fa-bars hamburger-header" title="Open Mobile Menu"></i>\n</button> \n<button type="button" id="hamburger-btn-close" class="close-btn burger-close-gtm hide" aria-controls="hamburger-drawer" \n    onclick="hamburgerMenuToggle(\'close\')" aria-label="Close Mobile Menu">\n    <i class="fa-solid fa-x" title="Close Mobile Menu"></i>\n</button> \n                </div>\n            </div>\n            <div id="notifications-container"></div>\n        </nav>\n        <div class="blueheader-navbar d-lg-none">\n            <div id="mobile-search-container" class="hide col-12">\n                <input type="hidden" id="mobile-search-input" class="search-text-input" placeholder="Search FRED Data..." disabled="disabled">\n                <button type="submit" class="search-submit-select2" id="mobile-search-submit" disabled="disabled">\n                    <i class="fas fa-solid fa-search" title="Search"></i>\n                </button>\n            </div>\n            <nav id="hamburger-drawer" class="hide">\n    <div class="slide-content">\n        <div id="hamburger-navigation">\n            <div id="hamburger-home">\n                <ul class="list-group flush-list hamburger-list col-12">\n                    <li class="list-group-item">\n                        <a class="burger-calendar-gtm" href="https://fred.stlouisfed.org/releases/calendar">Release Calendar</a>\n                    </li>\n                    <li class="list-group-item hamburger-menu-item">\n                        <button type="button" class="burger-tools-gtm" onclick="toggleMenuNavigation(\'hamburger-tools\', true)" aria-controls="hamburger-tools">Tools\n                            <i class="fas fa-solid fa-angle-down" title="Toggle FRED Tools Submenu"></i>\n                        </button>\n                        <ul id="hamburger-tools" role="menu" class="hide list-group hamburger-submenu-list col-12">\n                            <li role="presentation" class="list-group-item">\n                                <a role="menuitem" class="burger-fred-excel-add-in-gtm" href="https://fred.stlouisfed.org/fred-addin"> FRED Add-in for Excel</a>\n                            </li>\n                            <li role="presentation" class="list-group-item">\n                                <a role="menuitem" class="burger-fred-api-gtm" href="https://fred.stlouisfed.org/docs/api/fred"> FRED API</a>\n                            </li>\n                            <li role="presentation" class="list-group-item">\n                                <a role="menuitem" class="burger-fred-mobile-apps-gtm" href="https://fred.stlouisfed.org/fred-mobile"> FRED Mobile Apps</a>\n                            </li>\n                        </ul>\n                    </li>\n                    <li class="list-group-item">\n                        <a class="burger-news-gtm" href="https://news.research.stlouisfed.org/category/fred-announcements/">News</a>\n                    </li>\n                    <li class="list-group-item">\n                        <a class="burger-blog-gtm" href="https://fredblog.stlouisfed.org">Blog</a>\n                    </li>\n                    <li class="list-group-item hamburger-menu-item">\n                        <button type="button" class="burger-about-gtm" onclick="toggleMenuNavigation(\'hamburger-about-fred\', true)" aria-controls="hamburger-about-fred">About\n                            <i class="fas fa-solid fa-angle-down" title="Toggle About FRED Submenu"></i>\n                        </button>\n                        <ul id="hamburger-about-fred" role="menu" class="hide list-group hamburger-submenu-list col-12">\n                            <li role="presentation" class="list-group-item">\n                                <a role="menuitem" class="burger-fred-about-gtm" href="https://fredhelp.stlouisfed.org/fred/about/about-fred/what-is-fred/"> What is FRED</a>\n                            </li>\n                            <li role="presentation" class="list-group-item">\n                                <a role="menuitem" class="burger-tutorials-gtm" href="https://fredhelp.stlouisfed.org"> Tutorials</a>\n                            </li>\n                            <li role="presentation" class="list-group-item">\n                                <a role="menuitem" class="burger-data-literacy-gtm" href="https://fred.stlouisfed.org/digital-badges/">\n                                Digital Badges\n                                </a>\n                            </li>\n                            <li role="presentation" class="list-group-item">\n                                <a role="menuitem" class="burger-contact-us-gtm" href="https://fred.stlouisfed.org/contactus/"> Contact Us</a>\n                            </li>\n                        </ul>\n                    </li>\n                    <li class="list-group-item">\n                        <a class="burger-myaccount-gtm" href="https://fredaccount.stlouisfed.org">My Account</a>\n                    </li>\n                    <li class="list-group-item hamburger-menu-item">\n                        <button type="button" class="burger-switch-gtm" onclick="toggleMenuNavigation(\'hamburger-products\', true)" aria-controls="hamburger-products">\n                            Explore Our Apps\n                            <i class="fas fa-solid fa-angle-down" title="Toggle Apps Submenu"></i>\n                        </button>\n                        <div id="hamburger-products" class="hide">\n                            <!-- empty alt values handle older screen readers that don\'t handle WAI-ARIA roles. Both methods allow the screenreader to skip the image and not read the filename to the user. -->\n<h2 class="explore-products-desk">Explore Our Apps</h2>\n<hr>\n<ul id="switch-prod-list" class="list-group switch-products-list" role="menu" aria-labelledby="switchProduct">\n    <li role="presentaion" id="ham-fred-dev" class="list-group-item product-fred">\n      <a class="d-flex burger-fred-gtm" role="menuitem" href="//fred.stlouisfed.org">\n        <div>\n          <img class="switch-icon-padding burger-fred-gtm" src="//fred.stlouisfed.org/images/FRED_Logo_for_Waffle.svg" alt="" role="presentation">\n        </div>\n        <div>\n          <h3 class="burger-fred-gtm">FRED</h3>\n          <p>Tools and resources to find and use economic data worldwide</p>\n        </div>\n      </a>\n    </li>\n    <li role="presentaion" id="ham-fraser" class="list-group-item">\n      <a rel="noopener" target="_blank" class="d-flex burger-fraser-gtm" role="menuitem" href="https://fraser.stlouisfed.org/">\n        <div>\n          <img class="switch-icon-padding burger-fraser-gtm" src="//fred.stlouisfed.org/images/FRASER_Logo_for_Waffle.svg" alt="" role="presentation">\n        </div>\n        <div>\n          <h3 class="burger-fraser-gtm">FRASER</h3>\n          <p>U.S. financial, economic, and banking history</p>\n        </div>\n      </a>\n    </li>\n    <li role="presentaion" id="ham-alfred" class="list-group-item">\n      <a rel="noopener" target="_blank" class="d-flex burger-alfred-gtm" role="menuitem" href="//alfred.stlouisfed.org">\n        <div>\n          <img class="switch-icon-padding burger-alfred-gtm" src="//fred.stlouisfed.org/images/ALFRED_Logo_for_Waffle.svg" alt="" role="presentation">\n        </div>\n        <div>\n          <h3 class="burger-alfred-gtm">ALFRED</h3>\n          <p>Vintages of economic data from specific dates in history</p>\n        </div>\n      </a>\n    </li>\n    <li role="presentaion" id="ham-ecolowdown" class="list-group-item">\n      <a rel="noopener" target="_blank" class="d-flex burger-econlowdown-gtm" role="menuitem" href="https://cassidi.stlouisfed.org/index">\n        <div>\n          <img class="burger-econlowdown-gtm" src="//fred.stlouisfed.org/images/CASSIDI_Logo_for_Waffle.svg" alt="" role="presentation">\n        </div>\n        <div>\n          <h3 class="burger-econlowdown-gtm">CASSIDI</h3>\n          <p>View banking market concentrations and perform HHI analysis</p>\n        </div>\n      </a>\n  </li>\n</ul>\n                        </div>\n                    </li>\n                    <li class="list-group-item">\n                        <a class="burger-stls-home-gtm" href="https://www.stlouisfed.org/">STL Fed Home Page</a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</nav>\n        </div>\n        <div class=\'navbar navbar-expand-lg sub-header EL-header-and-subheader\'>\n            <div class="container-fluid gx-0">\n                <div class="col d-flex justify-content-end">\n                    <div class="container-fluid gx-0">\n                        \n<hr class="col-12 hr-pre-subheader-nav d-none d-lg-block">\n<nav class="col-12 navbar EL-main-nav navbar-expand-sm d-none d-lg-flex" id="subheader-nav">\n    <div class="navbar-collapse collapse d-flex justify-content-end">\n        <ul id="subheader-navbar" class="nav float-end navbar-nav">\n            <li class="nav-li-subheader">\n                <a href="https://fred.stlouisfed.org/releases/calendar" class="nav-releasecal-subheader-gtm">Release Calendar</a>\n            </li>\n            <li class="nav-li-subheader">\n              <span class="sub-header-nav-tools-gtm  header-popover fred-tools-container">\n  <button type="button" id="fred-tools-link" class="align-icon header-popover tools-gtm" \n    aria-haspopup="true" aria-controls="fred-tools-menu" data-toggle="popover" \n    onclick="toggleMenuNavigation(\'fred-tools-popover\')">Tools\n    <i class="fas fa-angle-down" title="Toggle Tools Menu"></i>\n  </button>\n</span>\n\n<div id="fred-tools-popover" class="hide">\n  <ul id="fred-tools-menu" role="menu" class="header-list-popover list-group flush-list">\n    <li role="presentation" class="list-group-item">\n      <a role="menuitem" class="homepage-nav-tools-fred-excel-addin-gtm" href="https://fred.stlouisfed.org/fred-addin">FRED Add-in for Excel</a>\n    </li>\n    <li role="presentation" class="list-group-item">\n      <a role="menuitem" class="homepage-nav-tools-fred-api-gtm" href="https://fred.stlouisfed.org/docs/api/fred">FRED API</a>\n    </li>\n    <li role="presentation" class="list-group-item">\n      <a role="menuitem" class="homepage-nav-tools-fred-mobile-gtm" href="https://fred.stlouisfed.org/fred-mobile">FRED Mobile Apps</a>\n    </li>\n  </ul>\n</div>            </li>\n            <li class="nav-li-subheader">\n                <a href="https://news.research.stlouisfed.org/category/fred-announcements/" class="nav-news-subheader-gtm">News</a>\n            </li>\n            <li class="nav-li-subheader">\n                <a href="https://fredblog.stlouisfed.org" class="nav-fredblog-subheader-gtm">Blog</a>\n            </li>\n            <li class="nav-li-subheader">\n              \n<span class="subheader-nav-about-gtm about-fred-container">\n  <button type="button" id="about-fred-link" class="align-icon header-popover about-gtm" \n    data-toggle="popover" aria-controls="about-fred-menu" aria-haspopup="true"\n    onclick="toggleMenuNavigation(\'about-fred-popover\')">About\n    <i class="fas fa-angle-down" alt="Toggle About Menu"></i>\n  </button>\n</span>\n\n<div id="about-fred-popover" class="hide">\n  <ul id="about-fred-menu" role="menu" aria-labelledby="about-fred-link" class="header-list-popover list-group flush-list">\n    <li role="presentation" class="list-group-item">\n      <a role="menuitem" class="about-fred-what-is-gtm" href="https://fredhelp.stlouisfed.org/fred/about/about-fred/what-is-fred/">\n        What is FRED\n      </a>\n    </li>\n    <li role="presentation" class="list-group-item">\n      <a role="menuitem" class="about-fred-tutorials-gtm" href="https://fredhelp.stlouisfed.org">\n        Tutorials\n      </a>\n    </li>\n    <li role="presentation" class="list-group-item">\n      <a role="menuitem" class="about-research-data-literacy-gtm" href="https://fred.stlouisfed.org/digital-badges/">\n        Digital Badges\n      </a>\n    </li>\n    <li role="presentation" class="list-group-item">\n      <a role="menuitem" class="about-fred-contact-gtm" href="https://fred.stlouisfed.org/contactus/ ">\n        Contact Us\n      </a>\n    </li>\n  </ul>\n</div>\n            </li>\n        </ul>\n    </div>\n</nav>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </header>\n\r\n<!--BEGIN CONTENT-->\r\n<div class="container">\r\n    <h1>Looking for Something?</h1>\r\n    <p class="large">We\'re sorry, the page you were looking for cannot be found. Please feel free\r\n        to <a href="/contactus/">contact us</a> if the problem persists.</p>\r\n    <p class="large">Searching may help find what are you looking for. If all else fails, you can head\r\n        <a href="/">Home</a>\r\n    </p>\r\n    <form action="/searchresults" id="search-form-404">\r\n        <label for="search-text">Search for:</label><br>\r\n        <input type="text" name="st" id="search-text" size="50" class="form-control">\r\n        <input type="submit" class="btn btn-default" value="Search" id="404-search-button" name="404-search-button">\r\n    </form>\r\n</div>\r\n<link href="/css/footer.min.css?1553087256" rel="stylesheet" media="all">\r\n<!--END CONTENT-->\r\n<br class="clear">\n</div>\n\n<div class="hidden-print d-lg-none icon-container sticky-bottom btt-ct col-12">\n    <a id="back-to-top" class="back-to-top" href="#top">\n        <i aria-hidden="true" class="fas fa-solid fa-chevron-up" title="Back to Top"></i>\n    <span class="fa-sr-only">Back to Top</span></a>\n</div>\n<button disabled id="filter-button" class="hidden drawer-dropdown-trigger filter-tags-btn btn sticky-bottom btn-block btn-default dropdown-is-active">\n    <div class="filter-button-inner">\n        <i class="fa fa-filter" style="padding-right:5px;"></i>Filter\n        <span class="badge badge-primary subpage-badge-primary">0</span>\n    </div>\n</button>\n\n<div class="footer2 hidden-print row EL-footer2">\n    <div class="container d-md-flex">\n        <div class="col-md-6 col-lg-5 col-12">\n            <div class="col-12">\n                <h3 class="col-12">Subscribe to the FRED newsletter</h3>\n                <form id="subscribe-div" class="form-horizontal form-control newsletter-form">\n                    <div class="col-12">\n                        <div class="input-group">\n                            <input id="subscribe-email-input" type="text" name="email" placeholder="Email"\n                            class="form-control email" aria-label="email">\n                            <button id="subscribe-email-btn" type="button"\n                            class="btn subscribe-newsletter-btn-gtm">\n                            Subscribe</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class="col-12">\n                <h3 class="col-12">Follow us</h3>\n                <div id="follow-icons" class="col-12">\n                    <span id="li-container" class="icon-container">\n                        <a href="http://bit.ly/d056zL">\n                            <i aria-hidden="true" class="fab fa-brands fa-linkedin-in" title="Linked In"></i>\n                            <span class="fa-sr-only">Saint Louis Fed linkedin page</span></a></span>\n                    <span id="fb-container" class="icon-container">\n                        <a href="https://www.facebook.com/stlfed">\n                            <i aria-hidden="true" class="fab fa-brands fa-facebook-f" title="Facebook"></i>\n                            <span class="fa-sr-only">Saint Louis Fed facebook page</span></a></span>\n                    <span id="x-container" class="icon-container">\n                        <a href="http://bit.ly/9ngC3L">\n                            <i aria-hidden="true" class="fab fa-brands fa-x-twitter" title="X (formerly Twitter)"></i>\n                            <span class="fa-sr-only">Saint Louis Fed X page</span></a></span>\n                    <span id="yt-container" class="icon-container">\n                        <a href="http://bit.ly/aY9TVF">\n                            <i aria-hidden="true" class="fab fa-brands fa-youtube" title="YouTube"></i>\n                            <span class="fa-sr-only">Saint Louis Fed YouTube page</span></a></span> \n                </div>\n            </div>\n        </div>\n        <div class="col-md-1 col-lg-2 d-none d-md-block">&nbsp;</div>\n        <div class="col-md-4 col-lg-3 col-7 need-help">\n            <h3 class="col-12">Need Help?</h3>\n            <div class="col-12">\n                <div class="footer-link">\n                    <a class="footer-questions-gtm q-and-a-link-gtm" href="//fred.stlouisfed.org/contactus/">\n                        Questions or Comments</a></div>\n                <div class="footer-link">\n                    <a class="footer-fredhelp-gtm" href="//fredhelp.stlouisfed.org/">FRED Help</a></div>\n            </div>\n            <hr class="col-12">\n            <div class="col-12">\n                <div class="footer-link">\n                    <a href="//fred.stlouisfed.org/legal/">Legal</a></div>\n                <div class="footer-link">\n                    <a href="//research.stlouisfed.org/privacy.html">Privacy Notice & Policy</a></div>\n            </div>\n        </div>\n        <div class="col-md-1 col-lg-2 d-none d-md-block">&nbsp;</div>\n    </div>\n</div>\n\n<script>\n    // function to parse cookies, and return the value\n    function getCookie(name) {\n        var cookies = document.cookie.split(\';\');\n        for (var i in cookies) {\n            var cookie = cookies[i].trim().split(\'=\');\n            if (cookie[0] == name) {\n                return cookie[1];\n            }\n        }\n        return null;\n    }\n    // certain pages in FRED set a custom tag variable\n    // this gets sent to Google Analytics so we can see what tags people are using\n    if (window.tags) {\n        dataLayer.push({ \'tags\': tags });\n\n    }\n\n    // if the user is logged in, send the value of the liruid cookie to Google Analytics\n    var researchLiruid = getCookie(\'research-liruid\');\n    dataLayer.push({ \'userId\': researchLiruid });\n\n</script>\n<script src="//fred.stlouisfed.org/assets/jquery/dist/1754599989.jquery.min.js" type="text/javascript"></script>\n<script src="//fred.stlouisfed.org/assets/popperjs/dist/umd/1754599989.popper.min.js"></script>\n<script src="//fred.stlouisfed.org/assets/bootstrap/dist/js/1754599988.bootstrap.min.js"></script>\n<script src="//fred.stlouisfed.org/assets/select2/dist/js/1754599989.select2.full.min.js"></script>\n<script>\n    // force expire the .fred.stlouisfed.org _ga cookie\n    document.cookie = document.cookie + \'_ga=;domain=.fred.stlouisfed.org;expires=Sat, 01-Jan-2000 00:00:00 GMT\';\n</script>\n\n<script defer src="//fred.stlouisfed.org/assets/jquery-menu-aim/1754599989.jquery.menu-aim.min.js"></script>\n\n<script src="//fred.stlouisfed.org/js/1754599989.common.min.js"></script>\n\n<script src="//fred.stlouisfed.org/assets/js-cookie/src/js.cookie.js"></script>\n<script src="//fred.stlouisfed.org/js/1754599989.508.min.js"></script>\n\n<script>\n    var appConfig = {\n        uapi_host: \'https://fred.stlouisfed.org/uapi\',\n        research_host: \'https://research.stlouisfed.org\',\n        fred_host: \'https://fred.stlouisfed.org\',\n        alfred_host: \'https://alfred.stlouisfed.org\',\n        gsi_client_id: \'115290014367-vpb89b600koe9kn0njeeq38c1unfr3gk.apps.googleusercontent.com\',\n        fred_account_host: \'https://fredaccount.stlouisfed.org\',\n    };\n\n    var domain_suffix = (window.location.hostname.split(".")[0].split("-")[1] || \'\');\n    appConfig.logged_in = Cookies.get(\'research-lirua\' + (domain_suffix ? \'-\' + domain_suffix : \'\')) !== null && Cookies.get(\'research-lirua\' + (domain_suffix ? \'-\' + domain_suffix : \'\')) !== undefined;\n    var getAuth = function (callback) {\n        if (typeof callback === \'function\') {\n            callback();\n        }\n        return;\n    };\n    window.getAuth = getAuth;\n\n</script>\n\n<script>\n    <!--suppress back to top before scroll-->\n    window.onscroll = function(){\n        backTop = $("#back-to-top");\n        window.pageYOffset >= 205 ? backTop.css(\'display\', \'block\') : backTop.css(\'display\', \'none\');\n    }\n\n</script>\n\n<script defer src="//fred.stlouisfed.org/js/1754599989.banner.js"></script>\n<script src="//accounts.google.com/gsi/client" async defer></script>\n<script src="//fred.stlouisfed.org/assets/research/fred-account-react/dist/1754599989.main.dist.js"></script>\n<script src="//fred.stlouisfed.org/assets/research/fred-account-react/dist/1754599989.vendor.dist.js"></script>\n\n<script type="text/javascript">\n    // update mobile footer filter bar active filter count to content.tagsDrawers tags-number\n    $(\'.filter-button-inner .badge\').text($(\'.tags-number\').text());\n</script>\n\r\n<script type="text/javascript"  src="/EPNAkEJdsI9Q-zn__5qe/aGD5kDk4zwrVDV/Z1VmRmZ6JA/JnFN/Tw1HGycB"></script></body>\r\n</html>\r\n'
2025-08-09 20:03:23,845 DEBUG Starting new HTTPS connection (1): fred.stlouisfed.org:443
2025-08-09 20:03:23,954 DEBUG https://fred.stlouisfed.org:443 "GET /graph/fredgraph.csv?id=NAPM HTTP/1.1" 404 28941
2025-08-09 20:03:24,105 DEBUG https://fred.stlouisfed.org:443 "GET /graph/fredgraph.csv?id=NAPM HTTP/1.1" 404 28941
2025-08-09 20:03:24,238 DEBUG https://fred.stlouisfed.org:443 "GET /graph/fredgraph.csv?id=NAPM HTTP/1.1" 404 28941
2025-08-09 20:03:24,424 DEBUG https://fred.stlouisfed.org:443 "GET /graph/fredgraph.csv?id=NAPM HTTP/1.1" 404 28941
2025-08-09 20:03:24,579 WARNING Retry 3/3 after error: Unable to read URL: https://fred.stlouisfed.org/graph/fredgraph.csv?id=NAPM
Response Text:
b'<!DOCTYPE html>\r\n<html lang="en">\r\n<head>\r\n    <meta charset="utf-8">\r\n    <meta http-equiv="X-UA-Compatible" content="IE=edge">\r\n    <meta name="viewport" content="width=device-width, initial-scale=1">\r\n    <title>Error - St. Louis Fed</title>\r\n    <meta name="description" content="">\r\n    <meta name="keywords" content="">    \r\n    <link rel="stylesheet" type="text/css" href="/assets/bootstrap/dist/css/bootstrap.min.css">\r\n    <link rel="stylesheet" type="text/css" href="/css/home.min.css?1553087253">\r\n    <link rel="stylesheet" type="text/css" href="/assets/fontawesome-free/css/all.min.css">\r\n    <link rel="stylesheet" type="text/css" href="/assets/select2/dist/css/select2.min.css">\r\n    <style>p {\r\n        margin-bottom: 1.5em;\r\n    }</style>\r\n</head>\r\n<body>\r\n<link rel="preconnect" href="https://fonts.googleapis.com">\n<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>\n<link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">\n<link href="https://fonts.googleapis.com/css2?family=Roboto+Slab&display=swap" rel="stylesheet">\n<!--googleoff: snippet-->\n<a href="#content-container" class="skip-to">Skip to main content</a>\n<!--googleon: snippet-->\n<a id="top"></a>\n<!--Move content shift styles internal to boost performance scores-->\n<style>\n    #zoom-and-share {\n        position:relative;\n        background-color: rgb(225, 233, 240);\n        min-height: 437px;\n    }\n</style>\n<div id="container">\n    <header>\n        <h1 class="visually-hidden">Federal Reserve Economic Data</h1>\n        <nav class="navbar navbar-expand-lg header-not-home py-0 EL-nonhomepage-header EL-header-and-subheader">\n            <div id="hidden-user" class=\'hide\'></div>\n            <div id="action-modal"></div>\n            <div class="col-12 d-none d-lg-block">\n                <div class="col-12 d-none d-lg-flex">\n                    <a class="bank-logo-gtm" target="_blank" href="https://www.stlouisfed.org">\n                        <img class="research-logo-gtm" src="//fred.stlouisfed.org/images/Small_Stl_Fed_Logo.svg" alt="Federal Reserve Bank of St. Louis">\n                    </a>\n                    <hr class=" hr-post-frb-stls-logo">\n                </div>\n                <div class="col-12 d-none d-lg-flex">\n                    <div class="col-3 align-content-center">\n                        <a class="fred-logo-gtm" target="_blank" href="//fred.stlouisfed.org">\n                            <img class="header-logo-eagle" src="//fred.stlouisfed.org/images/FRED_Logo_Header.svg" alt="FRED homepage">\n                        </a>\n                    </div>    \n                    <div class="col-9 d-none d-lg-flex align-content-center justify-content-end">\n                        <div class=\'input-group EL-header-search-container\' id="search-container-header">\n    <select id="head-search" class=\'EL-header-search\'>\n        <option></option>\n    </select>\n    <input type="hidden" name="st" class="search-text-input">\n    <button class="search-submit-select2" id="select2-nav-search-button" type="submit" aria-label="Submit Search">\n        <i class="fa fa-search" title="Submit Search"></i>\n    </button>\n</div>                        <nav id="blueheader-navbar-nav">\n                            <ul id="blueheader-navbar" class="nav float-end">\n                                <li class="blueheader-navbar-item center-content-vertically switch-products-gtm">\n                                    <span id="switchprod-popover-container" class="switchprod-popover-container">\n\n  <button type="button" id="switchProd" data-toggle="popover" aria-controls="switch-prod-list" \n    aria-haspopup="true" class="header-popover" aria-label="Toggle Explore Our Apps Menu">\n    <img class="Switch-Products-gtm" src="//fred.stlouisfed.org/images/Waffle_Menu_off.svg" alt="Toggle Explore Our Apps Menu" />\n  </button>\n</span>\n\n<div id="switchprod-popover" class="hide">\n  <!-- empty alt values handle older screen readers that don\'t handle WAI-ARIA roles. Both methods allow the screenreader to skip the image and not read the filename to the user. -->\n<h2 class="explore-products-desk">Explore Our Apps</h2>\n<hr>\n<ul id="switch-prod-list" class="list-group switch-products-list" role="menu" aria-labelledby="switchProduct">\n    <li role="presentaion" id="ham-fred-dev" class="list-group-item product-fred">\n      <a class="d-flex burger-fred-gtm" role="menuitem" href="//fred.stlouisfed.org">\n        <div>\n          <img class="switch-icon-padding burger-fred-gtm" src="//fred.stlouisfed.org/images/FRED_Logo_for_Waffle.svg" alt="" role="presentation">\n        </div>\n        <div>\n          <h3 class="burger-fred-gtm">FRED</h3>\n          <p>Tools and resources to find and use economic data worldwide</p>\n        </div>\n      </a>\n    </li>\n    <li role="presentaion" id="ham-fraser" class="list-group-item">\n      <a rel="noopener" target="_blank" class="d-flex burger-fraser-gtm" role="menuitem" href="https://fraser.stlouisfed.org/">\n        <div>\n          <img class="switch-icon-padding burger-fraser-gtm" src="//fred.stlouisfed.org/images/FRASER_Logo_for_Waffle.svg" alt="" role="presentation">\n        </div>\n        <div>\n          <h3 class="burger-fraser-gtm">FRASER</h3>\n          <p>U.S. financial, economic, and banking history</p>\n        </div>\n      </a>\n    </li>\n    <li role="presentaion" id="ham-alfred" class="list-group-item">\n      <a rel="noopener" target="_blank" class="d-flex burger-alfred-gtm" role="menuitem" href="//alfred.stlouisfed.org">\n        <div>\n          <img class="switch-icon-padding burger-alfred-gtm" src="//fred.stlouisfed.org/images/ALFRED_Logo_for_Waffle.svg" alt="" role="presentation">\n        </div>\n        <div>\n          <h3 class="burger-alfred-gtm">ALFRED</h3>\n          <p>Vintages of economic data from specific dates in history</p>\n        </div>\n      </a>\n    </li>\n    <li role="presentaion" id="ham-ecolowdown" class="list-group-item">\n      <a rel="noopener" target="_blank" class="d-flex burger-econlowdown-gtm" role="menuitem" href="https://cassidi.stlouisfed.org/index">\n        <div>\n          <img class="burger-econlowdown-gtm" src="//fred.stlouisfed.org/images/CASSIDI_Logo_for_Waffle.svg" alt="" role="presentation">\n        </div>\n        <div>\n          <h3 class="burger-econlowdown-gtm">CASSIDI</h3>\n          <p>View banking market concentrations and perform HHI analysis</p>\n        </div>\n      </a>\n  </li>\n</ul>\n</div>                                </li>\n                                <li class="blueheader-navbar-item center-content-vertically">\n                                    <div class="hidden-xs" id="signin-wrap">\n                                        <div id="user-nav" class="EL-my-account-link"></div>\n                                    </div>\n                                </li>\n                            </ul>\n                        </nav>\n                    </div>\n                </div>\n            </div>\n            <div class="col-12 d-lg-none">\n                <div class="fred-logo-div col-6 align-content-center">\n                    <a class="fred-logo-gtm" href="//fred.stlouisfed.org/">\n                        <img class="header-logo" src="//fred.stlouisfed.org/images/FRED_Logo_Header_white_text.svg" alt="FRED homepage">\n                    </a>\n                </div>\n                <div class="blueheader-navbar center-content-vertically">\n                    <button type="button" id="search-btn-open" aria-controls="mobile-search-container" \n    onclick="mobileSearchToggle(\'open\')" aria-label="Open Search">\n    <i class="fas fa-solid fa-search" title="Open Search"></i>\n</button>\n<button type="button" id="search-btn-close" class="hide" aria-controls="mobile-search-container" \n    onclick="mobileSearchToggle(\'close\')" aria-label="Close Search" disabled="true">\n    <i class="fa-solid fa-x" title="Close Search"></i>\n</button>  \n                    <button type="button" id="hamburger-btn-open" class="hamburger-gtm" aria-controls="hamburger-drawer" \n    onclick="hamburgerMenuToggle(\'open\')" aria-label="Open Mobile Menu">\n    <i id="hamburger" class="fas fa-bars hamburger-header" title="Open Mobile Menu"></i>\n</button> \n<button type="button" id="hamburger-btn-close" class="close-btn burger-close-gtm hide" aria-controls="hamburger-drawer" \n    onclick="hamburgerMenuToggle(\'close\')" aria-label="Close Mobile Menu">\n    <i class="fa-solid fa-x" title="Close Mobile Menu"></i>\n</button> \n                </div>\n            </div>\n            <div id="notifications-container"></div>\n        </nav>\n        <div class="blueheader-navbar d-lg-none">\n            <div id="mobile-search-container" class="hide col-12">\n                <input type="hidden" id="mobile-search-input" class="search-text-input" placeholder="Search FRED Data..." disabled="disabled">\n                <button type="submit" class="search-submit-select2" id="mobile-search-submit" disabled="disabled">\n                    <i class="fas fa-solid fa-search" title="Search"></i>\n                </button>\n            </div>\n            <nav id="hamburger-drawer" class="hide">\n    <div class="slide-content">\n        <div id="hamburger-navigation">\n            <div id="hamburger-home">\n                <ul class="list-group flush-list hamburger-list col-12">\n                    <li class="list-group-item">\n                        <a class="burger-calendar-gtm" href="https://fred.stlouisfed.org/releases/calendar">Release Calendar</a>\n                    </li>\n                    <li class="list-group-item hamburger-menu-item">\n                        <button type="button" class="burger-tools-gtm" onclick="toggleMenuNavigation(\'hamburger-tools\', true)" aria-controls="hamburger-tools">Tools\n                            <i class="fas fa-solid fa-angle-down" title="Toggle FRED Tools Submenu"></i>\n                        </button>\n                        <ul id="hamburger-tools" role="menu" class="hide list-group hamburger-submenu-list col-12">\n                            <li role="presentation" class="list-group-item">\n                                <a role="menuitem" class="burger-fred-excel-add-in-gtm" href="https://fred.stlouisfed.org/fred-addin"> FRED Add-in for Excel</a>\n                            </li>\n                            <li role="presentation" class="list-group-item">\n                                <a role="menuitem" class="burger-fred-api-gtm" href="https://fred.stlouisfed.org/docs/api/fred"> FRED API</a>\n                            </li>\n                            <li role="presentation" class="list-group-item">\n                                <a role="menuitem" class="burger-fred-mobile-apps-gtm" href="https://fred.stlouisfed.org/fred-mobile"> FRED Mobile Apps</a>\n                            </li>\n                        </ul>\n                    </li>\n                    <li class="list-group-item">\n                        <a class="burger-news-gtm" href="https://news.research.stlouisfed.org/category/fred-announcements/">News</a>\n                    </li>\n                    <li class="list-group-item">\n                        <a class="burger-blog-gtm" href="https://fredblog.stlouisfed.org">Blog</a>\n                    </li>\n                    <li class="list-group-item hamburger-menu-item">\n                        <button type="button" class="burger-about-gtm" onclick="toggleMenuNavigation(\'hamburger-about-fred\', true)" aria-controls="hamburger-about-fred">About\n                            <i class="fas fa-solid fa-angle-down" title="Toggle About FRED Submenu"></i>\n                        </button>\n                        <ul id="hamburger-about-fred" role="menu" class="hide list-group hamburger-submenu-list col-12">\n                            <li role="presentation" class="list-group-item">\n                                <a role="menuitem" class="burger-fred-about-gtm" href="https://fredhelp.stlouisfed.org/fred/about/about-fred/what-is-fred/"> What is FRED</a>\n                            </li>\n                            <li role="presentation" class="list-group-item">\n                                <a role="menuitem" class="burger-tutorials-gtm" href="https://fredhelp.stlouisfed.org"> Tutorials</a>\n                            </li>\n                            <li role="presentation" class="list-group-item">\n                                <a role="menuitem" class="burger-data-literacy-gtm" href="https://fred.stlouisfed.org/digital-badges/">\n                                Digital Badges\n                                </a>\n                            </li>\n                            <li role="presentation" class="list-group-item">\n                                <a role="menuitem" class="burger-contact-us-gtm" href="https://fred.stlouisfed.org/contactus/"> Contact Us</a>\n                            </li>\n                        </ul>\n                    </li>\n                    <li class="list-group-item">\n                        <a class="burger-myaccount-gtm" href="https://fredaccount.stlouisfed.org">My Account</a>\n                    </li>\n                    <li class="list-group-item hamburger-menu-item">\n                        <button type="button" class="burger-switch-gtm" onclick="toggleMenuNavigation(\'hamburger-products\', true)" aria-controls="hamburger-products">\n                            Explore Our Apps\n                            <i class="fas fa-solid fa-angle-down" title="Toggle Apps Submenu"></i>\n                        </button>\n                        <div id="hamburger-products" class="hide">\n                            <!-- empty alt values handle older screen readers that don\'t handle WAI-ARIA roles. Both methods allow the screenreader to skip the image and not read the filename to the user. -->\n<h2 class="explore-products-desk">Explore Our Apps</h2>\n<hr>\n<ul id="switch-prod-list" class="list-group switch-products-list" role="menu" aria-labelledby="switchProduct">\n    <li role="presentaion" id="ham-fred-dev" class="list-group-item product-fred">\n      <a class="d-flex burger-fred-gtm" role="menuitem" href="//fred.stlouisfed.org">\n        <div>\n          <img class="switch-icon-padding burger-fred-gtm" src="//fred.stlouisfed.org/images/FRED_Logo_for_Waffle.svg" alt="" role="presentation">\n        </div>\n        <div>\n          <h3 class="burger-fred-gtm">FRED</h3>\n          <p>Tools and resources to find and use economic data worldwide</p>\n        </div>\n      </a>\n    </li>\n    <li role="presentaion" id="ham-fraser" class="list-group-item">\n      <a rel="noopener" target="_blank" class="d-flex burger-fraser-gtm" role="menuitem" href="https://fraser.stlouisfed.org/">\n        <div>\n          <img class="switch-icon-padding burger-fraser-gtm" src="//fred.stlouisfed.org/images/FRASER_Logo_for_Waffle.svg" alt="" role="presentation">\n        </div>\n        <div>\n          <h3 class="burger-fraser-gtm">FRASER</h3>\n          <p>U.S. financial, economic, and banking history</p>\n        </div>\n      </a>\n    </li>\n    <li role="presentaion" id="ham-alfred" class="list-group-item">\n      <a rel="noopener" target="_blank" class="d-flex burger-alfred-gtm" role="menuitem" href="//alfred.stlouisfed.org">\n        <div>\n          <img class="switch-icon-padding burger-alfred-gtm" src="//fred.stlouisfed.org/images/ALFRED_Logo_for_Waffle.svg" alt="" role="presentation">\n        </div>\n        <div>\n          <h3 class="burger-alfred-gtm">ALFRED</h3>\n          <p>Vintages of economic data from specific dates in history</p>\n        </div>\n      </a>\n    </li>\n    <li role="presentaion" id="ham-ecolowdown" class="list-group-item">\n      <a rel="noopener" target="_blank" class="d-flex burger-econlowdown-gtm" role="menuitem" href="https://cassidi.stlouisfed.org/index">\n        <div>\n          <img class="burger-econlowdown-gtm" src="//fred.stlouisfed.org/images/CASSIDI_Logo_for_Waffle.svg" alt="" role="presentation">\n        </div>\n        <div>\n          <h3 class="burger-econlowdown-gtm">CASSIDI</h3>\n          <p>View banking market concentrations and perform HHI analysis</p>\n        </div>\n      </a>\n  </li>\n</ul>\n                        </div>\n                    </li>\n                    <li class="list-group-item">\n                        <a class="burger-stls-home-gtm" href="https://www.stlouisfed.org/">STL Fed Home Page</a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</nav>\n        </div>\n        <div class=\'navbar navbar-expand-lg sub-header EL-header-and-subheader\'>\n            <div class="container-fluid gx-0">\n                <div class="col d-flex justify-content-end">\n                    <div class="container-fluid gx-0">\n                        \n<hr class="col-12 hr-pre-subheader-nav d-none d-lg-block">\n<nav class="col-12 navbar EL-main-nav navbar-expand-sm d-none d-lg-flex" id="subheader-nav">\n    <div class="navbar-collapse collapse d-flex justify-content-end">\n        <ul id="subheader-navbar" class="nav float-end navbar-nav">\n            <li class="nav-li-subheader">\n                <a href="https://fred.stlouisfed.org/releases/calendar" class="nav-releasecal-subheader-gtm">Release Calendar</a>\n            </li>\n            <li class="nav-li-subheader">\n              <span class="sub-header-nav-tools-gtm  header-popover fred-tools-container">\n  <button type="button" id="fred-tools-link" class="align-icon header-popover tools-gtm" \n    aria-haspopup="true" aria-controls="fred-tools-menu" data-toggle="popover" \n    onclick="toggleMenuNavigation(\'fred-tools-popover\')">Tools\n    <i class="fas fa-angle-down" title="Toggle Tools Menu"></i>\n  </button>\n</span>\n\n<div id="fred-tools-popover" class="hide">\n  <ul id="fred-tools-menu" role="menu" class="header-list-popover list-group flush-list">\n    <li role="presentation" class="list-group-item">\n      <a role="menuitem" class="homepage-nav-tools-fred-excel-addin-gtm" href="https://fred.stlouisfed.org/fred-addin">FRED Add-in for Excel</a>\n    </li>\n    <li role="presentation" class="list-group-item">\n      <a role="menuitem" class="homepage-nav-tools-fred-api-gtm" href="https://fred.stlouisfed.org/docs/api/fred">FRED API</a>\n    </li>\n    <li role="presentation" class="list-group-item">\n      <a role="menuitem" class="homepage-nav-tools-fred-mobile-gtm" href="https://fred.stlouisfed.org/fred-mobile">FRED Mobile Apps</a>\n    </li>\n  </ul>\n</div>            </li>\n            <li class="nav-li-subheader">\n                <a href="https://news.research.stlouisfed.org/category/fred-announcements/" class="nav-news-subheader-gtm">News</a>\n            </li>\n            <li class="nav-li-subheader">\n                <a href="https://fredblog.stlouisfed.org" class="nav-fredblog-subheader-gtm">Blog</a>\n            </li>\n            <li class="nav-li-subheader">\n              \n<span class="subheader-nav-about-gtm about-fred-container">\n  <button type="button" id="about-fred-link" class="align-icon header-popover about-gtm" \n    data-toggle="popover" aria-controls="about-fred-menu" aria-haspopup="true"\n    onclick="toggleMenuNavigation(\'about-fred-popover\')">About\n    <i class="fas fa-angle-down" alt="Toggle About Menu"></i>\n  </button>\n</span>\n\n<div id="about-fred-popover" class="hide">\n  <ul id="about-fred-menu" role="menu" aria-labelledby="about-fred-link" class="header-list-popover list-group flush-list">\n    <li role="presentation" class="list-group-item">\n      <a role="menuitem" class="about-fred-what-is-gtm" href="https://fredhelp.stlouisfed.org/fred/about/about-fred/what-is-fred/">\n        What is FRED\n      </a>\n    </li>\n    <li role="presentation" class="list-group-item">\n      <a role="menuitem" class="about-fred-tutorials-gtm" href="https://fredhelp.stlouisfed.org">\n        Tutorials\n      </a>\n    </li>\n    <li role="presentation" class="list-group-item">\n      <a role="menuitem" class="about-research-data-literacy-gtm" href="https://fred.stlouisfed.org/digital-badges/">\n        Digital Badges\n      </a>\n    </li>\n    <li role="presentation" class="list-group-item">\n      <a role="menuitem" class="about-fred-contact-gtm" href="https://fred.stlouisfed.org/contactus/ ">\n        Contact Us\n      </a>\n    </li>\n  </ul>\n</div>\n            </li>\n        </ul>\n    </div>\n</nav>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </header>\n\r\n<!--BEGIN CONTENT-->\r\n<div class="container">\r\n    <h1>Looking for Something?</h1>\r\n    <p class="large">We\'re sorry, the page you were looking for cannot be found. Please feel free\r\n        to <a href="/contactus/">contact us</a> if the problem persists.</p>\r\n    <p class="large">Searching may help find what are you looking for. If all else fails, you can head\r\n        <a href="/">Home</a>\r\n    </p>\r\n    <form action="/searchresults" id="search-form-404">\r\n        <label for="search-text">Search for:</label><br>\r\n        <input type="text" name="st" id="search-text" size="50" class="form-control">\r\n        <input type="submit" class="btn btn-default" value="Search" id="404-search-button" name="404-search-button">\r\n    </form>\r\n</div>\r\n<link href="/css/footer.min.css?1553087256" rel="stylesheet" media="all">\r\n<!--END CONTENT-->\r\n<br class="clear">\n</div>\n\n<div class="hidden-print d-lg-none icon-container sticky-bottom btt-ct col-12">\n    <a id="back-to-top" class="back-to-top" href="#top">\n        <i aria-hidden="true" class="fas fa-solid fa-chevron-up" title="Back to Top"></i>\n    <span class="fa-sr-only">Back to Top</span></a>\n</div>\n<button disabled id="filter-button" class="hidden drawer-dropdown-trigger filter-tags-btn btn sticky-bottom btn-block btn-default dropdown-is-active">\n    <div class="filter-button-inner">\n        <i class="fa fa-filter" style="padding-right:5px;"></i>Filter\n        <span class="badge badge-primary subpage-badge-primary">0</span>\n    </div>\n</button>\n\n<div class="footer2 hidden-print row EL-footer2">\n    <div class="container d-md-flex">\n        <div class="col-md-6 col-lg-5 col-12">\n            <div class="col-12">\n                <h3 class="col-12">Subscribe to the FRED newsletter</h3>\n                <form id="subscribe-div" class="form-horizontal form-control newsletter-form">\n                    <div class="col-12">\n                        <div class="input-group">\n                            <input id="subscribe-email-input" type="text" name="email" placeholder="Email"\n                            class="form-control email" aria-label="email">\n                            <button id="subscribe-email-btn" type="button"\n                            class="btn subscribe-newsletter-btn-gtm">\n                            Subscribe</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class="col-12">\n                <h3 class="col-12">Follow us</h3>\n                <div id="follow-icons" class="col-12">\n                    <span id="li-container" class="icon-container">\n                        <a href="http://bit.ly/d056zL">\n                            <i aria-hidden="true" class="fab fa-brands fa-linkedin-in" title="Linked In"></i>\n                            <span class="fa-sr-only">Saint Louis Fed linkedin page</span></a></span>\n                    <span id="fb-container" class="icon-container">\n                        <a href="https://www.facebook.com/stlfed">\n                            <i aria-hidden="true" class="fab fa-brands fa-facebook-f" title="Facebook"></i>\n                            <span class="fa-sr-only">Saint Louis Fed facebook page</span></a></span>\n                    <span id="x-container" class="icon-container">\n                        <a href="http://bit.ly/9ngC3L">\n                            <i aria-hidden="true" class="fab fa-brands fa-x-twitter" title="X (formerly Twitter)"></i>\n                            <span class="fa-sr-only">Saint Louis Fed X page</span></a></span>\n                    <span id="yt-container" class="icon-container">\n                        <a href="http://bit.ly/aY9TVF">\n                            <i aria-hidden="true" class="fab fa-brands fa-youtube" title="YouTube"></i>\n                            <span class="fa-sr-only">Saint Louis Fed YouTube page</span></a></span> \n                </div>\n            </div>\n        </div>\n        <div class="col-md-1 col-lg-2 d-none d-md-block">&nbsp;</div>\n        <div class="col-md-4 col-lg-3 col-7 need-help">\n            <h3 class="col-12">Need Help?</h3>\n            <div class="col-12">\n                <div class="footer-link">\n                    <a class="footer-questions-gtm q-and-a-link-gtm" href="//fred.stlouisfed.org/contactus/">\n                        Questions or Comments</a></div>\n                <div class="footer-link">\n                    <a class="footer-fredhelp-gtm" href="//fredhelp.stlouisfed.org/">FRED Help</a></div>\n            </div>\n            <hr class="col-12">\n            <div class="col-12">\n                <div class="footer-link">\n                    <a href="//fred.stlouisfed.org/legal/">Legal</a></div>\n                <div class="footer-link">\n                    <a href="//research.stlouisfed.org/privacy.html">Privacy Notice & Policy</a></div>\n            </div>\n        </div>\n        <div class="col-md-1 col-lg-2 d-none d-md-block">&nbsp;</div>\n    </div>\n</div>\n\n<script>\n    // function to parse cookies, and return the value\n    function getCookie(name) {\n        var cookies = document.cookie.split(\';\');\n        for (var i in cookies) {\n            var cookie = cookies[i].trim().split(\'=\');\n            if (cookie[0] == name) {\n                return cookie[1];\n            }\n        }\n        return null;\n    }\n    // certain pages in FRED set a custom tag variable\n    // this gets sent to Google Analytics so we can see what tags people are using\n    if (window.tags) {\n        dataLayer.push({ \'tags\': tags });\n\n    }\n\n    // if the user is logged in, send the value of the liruid cookie to Google Analytics\n    var researchLiruid = getCookie(\'research-liruid\');\n    dataLayer.push({ \'userId\': researchLiruid });\n\n</script>\n<script src="//fred.stlouisfed.org/assets/jquery/dist/1754599989.jquery.min.js" type="text/javascript"></script>\n<script src="//fred.stlouisfed.org/assets/popperjs/dist/umd/1754599989.popper.min.js"></script>\n<script src="//fred.stlouisfed.org/assets/bootstrap/dist/js/1754599988.bootstrap.min.js"></script>\n<script src="//fred.stlouisfed.org/assets/select2/dist/js/1754599989.select2.full.min.js"></script>\n<script>\n    // force expire the .fred.stlouisfed.org _ga cookie\n    document.cookie = document.cookie + \'_ga=;domain=.fred.stlouisfed.org;expires=Sat, 01-Jan-2000 00:00:00 GMT\';\n</script>\n\n<script defer src="//fred.stlouisfed.org/assets/jquery-menu-aim/1754599989.jquery.menu-aim.min.js"></script>\n\n<script src="//fred.stlouisfed.org/js/1754599989.common.min.js"></script>\n\n<script src="//fred.stlouisfed.org/assets/js-cookie/src/js.cookie.js"></script>\n<script src="//fred.stlouisfed.org/js/1754599989.508.min.js"></script>\n\n<script>\n    var appConfig = {\n        uapi_host: \'https://fred.stlouisfed.org/uapi\',\n        research_host: \'https://research.stlouisfed.org\',\n        fred_host: \'https://fred.stlouisfed.org\',\n        alfred_host: \'https://alfred.stlouisfed.org\',\n        gsi_client_id: \'115290014367-vpb89b600koe9kn0njeeq38c1unfr3gk.apps.googleusercontent.com\',\n        fred_account_host: \'https://fredaccount.stlouisfed.org\',\n    };\n\n    var domain_suffix = (window.location.hostname.split(".")[0].split("-")[1] || \'\');\n    appConfig.logged_in = Cookies.get(\'research-lirua\' + (domain_suffix ? \'-\' + domain_suffix : \'\')) !== null && Cookies.get(\'research-lirua\' + (domain_suffix ? \'-\' + domain_suffix : \'\')) !== undefined;\n    var getAuth = function (callback) {\n        if (typeof callback === \'function\') {\n            callback();\n        }\n        return;\n    };\n    window.getAuth = getAuth;\n\n</script>\n\n<script>\n    <!--suppress back to top before scroll-->\n    window.onscroll = function(){\n        backTop = $("#back-to-top");\n        window.pageYOffset >= 205 ? backTop.css(\'display\', \'block\') : backTop.css(\'display\', \'none\');\n    }\n\n</script>\n\n<script defer src="//fred.stlouisfed.org/js/1754599989.banner.js"></script>\n<script src="//accounts.google.com/gsi/client" async defer></script>\n<script src="//fred.stlouisfed.org/assets/research/fred-account-react/dist/1754599989.main.dist.js"></script>\n<script src="//fred.stlouisfed.org/assets/research/fred-account-react/dist/1754599989.vendor.dist.js"></script>\n\n<script type="text/javascript">\n    // update mobile footer filter bar active filter count to content.tagsDrawers tags-number\n    $(\'.filter-button-inner .badge\').text($(\'.tags-number\').text());\n</script>\n\r\n<script type="text/javascript"  src="/EPNAkEJdsI9Q-zn__5qe/aGD5kDk4zwrVDV/Z1VmRmZ6JA/JnFN/Tw1HGycB"></script></body>\r\n</html>\r\n'
2025-08-09 20:03:29,722 ERROR Run failed: No active exception to reraise
Traceback (most recent call last):
  File "C:\Dev\market_monitor\market_monitor.py", line 377, in run_once
    ind = compute_indicators()
  File "C:\Dev\market_monitor\market_monitor.py", line 277, in compute_indicators
    pmi   = fetch_fred(FRED["NAPM"], start, end)  # index points
  File "C:\Dev\market_monitor\market_monitor.py", line 250, in fetch_fred
    ser = _retry(3, pdr.DataReader, series, "fred", start, end)
  File "C:\Dev\market_monitor\market_monitor.py", line 226, in _retry
    raise
RuntimeError: No active exception to reraise
2025-08-09 20:13:15,243 DEBUG Entering download()
2025-08-09 20:13:15,245 DEBUG  Entering history()
2025-08-09 20:13:15,252 DEBUG ('CREATE TABLE IF NOT EXISTS "_tz_kv" ("key" VARCHAR(255) NOT NULL PRIMARY KEY, "value" VARCHAR(255)) WITHOUT ROWID', [])
2025-08-09 20:13:15,254 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['^GSPC', 1, 0])
2025-08-09 20:13:17,934 DEBUG   Entering history()
2025-08-09 20:13:17,946 DEBUG ^GSPC: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:13:17,946 DEBUG    Entering get()
2025-08-09 20:13:17,947 DEBUG     Entering _make_request()
2025-08-09 20:13:17,947 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/^GSPC
2025-08-09 20:13:17,947 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:13:17,948 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:13:17,948 DEBUG cookie_mode = 'basic'
2025-08-09 20:13:17,948 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:13:17,948 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:13:17,949 DEBUG         Entering _load_cookie_curlCffi()
2025-08-09 20:13:17,954 DEBUG ('CREATE TABLE IF NOT EXISTS "_cookieschema" ("strategy" VARCHAR(255) NOT NULL PRIMARY KEY, "fetch_date" DATETIME NOT NULL, "cookie_bytes" BLOB NOT NULL) WITHOUT ROWID', [])
2025-08-09 20:13:17,954 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-09 20:13:17,955 DEBUG         Exiting _load_cookie_curlCffi()
2025-08-09 20:13:17,955 DEBUG reusing persistent cookie
2025-08-09 20:13:17,955 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:13:17,956 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:13:17,956 DEBUG         Entering _get_cookie_basic()
2025-08-09 20:13:17,957 DEBUG reusing cookie
2025-08-09 20:13:17,957 DEBUG         Exiting _get_cookie_basic()
2025-08-09 20:13:18,107 DEBUG crumb = 'FULGNX2cwi/'
2025-08-09 20:13:18,108 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:13:18,108 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:13:18,109 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:13:18,333 DEBUG response code=200
2025-08-09 20:13:18,333 DEBUG     Exiting _make_request()
2025-08-09 20:13:18,334 DEBUG    Exiting get()
2025-08-09 20:13:18,346 DEBUG ^GSPC: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:13:18,350 DEBUG ^GSPC: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:13:18,362 DEBUG ^GSPC: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:13:18,370 DEBUG ^GSPC: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:13:18,370 DEBUG   Exiting history()
2025-08-09 20:13:18,371 DEBUG  Exiting history()
2025-08-09 20:13:18,377 DEBUG Exiting download()
2025-08-09 20:13:18,379 DEBUG Entering download()
2025-08-09 20:13:18,380 DEBUG  Entering history()
2025-08-09 20:13:18,380 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['XAUUSD=X', 1, 0])
2025-08-09 20:13:18,381 DEBUG   Entering _fetch_ticker_tz()
2025-08-09 20:13:18,381 DEBUG    Entering get()
2025-08-09 20:13:18,382 DEBUG     Entering _make_request()
2025-08-09 20:13:18,382 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/XAUUSD=X
2025-08-09 20:13:18,382 DEBUG params=frozendict.frozendict({'range': '1d', 'interval': '1d'})
2025-08-09 20:13:18,383 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:13:18,383 DEBUG cookie_mode = 'basic'
2025-08-09 20:13:18,383 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:13:18,383 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:13:18,384 DEBUG reusing cookie
2025-08-09 20:13:18,384 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:13:18,384 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:13:18,384 DEBUG reusing crumb
2025-08-09 20:13:18,384 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:13:18,385 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:13:18,385 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:13:18,493 DEBUG response code=404
2025-08-09 20:13:18,494 DEBUG toggling cookie strategy basic -> csrf
2025-08-09 20:13:18,495 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:13:18,496 DEBUG cookie_mode = 'csrf'
2025-08-09 20:13:18,497 DEBUG       Entering _get_crumb_csrf()
2025-08-09 20:13:18,497 DEBUG        Entering _get_cookie_csrf()
2025-08-09 20:13:18,498 DEBUG         Entering _load_cookie_curlCffi()
2025-08-09 20:13:18,500 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-09 20:13:18,502 DEBUG         Exiting _load_cookie_curlCffi()
2025-08-09 20:13:18,502 DEBUG reusing persistent cookie
2025-08-09 20:13:18,503 DEBUG        Exiting _get_cookie_csrf()
2025-08-09 20:13:18,569 DEBUG crumb = 'FULGNX2cwi/'
2025-08-09 20:13:18,570 DEBUG       Exiting _get_crumb_csrf()
2025-08-09 20:13:18,571 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:13:18,647 DEBUG response code=404
2025-08-09 20:13:18,648 DEBUG     Exiting _make_request()
2025-08-09 20:13:18,649 DEBUG    Exiting get()
2025-08-09 20:13:18,650 DEBUG Got error from yahoo api for ticker XAUUSD=X, Error: {'code': 'Not Found', 'description': 'No data found, symbol may be delisted'}
2025-08-09 20:13:18,651 DEBUG   Exiting _fetch_ticker_tz()
2025-08-09 20:13:18,652 DEBUG get_raw_json(): https://query2.finance.yahoo.com/v10/finance/quoteSummary/XAUUSD=X
2025-08-09 20:13:18,652 DEBUG   Entering get()
2025-08-09 20:13:18,653 DEBUG    Entering _make_request()
2025-08-09 20:13:18,654 DEBUG url=https://query2.finance.yahoo.com/v10/finance/quoteSummary/XAUUSD=X
2025-08-09 20:13:18,655 DEBUG params={'modules': 'financialData,quoteType,defaultKeyStatistics,assetProfile,summaryDetail', 'corsDomain': 'finance.yahoo.com', 'formatted': 'false', 'symbol': 'XAUUSD=X'}
2025-08-09 20:13:18,657 DEBUG     Entering _get_cookie_and_crumb()
2025-08-09 20:13:18,658 DEBUG cookie_mode = 'csrf'
2025-08-09 20:13:18,659 DEBUG      Entering _get_crumb_csrf()
2025-08-09 20:13:18,659 DEBUG reusing crumb
2025-08-09 20:13:18,660 DEBUG      Exiting _get_crumb_csrf()
2025-08-09 20:13:18,661 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-09 20:13:18,814 DEBUG response code=404
2025-08-09 20:13:18,815 DEBUG toggling cookie strategy csrf -> basic
2025-08-09 20:13:18,816 DEBUG     Entering _get_cookie_and_crumb()
2025-08-09 20:13:18,817 DEBUG cookie_mode = 'basic'
2025-08-09 20:13:18,818 DEBUG      Entering _get_cookie_and_crumb_basic()
2025-08-09 20:13:18,819 DEBUG       Entering _get_cookie_basic()
2025-08-09 20:13:18,819 DEBUG        Entering _load_cookie_curlCffi()
2025-08-09 20:13:18,822 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-09 20:13:18,824 DEBUG        Exiting _load_cookie_curlCffi()
2025-08-09 20:13:18,826 DEBUG reusing persistent cookie
2025-08-09 20:13:18,828 DEBUG       Exiting _get_cookie_basic()
2025-08-09 20:13:18,829 DEBUG       Entering _get_crumb_basic()
2025-08-09 20:13:18,830 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:13:18,832 DEBUG reusing cookie
2025-08-09 20:13:18,833 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:13:18,946 DEBUG crumb = 'FULGNX2cwi/'
2025-08-09 20:13:18,947 DEBUG       Exiting _get_crumb_basic()
2025-08-09 20:13:18,947 DEBUG      Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:13:18,948 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-09 20:13:19,102 DEBUG response code=404
2025-08-09 20:13:19,102 DEBUG    Exiting _make_request()
2025-08-09 20:13:19,103 DEBUG   Exiting get()
2025-08-09 20:13:19,103 ERROR HTTP Error 404: 
2025-08-09 20:13:19,104 DEBUG get_raw_json(): https://query1.finance.yahoo.com/v7/finance/quote?
2025-08-09 20:13:19,105 DEBUG   Entering get()
2025-08-09 20:13:19,105 DEBUG    Entering _make_request()
2025-08-09 20:13:19,106 DEBUG url=https://query1.finance.yahoo.com/v7/finance/quote?
2025-08-09 20:13:19,106 DEBUG params={'symbols': 'XAUUSD=X', 'formatted': 'false'}
2025-08-09 20:13:19,107 DEBUG     Entering _get_cookie_and_crumb()
2025-08-09 20:13:19,108 DEBUG cookie_mode = 'basic'
2025-08-09 20:13:19,108 DEBUG      Entering _get_cookie_and_crumb_basic()
2025-08-09 20:13:19,109 DEBUG       Entering _get_cookie_basic()
2025-08-09 20:13:19,109 DEBUG reusing cookie
2025-08-09 20:13:19,110 DEBUG       Exiting _get_cookie_basic()
2025-08-09 20:13:19,110 DEBUG       Entering _get_crumb_basic()
2025-08-09 20:13:19,111 DEBUG reusing crumb
2025-08-09 20:13:19,112 DEBUG       Exiting _get_crumb_basic()
2025-08-09 20:13:19,112 DEBUG      Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:13:19,113 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-09 20:13:19,186 DEBUG response code=200
2025-08-09 20:13:19,186 DEBUG    Exiting _make_request()
2025-08-09 20:13:19,187 DEBUG   Exiting get()
2025-08-09 20:13:19,188 DEBUG   Entering get()
2025-08-09 20:13:19,189 DEBUG    Entering _make_request()
2025-08-09 20:13:19,189 DEBUG url=https://query1.finance.yahoo.com/ws/fundamentals-timeseries/v1/finance/timeseries/XAUUSD=X?symbol=XAUUSD=X&type=trailingPegRatio&period1=1738972800&period2=1754784000
2025-08-09 20:13:19,190 DEBUG params=None
2025-08-09 20:13:19,191 DEBUG     Entering _get_cookie_and_crumb()
2025-08-09 20:13:19,192 DEBUG cookie_mode = 'basic'
2025-08-09 20:13:19,192 DEBUG      Entering _get_cookie_and_crumb_basic()
2025-08-09 20:13:19,193 DEBUG       Entering _get_cookie_basic()
2025-08-09 20:13:19,193 DEBUG reusing cookie
2025-08-09 20:13:19,194 DEBUG       Exiting _get_cookie_basic()
2025-08-09 20:13:19,195 DEBUG       Entering _get_crumb_basic()
2025-08-09 20:13:19,195 DEBUG reusing crumb
2025-08-09 20:13:19,196 DEBUG       Exiting _get_crumb_basic()
2025-08-09 20:13:19,197 DEBUG      Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:13:19,197 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-09 20:13:19,350 DEBUG response code=200
2025-08-09 20:13:19,350 DEBUG    Exiting _make_request()
2025-08-09 20:13:19,351 DEBUG   Exiting get()
2025-08-09 20:13:19,352 DEBUG   Entering history()
2025-08-09 20:13:19,448 ERROR 
1 Failed download:
2025-08-09 20:13:19,448 ERROR ['XAUUSD=X']: YFTzMissingError('possibly delisted; no timezone found')
2025-08-09 20:13:19,448 DEBUG ['XAUUSD=X']: Traceback (most recent call last):
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\multi.py", line 281, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\utils.py", line 92, in wrapper
    result = func(*args, **kwargs)
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\base.py", line 101, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\utils.py", line 92, in wrapper
    result = func(*args, **kwargs)
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\scrapers\history.py", line 128, in history
    raise _exception
yfinance.exceptions.YFTzMissingError: possibly delisted; no timezone found

2025-08-09 20:13:19,452 DEBUG Exiting download()
2025-08-09 20:13:19,453 DEBUG Entering download()
2025-08-09 20:13:19,453 DEBUG  Entering history()
2025-08-09 20:13:19,454 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GC=F', 1, 0])
2025-08-09 20:13:19,455 DEBUG   Entering history()
2025-08-09 20:13:19,455 DEBUG GC=F: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:13:19,456 DEBUG    Entering get()
2025-08-09 20:13:19,456 DEBUG     Entering _make_request()
2025-08-09 20:13:19,456 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/GC=F
2025-08-09 20:13:19,457 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:13:19,457 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:13:19,457 DEBUG cookie_mode = 'basic'
2025-08-09 20:13:19,457 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:13:19,458 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:13:19,458 DEBUG reusing cookie
2025-08-09 20:13:19,458 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:13:19,458 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:13:19,459 DEBUG reusing crumb
2025-08-09 20:13:19,459 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:13:19,459 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:13:19,460 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:13:19,630 DEBUG response code=200
2025-08-09 20:13:19,631 DEBUG     Exiting _make_request()
2025-08-09 20:13:19,631 DEBUG    Exiting get()
2025-08-09 20:13:19,639 DEBUG GC=F: yfinance received OHLC data: 2019-08-12 04:00:00 -> 2025-08-08 04:00:00
2025-08-09 20:13:19,641 DEBUG GC=F: OHLC after cleaning: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:13:19,646 DEBUG GC=F: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:13:19,652 DEBUG GC=F: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:13:19,653 DEBUG   Exiting history()
2025-08-09 20:13:19,653 DEBUG  Exiting history()
2025-08-09 20:13:19,656 DEBUG Exiting download()
2025-08-09 20:13:19,659 DEBUG Entering download()
2025-08-09 20:13:19,660 DEBUG  Entering history()
2025-08-09 20:13:19,661 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['^VIX', 1, 0])
2025-08-09 20:13:19,663 DEBUG   Entering history()
2025-08-09 20:13:19,664 DEBUG ^VIX: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-05:00', 'period2': '2025-08-09 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:13:19,665 DEBUG    Entering get()
2025-08-09 20:13:19,665 DEBUG     Entering _make_request()
2025-08-09 20:13:19,665 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/^VIX
2025-08-09 20:13:19,666 DEBUG params=frozendict.frozendict({'period1': 1565499600, 'period2': 1754715600, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:13:19,666 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:13:19,666 DEBUG cookie_mode = 'basic'
2025-08-09 20:13:19,667 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:13:19,667 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:13:19,667 DEBUG reusing cookie
2025-08-09 20:13:19,668 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:13:19,668 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:13:19,668 DEBUG reusing crumb
2025-08-09 20:13:19,668 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:13:19,669 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:13:19,669 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:13:19,842 DEBUG response code=200
2025-08-09 20:13:19,843 DEBUG     Exiting _make_request()
2025-08-09 20:13:19,844 DEBUG    Exiting get()
2025-08-09 20:13:19,862 DEBUG ^VIX: yfinance received OHLC data: 2019-08-12 07:00:00 -> 2025-08-08 07:00:00
2025-08-09 20:13:19,866 DEBUG ^VIX: OHLC after cleaning: 2019-08-12 02:00:00-05:00 -> 2025-08-08 02:00:00-05:00
2025-08-09 20:13:19,874 DEBUG ^VIX: OHLC after combining events: 2019-08-12 00:00:00-05:00 -> 2025-08-08 00:00:00-05:00
2025-08-09 20:13:19,883 DEBUG ^VIX: yfinance returning OHLC: 2019-08-12 00:00:00-05:00 -> 2025-08-08 00:00:00-05:00
2025-08-09 20:13:19,883 DEBUG   Exiting history()
2025-08-09 20:13:19,884 DEBUG  Exiting history()
2025-08-09 20:13:19,888 DEBUG Exiting download()
2025-08-09 20:13:19,890 DEBUG Entering download()
2025-08-09 20:13:19,891 DEBUG  Entering history()
2025-08-09 20:13:19,892 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GNR', 1, 0])
2025-08-09 20:13:19,892 DEBUG   Entering history()
2025-08-09 20:13:19,893 DEBUG GNR: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:13:19,894 DEBUG    Entering get()
2025-08-09 20:13:19,894 DEBUG     Entering _make_request()
2025-08-09 20:13:19,895 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/GNR
2025-08-09 20:13:19,895 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:13:19,896 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:13:19,896 DEBUG cookie_mode = 'basic'
2025-08-09 20:13:19,896 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:13:19,897 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:13:19,897 DEBUG reusing cookie
2025-08-09 20:13:19,897 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:13:19,898 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:13:19,898 DEBUG reusing crumb
2025-08-09 20:13:19,898 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:13:19,899 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:13:19,899 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:13:20,110 DEBUG response code=200
2025-08-09 20:13:20,110 DEBUG     Exiting _make_request()
2025-08-09 20:13:20,111 DEBUG    Exiting get()
2025-08-09 20:13:20,131 DEBUG GNR: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:13:20,137 DEBUG GNR: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:13:20,154 DEBUG GNR: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:13:20,160 DEBUG GNR: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:13:20,161 DEBUG   Exiting history()
2025-08-09 20:13:20,161 DEBUG  Exiting history()
2025-08-09 20:13:20,165 DEBUG Exiting download()
2025-08-09 20:13:20,167 DEBUG Entering download()
2025-08-09 20:13:20,168 DEBUG  Entering history()
2025-08-09 20:13:20,168 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['XLU', 1, 0])
2025-08-09 20:13:20,169 DEBUG   Entering history()
2025-08-09 20:13:20,169 DEBUG XLU: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:13:20,169 DEBUG    Entering get()
2025-08-09 20:13:20,170 DEBUG     Entering _make_request()
2025-08-09 20:13:20,170 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/XLU
2025-08-09 20:13:20,170 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:13:20,171 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:13:20,171 DEBUG cookie_mode = 'basic'
2025-08-09 20:13:20,171 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:13:20,171 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:13:20,171 DEBUG reusing cookie
2025-08-09 20:13:20,172 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:13:20,172 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:13:20,172 DEBUG reusing crumb
2025-08-09 20:13:20,172 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:13:20,173 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:13:20,173 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:13:20,408 DEBUG response code=200
2025-08-09 20:13:20,408 DEBUG     Exiting _make_request()
2025-08-09 20:13:20,409 DEBUG    Exiting get()
2025-08-09 20:13:20,418 DEBUG XLU: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:13:20,420 DEBUG XLU: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:13:20,436 DEBUG XLU: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:13:20,443 DEBUG XLU: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:13:20,443 DEBUG   Exiting history()
2025-08-09 20:13:20,444 DEBUG  Exiting history()
2025-08-09 20:13:20,448 DEBUG Exiting download()
2025-08-09 20:13:20,450 DEBUG Entering download()
2025-08-09 20:13:20,450 DEBUG  Entering history()
2025-08-09 20:13:20,451 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['INDA', 1, 0])
2025-08-09 20:13:20,451 DEBUG   Entering history()
2025-08-09 20:13:20,452 DEBUG INDA: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:13:20,452 DEBUG    Entering get()
2025-08-09 20:13:20,452 DEBUG     Entering _make_request()
2025-08-09 20:13:20,453 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/INDA
2025-08-09 20:13:20,453 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:13:20,453 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:13:20,453 DEBUG cookie_mode = 'basic'
2025-08-09 20:13:20,454 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:13:20,454 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:13:20,454 DEBUG reusing cookie
2025-08-09 20:13:20,455 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:13:20,455 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:13:20,455 DEBUG reusing crumb
2025-08-09 20:13:20,455 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:13:20,455 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:13:20,456 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:13:20,625 DEBUG response code=200
2025-08-09 20:13:20,627 DEBUG     Exiting _make_request()
2025-08-09 20:13:20,628 DEBUG    Exiting get()
2025-08-09 20:13:20,655 DEBUG INDA: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:13:20,659 DEBUG INDA: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:13:20,683 DEBUG INDA: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:13:20,690 DEBUG INDA: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:13:20,691 DEBUG   Exiting history()
2025-08-09 20:13:20,692 DEBUG  Exiting history()
2025-08-09 20:13:20,697 DEBUG Exiting download()
2025-08-09 20:13:20,714 INFO Completed run: phase=late_cycle date=2025-08-08
2025-08-09 20:14:52,911 DEBUG Entering download()
2025-08-09 20:14:52,912 DEBUG  Entering history()
2025-08-09 20:14:52,915 DEBUG ('CREATE TABLE IF NOT EXISTS "_tz_kv" ("key" VARCHAR(255) NOT NULL PRIMARY KEY, "value" VARCHAR(255)) WITHOUT ROWID', [])
2025-08-09 20:14:52,916 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['^GSPC', 1, 0])
2025-08-09 20:14:52,995 DEBUG   Entering history()
2025-08-09 20:14:53,000 DEBUG ^GSPC: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:14:53,001 DEBUG    Entering get()
2025-08-09 20:14:53,002 DEBUG     Entering _make_request()
2025-08-09 20:14:53,002 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/^GSPC
2025-08-09 20:14:53,002 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:14:53,003 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:14:53,003 DEBUG cookie_mode = 'basic'
2025-08-09 20:14:53,003 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:14:53,003 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:14:53,004 DEBUG         Entering _load_cookie_curlCffi()
2025-08-09 20:14:53,006 DEBUG ('CREATE TABLE IF NOT EXISTS "_cookieschema" ("strategy" VARCHAR(255) NOT NULL PRIMARY KEY, "fetch_date" DATETIME NOT NULL, "cookie_bytes" BLOB NOT NULL) WITHOUT ROWID', [])
2025-08-09 20:14:53,006 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-09 20:14:53,007 DEBUG         Exiting _load_cookie_curlCffi()
2025-08-09 20:14:53,008 DEBUG reusing persistent cookie
2025-08-09 20:14:53,008 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:14:53,008 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:14:53,008 DEBUG         Entering _get_cookie_basic()
2025-08-09 20:14:53,009 DEBUG reusing cookie
2025-08-09 20:14:53,009 DEBUG         Exiting _get_cookie_basic()
2025-08-09 20:14:53,138 DEBUG crumb = 'FULGNX2cwi/'
2025-08-09 20:14:53,139 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:14:53,139 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:14:53,139 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:14:53,345 DEBUG response code=200
2025-08-09 20:14:53,346 DEBUG     Exiting _make_request()
2025-08-09 20:14:53,346 DEBUG    Exiting get()
2025-08-09 20:14:53,353 DEBUG ^GSPC: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:14:53,356 DEBUG ^GSPC: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:14:53,365 DEBUG ^GSPC: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:14:53,373 DEBUG ^GSPC: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:14:53,373 DEBUG   Exiting history()
2025-08-09 20:14:53,374 DEBUG  Exiting history()
2025-08-09 20:14:53,379 DEBUG Exiting download()
2025-08-09 20:14:53,383 DEBUG Entering download()
2025-08-09 20:14:53,383 DEBUG  Entering history()
2025-08-09 20:14:53,384 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['XAUUSD=X', 1, 0])
2025-08-09 20:14:53,385 DEBUG   Entering _fetch_ticker_tz()
2025-08-09 20:14:53,385 DEBUG    Entering get()
2025-08-09 20:14:53,385 DEBUG     Entering _make_request()
2025-08-09 20:14:53,386 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/XAUUSD=X
2025-08-09 20:14:53,386 DEBUG params=frozendict.frozendict({'range': '1d', 'interval': '1d'})
2025-08-09 20:14:53,386 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:14:53,387 DEBUG cookie_mode = 'basic'
2025-08-09 20:14:53,387 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:14:53,387 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:14:53,388 DEBUG reusing cookie
2025-08-09 20:14:53,388 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:14:53,388 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:14:53,388 DEBUG reusing crumb
2025-08-09 20:14:53,389 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:14:53,389 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:14:53,389 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:14:53,508 DEBUG response code=404
2025-08-09 20:14:53,508 DEBUG toggling cookie strategy basic -> csrf
2025-08-09 20:14:53,509 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:14:53,509 DEBUG cookie_mode = 'csrf'
2025-08-09 20:14:53,509 DEBUG       Entering _get_crumb_csrf()
2025-08-09 20:14:53,510 DEBUG        Entering _get_cookie_csrf()
2025-08-09 20:14:53,510 DEBUG         Entering _load_cookie_curlCffi()
2025-08-09 20:14:53,511 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-09 20:14:53,512 DEBUG         Exiting _load_cookie_curlCffi()
2025-08-09 20:14:53,512 DEBUG reusing persistent cookie
2025-08-09 20:14:53,512 DEBUG        Exiting _get_cookie_csrf()
2025-08-09 20:14:53,579 DEBUG crumb = 'FULGNX2cwi/'
2025-08-09 20:14:53,580 DEBUG       Exiting _get_crumb_csrf()
2025-08-09 20:14:53,580 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:14:53,714 DEBUG response code=404
2025-08-09 20:14:53,714 DEBUG     Exiting _make_request()
2025-08-09 20:14:53,715 DEBUG    Exiting get()
2025-08-09 20:14:53,715 DEBUG Got error from yahoo api for ticker XAUUSD=X, Error: {'code': 'Not Found', 'description': 'No data found, symbol may be delisted'}
2025-08-09 20:14:53,715 DEBUG   Exiting _fetch_ticker_tz()
2025-08-09 20:14:53,716 DEBUG get_raw_json(): https://query2.finance.yahoo.com/v10/finance/quoteSummary/XAUUSD=X
2025-08-09 20:14:53,716 DEBUG   Entering get()
2025-08-09 20:14:53,716 DEBUG    Entering _make_request()
2025-08-09 20:14:53,717 DEBUG url=https://query2.finance.yahoo.com/v10/finance/quoteSummary/XAUUSD=X
2025-08-09 20:14:53,717 DEBUG params={'modules': 'financialData,quoteType,defaultKeyStatistics,assetProfile,summaryDetail', 'corsDomain': 'finance.yahoo.com', 'formatted': 'false', 'symbol': 'XAUUSD=X'}
2025-08-09 20:14:53,717 DEBUG     Entering _get_cookie_and_crumb()
2025-08-09 20:14:53,717 DEBUG cookie_mode = 'csrf'
2025-08-09 20:14:53,718 DEBUG      Entering _get_crumb_csrf()
2025-08-09 20:14:53,718 DEBUG reusing crumb
2025-08-09 20:14:53,718 DEBUG      Exiting _get_crumb_csrf()
2025-08-09 20:14:53,719 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-09 20:14:53,874 DEBUG response code=404
2025-08-09 20:14:53,874 DEBUG toggling cookie strategy csrf -> basic
2025-08-09 20:14:53,874 DEBUG     Entering _get_cookie_and_crumb()
2025-08-09 20:14:53,875 DEBUG cookie_mode = 'basic'
2025-08-09 20:14:53,875 DEBUG      Entering _get_cookie_and_crumb_basic()
2025-08-09 20:14:53,875 DEBUG       Entering _get_cookie_basic()
2025-08-09 20:14:53,876 DEBUG        Entering _load_cookie_curlCffi()
2025-08-09 20:14:53,876 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-09 20:14:53,877 DEBUG        Exiting _load_cookie_curlCffi()
2025-08-09 20:14:53,877 DEBUG reusing persistent cookie
2025-08-09 20:14:53,877 DEBUG       Exiting _get_cookie_basic()
2025-08-09 20:14:53,878 DEBUG       Entering _get_crumb_basic()
2025-08-09 20:14:53,878 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:14:53,878 DEBUG reusing cookie
2025-08-09 20:14:53,879 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:14:53,985 DEBUG crumb = 'FULGNX2cwi/'
2025-08-09 20:14:53,986 DEBUG       Exiting _get_crumb_basic()
2025-08-09 20:14:53,986 DEBUG      Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:14:53,986 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-09 20:14:54,135 DEBUG response code=404
2025-08-09 20:14:54,136 DEBUG    Exiting _make_request()
2025-08-09 20:14:54,136 DEBUG   Exiting get()
2025-08-09 20:14:54,136 ERROR HTTP Error 404: 
2025-08-09 20:14:54,136 DEBUG get_raw_json(): https://query1.finance.yahoo.com/v7/finance/quote?
2025-08-09 20:14:54,137 DEBUG   Entering get()
2025-08-09 20:14:54,137 DEBUG    Entering _make_request()
2025-08-09 20:14:54,137 DEBUG url=https://query1.finance.yahoo.com/v7/finance/quote?
2025-08-09 20:14:54,138 DEBUG params={'symbols': 'XAUUSD=X', 'formatted': 'false'}
2025-08-09 20:14:54,138 DEBUG     Entering _get_cookie_and_crumb()
2025-08-09 20:14:54,138 DEBUG cookie_mode = 'basic'
2025-08-09 20:14:54,138 DEBUG      Entering _get_cookie_and_crumb_basic()
2025-08-09 20:14:54,139 DEBUG       Entering _get_cookie_basic()
2025-08-09 20:14:54,139 DEBUG reusing cookie
2025-08-09 20:14:54,139 DEBUG       Exiting _get_cookie_basic()
2025-08-09 20:14:54,139 DEBUG       Entering _get_crumb_basic()
2025-08-09 20:14:54,140 DEBUG reusing crumb
2025-08-09 20:14:54,140 DEBUG       Exiting _get_crumb_basic()
2025-08-09 20:14:54,140 DEBUG      Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:14:54,140 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-09 20:14:54,217 DEBUG response code=200
2025-08-09 20:14:54,217 DEBUG    Exiting _make_request()
2025-08-09 20:14:54,217 DEBUG   Exiting get()
2025-08-09 20:14:54,218 DEBUG   Entering get()
2025-08-09 20:14:54,218 DEBUG    Entering _make_request()
2025-08-09 20:14:54,219 DEBUG url=https://query1.finance.yahoo.com/ws/fundamentals-timeseries/v1/finance/timeseries/XAUUSD=X?symbol=XAUUSD=X&type=trailingPegRatio&period1=1738972800&period2=1754784000
2025-08-09 20:14:54,219 DEBUG params=None
2025-08-09 20:14:54,219 DEBUG     Entering _get_cookie_and_crumb()
2025-08-09 20:14:54,219 DEBUG cookie_mode = 'basic'
2025-08-09 20:14:54,220 DEBUG      Entering _get_cookie_and_crumb_basic()
2025-08-09 20:14:54,220 DEBUG       Entering _get_cookie_basic()
2025-08-09 20:14:54,220 DEBUG reusing cookie
2025-08-09 20:14:54,220 DEBUG       Exiting _get_cookie_basic()
2025-08-09 20:14:54,221 DEBUG       Entering _get_crumb_basic()
2025-08-09 20:14:54,221 DEBUG reusing crumb
2025-08-09 20:14:54,221 DEBUG       Exiting _get_crumb_basic()
2025-08-09 20:14:54,222 DEBUG      Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:14:54,222 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-09 20:14:54,373 DEBUG response code=200
2025-08-09 20:14:54,373 DEBUG    Exiting _make_request()
2025-08-09 20:14:54,374 DEBUG   Exiting get()
2025-08-09 20:14:54,374 DEBUG   Entering history()
2025-08-09 20:14:54,379 ERROR 
1 Failed download:
2025-08-09 20:14:54,379 ERROR ['XAUUSD=X']: YFTzMissingError('possibly delisted; no timezone found')
2025-08-09 20:14:54,380 DEBUG ['XAUUSD=X']: Traceback (most recent call last):
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\multi.py", line 281, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\utils.py", line 92, in wrapper
    result = func(*args, **kwargs)
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\base.py", line 101, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\utils.py", line 92, in wrapper
    result = func(*args, **kwargs)
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\scrapers\history.py", line 128, in history
    raise _exception
yfinance.exceptions.YFTzMissingError: possibly delisted; no timezone found

2025-08-09 20:14:54,385 DEBUG Exiting download()
2025-08-09 20:14:54,386 DEBUG Entering download()
2025-08-09 20:14:54,386 DEBUG  Entering history()
2025-08-09 20:14:54,387 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GC=F', 1, 0])
2025-08-09 20:14:54,388 DEBUG   Entering history()
2025-08-09 20:14:54,388 DEBUG GC=F: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:14:54,389 DEBUG    Entering get()
2025-08-09 20:14:54,389 DEBUG     Entering _make_request()
2025-08-09 20:14:54,389 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/GC=F
2025-08-09 20:14:54,390 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:14:54,390 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:14:54,390 DEBUG cookie_mode = 'basic'
2025-08-09 20:14:54,391 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:14:54,391 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:14:54,391 DEBUG reusing cookie
2025-08-09 20:14:54,392 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:14:54,392 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:14:54,392 DEBUG reusing crumb
2025-08-09 20:14:54,392 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:14:54,393 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:14:54,393 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:14:54,588 DEBUG response code=200
2025-08-09 20:14:54,588 DEBUG     Exiting _make_request()
2025-08-09 20:14:54,589 DEBUG    Exiting get()
2025-08-09 20:14:54,597 DEBUG GC=F: yfinance received OHLC data: 2019-08-12 04:00:00 -> 2025-08-08 04:00:00
2025-08-09 20:14:54,600 DEBUG GC=F: OHLC after cleaning: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:14:54,608 DEBUG GC=F: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:14:54,619 DEBUG GC=F: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:14:54,620 DEBUG   Exiting history()
2025-08-09 20:14:54,620 DEBUG  Exiting history()
2025-08-09 20:14:54,624 DEBUG Exiting download()
2025-08-09 20:14:54,627 DEBUG Entering download()
2025-08-09 20:14:54,628 DEBUG  Entering history()
2025-08-09 20:14:54,629 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['^VIX', 1, 0])
2025-08-09 20:14:54,631 DEBUG   Entering history()
2025-08-09 20:14:54,633 DEBUG ^VIX: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-05:00', 'period2': '2025-08-09 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:14:54,634 DEBUG    Entering get()
2025-08-09 20:14:54,634 DEBUG     Entering _make_request()
2025-08-09 20:14:54,634 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/^VIX
2025-08-09 20:14:54,635 DEBUG params=frozendict.frozendict({'period1': 1565499600, 'period2': 1754715600, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:14:54,635 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:14:54,635 DEBUG cookie_mode = 'basic'
2025-08-09 20:14:54,636 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:14:54,636 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:14:54,636 DEBUG reusing cookie
2025-08-09 20:14:54,637 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:14:54,637 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:14:54,637 DEBUG reusing crumb
2025-08-09 20:14:54,637 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:14:54,638 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:14:54,638 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:14:54,807 DEBUG response code=200
2025-08-09 20:14:54,807 DEBUG     Exiting _make_request()
2025-08-09 20:14:54,808 DEBUG    Exiting get()
2025-08-09 20:14:54,816 DEBUG ^VIX: yfinance received OHLC data: 2019-08-12 07:00:00 -> 2025-08-08 07:00:00
2025-08-09 20:14:54,818 DEBUG ^VIX: OHLC after cleaning: 2019-08-12 02:00:00-05:00 -> 2025-08-08 02:00:00-05:00
2025-08-09 20:14:54,825 DEBUG ^VIX: OHLC after combining events: 2019-08-12 00:00:00-05:00 -> 2025-08-08 00:00:00-05:00
2025-08-09 20:14:54,835 DEBUG ^VIX: yfinance returning OHLC: 2019-08-12 00:00:00-05:00 -> 2025-08-08 00:00:00-05:00
2025-08-09 20:14:54,835 DEBUG   Exiting history()
2025-08-09 20:14:54,836 DEBUG  Exiting history()
2025-08-09 20:14:54,840 DEBUG Exiting download()
2025-08-09 20:14:54,842 DEBUG Entering download()
2025-08-09 20:14:54,843 DEBUG  Entering history()
2025-08-09 20:14:54,843 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GNR', 1, 0])
2025-08-09 20:14:54,844 DEBUG   Entering history()
2025-08-09 20:14:54,845 DEBUG GNR: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:14:54,845 DEBUG    Entering get()
2025-08-09 20:14:54,845 DEBUG     Entering _make_request()
2025-08-09 20:14:54,846 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/GNR
2025-08-09 20:14:54,846 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:14:54,847 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:14:54,848 DEBUG cookie_mode = 'basic'
2025-08-09 20:14:54,848 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:14:54,848 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:14:54,849 DEBUG reusing cookie
2025-08-09 20:14:54,849 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:14:54,849 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:14:54,850 DEBUG reusing crumb
2025-08-09 20:14:54,850 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:14:54,851 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:14:54,851 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:14:55,036 DEBUG response code=200
2025-08-09 20:14:55,037 DEBUG     Exiting _make_request()
2025-08-09 20:14:55,037 DEBUG    Exiting get()
2025-08-09 20:14:55,045 DEBUG GNR: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:14:55,047 DEBUG GNR: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:14:55,060 DEBUG GNR: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:14:55,069 DEBUG GNR: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:14:55,070 DEBUG   Exiting history()
2025-08-09 20:14:55,070 DEBUG  Exiting history()
2025-08-09 20:14:55,077 DEBUG Exiting download()
2025-08-09 20:14:55,081 DEBUG Entering download()
2025-08-09 20:14:55,081 DEBUG  Entering history()
2025-08-09 20:14:55,082 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['XLU', 1, 0])
2025-08-09 20:14:55,083 DEBUG   Entering history()
2025-08-09 20:14:55,084 DEBUG XLU: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:14:55,085 DEBUG    Entering get()
2025-08-09 20:14:55,085 DEBUG     Entering _make_request()
2025-08-09 20:14:55,085 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/XLU
2025-08-09 20:14:55,085 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:14:55,086 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:14:55,086 DEBUG cookie_mode = 'basic'
2025-08-09 20:14:55,086 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:14:55,087 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:14:55,087 DEBUG reusing cookie
2025-08-09 20:14:55,087 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:14:55,088 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:14:55,088 DEBUG reusing crumb
2025-08-09 20:14:55,088 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:14:55,089 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:14:55,089 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:14:55,311 DEBUG response code=200
2025-08-09 20:14:55,312 DEBUG     Exiting _make_request()
2025-08-09 20:14:55,312 DEBUG    Exiting get()
2025-08-09 20:14:55,319 DEBUG XLU: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:14:55,322 DEBUG XLU: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:14:55,336 DEBUG XLU: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:14:55,343 DEBUG XLU: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:14:55,343 DEBUG   Exiting history()
2025-08-09 20:14:55,344 DEBUG  Exiting history()
2025-08-09 20:14:55,349 DEBUG Exiting download()
2025-08-09 20:14:55,352 DEBUG Entering download()
2025-08-09 20:14:55,352 DEBUG  Entering history()
2025-08-09 20:14:55,353 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['INDA', 1, 0])
2025-08-09 20:14:55,354 DEBUG   Entering history()
2025-08-09 20:14:55,354 DEBUG INDA: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:14:55,355 DEBUG    Entering get()
2025-08-09 20:14:55,355 DEBUG     Entering _make_request()
2025-08-09 20:14:55,355 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/INDA
2025-08-09 20:14:55,356 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:14:55,356 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:14:55,356 DEBUG cookie_mode = 'basic'
2025-08-09 20:14:55,357 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:14:55,357 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:14:55,357 DEBUG reusing cookie
2025-08-09 20:14:55,357 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:14:55,358 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:14:55,358 DEBUG reusing crumb
2025-08-09 20:14:55,358 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:14:55,359 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:14:55,359 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:14:55,539 DEBUG response code=200
2025-08-09 20:14:55,539 DEBUG     Exiting _make_request()
2025-08-09 20:14:55,539 DEBUG    Exiting get()
2025-08-09 20:14:55,547 DEBUG INDA: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:14:55,550 DEBUG INDA: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:14:55,561 DEBUG INDA: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:14:55,571 DEBUG INDA: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:14:55,571 DEBUG   Exiting history()
2025-08-09 20:14:55,571 DEBUG  Exiting history()
2025-08-09 20:14:55,575 DEBUG Exiting download()
2025-08-09 20:14:55,581 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:14:56,099 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=DGS10&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 12507
2025-08-09 20:14:56,780 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:14:57,124 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=TB3MS&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 836
2025-08-09 20:14:57,170 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:14:57,448 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=BAA10YM&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 843
2025-08-09 20:14:57,484 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:14:57,808 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=TEDRATE&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 4539
2025-08-09 20:14:58,097 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:14:58,312 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=NAPM&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 400 77
2025-08-09 20:14:58,313 WARNING Retry 1/3 after error: HTTP 400: {"error_code":400,"error_message":"Bad Request.  The series does not exist."}
2025-08-09 20:15:00,315 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:15:00,545 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=NAPM&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 400 77
2025-08-09 20:15:00,546 WARNING Retry 2/3 after error: HTTP 400: {"error_code":400,"error_message":"Bad Request.  The series does not exist."}
2025-08-09 20:15:03,748 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:15:03,982 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=NAPM&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 400 77
2025-08-09 20:15:03,983 WARNING Retry 3/3 after error: HTTP 400: {"error_code":400,"error_message":"Bad Request.  The series does not exist."}
2025-08-09 20:15:09,123 INFO Completed run: phase=late_cycle date=2021-12-01
2025-08-09 20:32:16,036 DEBUG Entering download()
2025-08-09 20:32:16,037 DEBUG  Entering history()
2025-08-09 20:32:16,048 DEBUG ('CREATE TABLE IF NOT EXISTS "_tz_kv" ("key" VARCHAR(255) NOT NULL PRIMARY KEY, "value" VARCHAR(255)) WITHOUT ROWID', [])
2025-08-09 20:32:16,049 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['^GSPC', 1, 0])
2025-08-09 20:32:16,208 DEBUG   Entering history()
2025-08-09 20:32:16,216 DEBUG ^GSPC: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:32:16,218 DEBUG    Entering get()
2025-08-09 20:32:16,218 DEBUG     Entering _make_request()
2025-08-09 20:32:16,218 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/^GSPC
2025-08-09 20:32:16,219 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:32:16,219 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:32:16,219 DEBUG cookie_mode = 'basic'
2025-08-09 20:32:16,220 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:32:16,220 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:32:16,220 DEBUG         Entering _load_cookie_curlCffi()
2025-08-09 20:32:16,223 DEBUG ('CREATE TABLE IF NOT EXISTS "_cookieschema" ("strategy" VARCHAR(255) NOT NULL PRIMARY KEY, "fetch_date" DATETIME NOT NULL, "cookie_bytes" BLOB NOT NULL) WITHOUT ROWID', [])
2025-08-09 20:32:16,224 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-09 20:32:16,225 DEBUG         Exiting _load_cookie_curlCffi()
2025-08-09 20:32:16,226 DEBUG reusing persistent cookie
2025-08-09 20:32:16,227 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:32:16,228 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:32:16,229 DEBUG         Entering _get_cookie_basic()
2025-08-09 20:32:16,230 DEBUG reusing cookie
2025-08-09 20:32:16,230 DEBUG         Exiting _get_cookie_basic()
2025-08-09 20:32:16,440 DEBUG crumb = 'FULGNX2cwi/'
2025-08-09 20:32:16,441 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:32:16,441 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:32:16,441 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:32:16,644 DEBUG response code=200
2025-08-09 20:32:16,644 DEBUG     Exiting _make_request()
2025-08-09 20:32:16,644 DEBUG    Exiting get()
2025-08-09 20:32:16,661 DEBUG ^GSPC: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:32:16,667 DEBUG ^GSPC: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:32:16,680 DEBUG ^GSPC: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:32:16,695 DEBUG ^GSPC: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:32:16,696 DEBUG   Exiting history()
2025-08-09 20:32:16,696 DEBUG  Exiting history()
2025-08-09 20:32:16,707 DEBUG Exiting download()
2025-08-09 20:32:16,709 DEBUG Entering download()
2025-08-09 20:32:16,709 DEBUG  Entering history()
2025-08-09 20:32:16,710 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['XAUUSD=X', 1, 0])
2025-08-09 20:32:16,710 DEBUG   Entering _fetch_ticker_tz()
2025-08-09 20:32:16,711 DEBUG    Entering get()
2025-08-09 20:32:16,711 DEBUG     Entering _make_request()
2025-08-09 20:32:16,711 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/XAUUSD=X
2025-08-09 20:32:16,712 DEBUG params=frozendict.frozendict({'range': '1d', 'interval': '1d'})
2025-08-09 20:32:16,712 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:32:16,712 DEBUG cookie_mode = 'basic'
2025-08-09 20:32:16,712 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:32:16,712 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:32:16,713 DEBUG reusing cookie
2025-08-09 20:32:16,713 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:32:16,713 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:32:16,713 DEBUG reusing crumb
2025-08-09 20:32:16,714 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:32:16,714 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:32:16,714 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:32:16,850 DEBUG response code=404
2025-08-09 20:32:16,850 DEBUG toggling cookie strategy basic -> csrf
2025-08-09 20:32:16,850 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:32:16,851 DEBUG cookie_mode = 'csrf'
2025-08-09 20:32:16,851 DEBUG       Entering _get_crumb_csrf()
2025-08-09 20:32:16,851 DEBUG        Entering _get_cookie_csrf()
2025-08-09 20:32:16,852 DEBUG         Entering _load_cookie_curlCffi()
2025-08-09 20:32:16,852 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-09 20:32:16,853 DEBUG         Exiting _load_cookie_curlCffi()
2025-08-09 20:32:16,853 DEBUG reusing persistent cookie
2025-08-09 20:32:16,853 DEBUG        Exiting _get_cookie_csrf()
2025-08-09 20:32:16,918 DEBUG crumb = 'FULGNX2cwi/'
2025-08-09 20:32:16,918 DEBUG       Exiting _get_crumb_csrf()
2025-08-09 20:32:16,919 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:32:16,983 DEBUG response code=404
2025-08-09 20:32:16,984 DEBUG     Exiting _make_request()
2025-08-09 20:32:16,984 DEBUG    Exiting get()
2025-08-09 20:32:16,985 DEBUG Got error from yahoo api for ticker XAUUSD=X, Error: {'code': 'Not Found', 'description': 'No data found, symbol may be delisted'}
2025-08-09 20:32:16,986 DEBUG   Exiting _fetch_ticker_tz()
2025-08-09 20:32:16,986 DEBUG get_raw_json(): https://query2.finance.yahoo.com/v10/finance/quoteSummary/XAUUSD=X
2025-08-09 20:32:16,987 DEBUG   Entering get()
2025-08-09 20:32:16,987 DEBUG    Entering _make_request()
2025-08-09 20:32:16,988 DEBUG url=https://query2.finance.yahoo.com/v10/finance/quoteSummary/XAUUSD=X
2025-08-09 20:32:16,988 DEBUG params={'modules': 'financialData,quoteType,defaultKeyStatistics,assetProfile,summaryDetail', 'corsDomain': 'finance.yahoo.com', 'formatted': 'false', 'symbol': 'XAUUSD=X'}
2025-08-09 20:32:16,989 DEBUG     Entering _get_cookie_and_crumb()
2025-08-09 20:32:16,989 DEBUG cookie_mode = 'csrf'
2025-08-09 20:32:16,990 DEBUG      Entering _get_crumb_csrf()
2025-08-09 20:32:16,990 DEBUG reusing crumb
2025-08-09 20:32:16,991 DEBUG      Exiting _get_crumb_csrf()
2025-08-09 20:32:16,991 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-09 20:32:17,142 DEBUG response code=404
2025-08-09 20:32:17,143 DEBUG toggling cookie strategy csrf -> basic
2025-08-09 20:32:17,143 DEBUG     Entering _get_cookie_and_crumb()
2025-08-09 20:32:17,144 DEBUG cookie_mode = 'basic'
2025-08-09 20:32:17,144 DEBUG      Entering _get_cookie_and_crumb_basic()
2025-08-09 20:32:17,145 DEBUG       Entering _get_cookie_basic()
2025-08-09 20:32:17,146 DEBUG        Entering _load_cookie_curlCffi()
2025-08-09 20:32:17,146 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-09 20:32:17,147 DEBUG        Exiting _load_cookie_curlCffi()
2025-08-09 20:32:17,148 DEBUG reusing persistent cookie
2025-08-09 20:32:17,148 DEBUG       Exiting _get_cookie_basic()
2025-08-09 20:32:17,149 DEBUG       Entering _get_crumb_basic()
2025-08-09 20:32:17,150 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:32:17,150 DEBUG reusing cookie
2025-08-09 20:32:17,151 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:32:17,399 DEBUG crumb = 'FULGNX2cwi/'
2025-08-09 20:32:17,400 DEBUG       Exiting _get_crumb_basic()
2025-08-09 20:32:17,401 DEBUG      Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:32:17,402 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-09 20:32:17,638 DEBUG response code=404
2025-08-09 20:32:17,639 DEBUG    Exiting _make_request()
2025-08-09 20:32:17,641 DEBUG   Exiting get()
2025-08-09 20:32:17,642 ERROR HTTP Error 404: 
2025-08-09 20:32:17,643 DEBUG get_raw_json(): https://query1.finance.yahoo.com/v7/finance/quote?
2025-08-09 20:32:17,644 DEBUG   Entering get()
2025-08-09 20:32:17,646 DEBUG    Entering _make_request()
2025-08-09 20:32:17,647 DEBUG url=https://query1.finance.yahoo.com/v7/finance/quote?
2025-08-09 20:32:17,648 DEBUG params={'symbols': 'XAUUSD=X', 'formatted': 'false'}
2025-08-09 20:32:17,650 DEBUG     Entering _get_cookie_and_crumb()
2025-08-09 20:32:17,651 DEBUG cookie_mode = 'basic'
2025-08-09 20:32:17,652 DEBUG      Entering _get_cookie_and_crumb_basic()
2025-08-09 20:32:17,654 DEBUG       Entering _get_cookie_basic()
2025-08-09 20:32:17,655 DEBUG reusing cookie
2025-08-09 20:32:17,657 DEBUG       Exiting _get_cookie_basic()
2025-08-09 20:32:17,658 DEBUG       Entering _get_crumb_basic()
2025-08-09 20:32:17,659 DEBUG reusing crumb
2025-08-09 20:32:17,661 DEBUG       Exiting _get_crumb_basic()
2025-08-09 20:32:17,662 DEBUG      Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:32:17,663 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-09 20:32:17,806 DEBUG response code=200
2025-08-09 20:32:17,806 DEBUG    Exiting _make_request()
2025-08-09 20:32:17,807 DEBUG   Exiting get()
2025-08-09 20:32:17,808 DEBUG   Entering get()
2025-08-09 20:32:17,808 DEBUG    Entering _make_request()
2025-08-09 20:32:17,809 DEBUG url=https://query1.finance.yahoo.com/ws/fundamentals-timeseries/v1/finance/timeseries/XAUUSD=X?symbol=XAUUSD=X&type=trailingPegRatio&period1=1738972800&period2=1754784000
2025-08-09 20:32:17,810 DEBUG params=None
2025-08-09 20:32:17,810 DEBUG     Entering _get_cookie_and_crumb()
2025-08-09 20:32:17,811 DEBUG cookie_mode = 'basic'
2025-08-09 20:32:17,811 DEBUG      Entering _get_cookie_and_crumb_basic()
2025-08-09 20:32:17,812 DEBUG       Entering _get_cookie_basic()
2025-08-09 20:32:17,812 DEBUG reusing cookie
2025-08-09 20:32:17,813 DEBUG       Exiting _get_cookie_basic()
2025-08-09 20:32:17,813 DEBUG       Entering _get_crumb_basic()
2025-08-09 20:32:17,814 DEBUG reusing crumb
2025-08-09 20:32:17,815 DEBUG       Exiting _get_crumb_basic()
2025-08-09 20:32:17,815 DEBUG      Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:32:17,816 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-09 20:32:18,011 DEBUG response code=200
2025-08-09 20:32:18,011 DEBUG    Exiting _make_request()
2025-08-09 20:32:18,012 DEBUG   Exiting get()
2025-08-09 20:32:18,012 DEBUG   Entering history()
2025-08-09 20:32:18,023 ERROR 
1 Failed download:
2025-08-09 20:32:18,023 ERROR ['XAUUSD=X']: YFTzMissingError('possibly delisted; no timezone found')
2025-08-09 20:32:18,024 DEBUG ['XAUUSD=X']: Traceback (most recent call last):
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\multi.py", line 281, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\utils.py", line 92, in wrapper
    result = func(*args, **kwargs)
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\base.py", line 101, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\utils.py", line 92, in wrapper
    result = func(*args, **kwargs)
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\scrapers\history.py", line 128, in history
    raise _exception
yfinance.exceptions.YFTzMissingError: possibly delisted; no timezone found

2025-08-09 20:32:18,030 DEBUG Exiting download()
2025-08-09 20:32:18,031 DEBUG Entering download()
2025-08-09 20:32:18,032 DEBUG  Entering history()
2025-08-09 20:32:18,033 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GC=F', 1, 0])
2025-08-09 20:32:18,034 DEBUG   Entering history()
2025-08-09 20:32:18,035 DEBUG GC=F: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:32:18,035 DEBUG    Entering get()
2025-08-09 20:32:18,036 DEBUG     Entering _make_request()
2025-08-09 20:32:18,036 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/GC=F
2025-08-09 20:32:18,037 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:32:18,038 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:32:18,038 DEBUG cookie_mode = 'basic'
2025-08-09 20:32:18,039 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:32:18,039 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:32:18,040 DEBUG reusing cookie
2025-08-09 20:32:18,040 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:32:18,041 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:32:18,041 DEBUG reusing crumb
2025-08-09 20:32:18,042 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:32:18,043 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:32:18,043 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:32:18,214 DEBUG response code=200
2025-08-09 20:32:18,215 DEBUG     Exiting _make_request()
2025-08-09 20:32:18,215 DEBUG    Exiting get()
2025-08-09 20:32:18,228 DEBUG GC=F: yfinance received OHLC data: 2019-08-12 04:00:00 -> 2025-08-08 04:00:00
2025-08-09 20:32:18,231 DEBUG GC=F: OHLC after cleaning: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:32:18,240 DEBUG GC=F: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:32:18,249 DEBUG GC=F: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:32:18,250 DEBUG   Exiting history()
2025-08-09 20:32:18,250 DEBUG  Exiting history()
2025-08-09 20:32:18,256 DEBUG Exiting download()
2025-08-09 20:32:18,259 DEBUG Entering download()
2025-08-09 20:32:18,259 DEBUG  Entering history()
2025-08-09 20:32:18,260 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['^VIX', 1, 0])
2025-08-09 20:32:18,261 DEBUG   Entering history()
2025-08-09 20:32:18,263 DEBUG ^VIX: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-05:00', 'period2': '2025-08-09 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:32:18,263 DEBUG    Entering get()
2025-08-09 20:32:18,263 DEBUG     Entering _make_request()
2025-08-09 20:32:18,264 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/^VIX
2025-08-09 20:32:18,264 DEBUG params=frozendict.frozendict({'period1': 1565499600, 'period2': 1754715600, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:32:18,264 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:32:18,265 DEBUG cookie_mode = 'basic'
2025-08-09 20:32:18,265 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:32:18,265 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:32:18,265 DEBUG reusing cookie
2025-08-09 20:32:18,266 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:32:18,266 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:32:18,266 DEBUG reusing crumb
2025-08-09 20:32:18,266 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:32:18,267 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:32:18,267 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:32:18,430 DEBUG response code=200
2025-08-09 20:32:18,431 DEBUG     Exiting _make_request()
2025-08-09 20:32:18,431 DEBUG    Exiting get()
2025-08-09 20:32:18,445 DEBUG ^VIX: yfinance received OHLC data: 2019-08-12 07:00:00 -> 2025-08-08 07:00:00
2025-08-09 20:32:18,448 DEBUG ^VIX: OHLC after cleaning: 2019-08-12 02:00:00-05:00 -> 2025-08-08 02:00:00-05:00
2025-08-09 20:32:18,456 DEBUG ^VIX: OHLC after combining events: 2019-08-12 00:00:00-05:00 -> 2025-08-08 00:00:00-05:00
2025-08-09 20:32:18,462 DEBUG ^VIX: yfinance returning OHLC: 2019-08-12 00:00:00-05:00 -> 2025-08-08 00:00:00-05:00
2025-08-09 20:32:18,463 DEBUG   Exiting history()
2025-08-09 20:32:18,463 DEBUG  Exiting history()
2025-08-09 20:32:18,467 DEBUG Exiting download()
2025-08-09 20:32:18,469 DEBUG Entering download()
2025-08-09 20:32:18,469 DEBUG  Entering history()
2025-08-09 20:32:18,470 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GNR', 1, 0])
2025-08-09 20:32:18,471 DEBUG   Entering history()
2025-08-09 20:32:18,471 DEBUG GNR: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:32:18,472 DEBUG    Entering get()
2025-08-09 20:32:18,473 DEBUG     Entering _make_request()
2025-08-09 20:32:18,473 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/GNR
2025-08-09 20:32:18,473 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:32:18,474 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:32:18,474 DEBUG cookie_mode = 'basic'
2025-08-09 20:32:18,474 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:32:18,475 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:32:18,475 DEBUG reusing cookie
2025-08-09 20:32:18,475 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:32:18,475 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:32:18,475 DEBUG reusing crumb
2025-08-09 20:32:18,476 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:32:18,476 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:32:18,476 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:32:18,714 DEBUG response code=200
2025-08-09 20:32:18,714 DEBUG     Exiting _make_request()
2025-08-09 20:32:18,715 DEBUG    Exiting get()
2025-08-09 20:32:18,721 DEBUG GNR: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:32:18,723 DEBUG GNR: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:32:18,735 DEBUG GNR: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:32:18,742 DEBUG GNR: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:32:18,742 DEBUG   Exiting history()
2025-08-09 20:32:18,743 DEBUG  Exiting history()
2025-08-09 20:32:18,746 DEBUG Exiting download()
2025-08-09 20:32:18,748 DEBUG Entering download()
2025-08-09 20:32:18,748 DEBUG  Entering history()
2025-08-09 20:32:18,749 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['XLU', 1, 0])
2025-08-09 20:32:18,750 DEBUG   Entering history()
2025-08-09 20:32:18,750 DEBUG XLU: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:32:18,751 DEBUG    Entering get()
2025-08-09 20:32:18,751 DEBUG     Entering _make_request()
2025-08-09 20:32:18,751 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/XLU
2025-08-09 20:32:18,752 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:32:18,752 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:32:18,753 DEBUG cookie_mode = 'basic'
2025-08-09 20:32:18,753 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:32:18,754 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:32:18,754 DEBUG reusing cookie
2025-08-09 20:32:18,754 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:32:18,755 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:32:18,755 DEBUG reusing crumb
2025-08-09 20:32:18,755 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:32:18,756 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:32:18,756 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:32:19,040 DEBUG response code=200
2025-08-09 20:32:19,040 DEBUG     Exiting _make_request()
2025-08-09 20:32:19,041 DEBUG    Exiting get()
2025-08-09 20:32:19,050 DEBUG XLU: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:32:19,052 DEBUG XLU: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:32:19,062 DEBUG XLU: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:32:19,067 DEBUG XLU: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:32:19,068 DEBUG   Exiting history()
2025-08-09 20:32:19,068 DEBUG  Exiting history()
2025-08-09 20:32:19,072 DEBUG Exiting download()
2025-08-09 20:32:19,074 DEBUG Entering download()
2025-08-09 20:32:19,075 DEBUG  Entering history()
2025-08-09 20:32:19,076 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['INDA', 1, 0])
2025-08-09 20:32:19,076 DEBUG   Entering history()
2025-08-09 20:32:19,077 DEBUG INDA: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:32:19,077 DEBUG    Entering get()
2025-08-09 20:32:19,078 DEBUG     Entering _make_request()
2025-08-09 20:32:19,078 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/INDA
2025-08-09 20:32:19,078 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:32:19,078 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:32:19,079 DEBUG cookie_mode = 'basic'
2025-08-09 20:32:19,079 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:32:19,079 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:32:19,079 DEBUG reusing cookie
2025-08-09 20:32:19,080 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:32:19,080 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:32:19,080 DEBUG reusing crumb
2025-08-09 20:32:19,080 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:32:19,081 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:32:19,081 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:32:19,264 DEBUG response code=200
2025-08-09 20:32:19,265 DEBUG     Exiting _make_request()
2025-08-09 20:32:19,265 DEBUG    Exiting get()
2025-08-09 20:32:19,283 DEBUG INDA: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:32:19,290 DEBUG INDA: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:32:19,305 DEBUG INDA: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:32:19,311 DEBUG INDA: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:32:19,312 DEBUG   Exiting history()
2025-08-09 20:32:19,312 DEBUG  Exiting history()
2025-08-09 20:32:19,315 DEBUG Exiting download()
2025-08-09 20:32:19,321 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:32:19,746 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=DGS10&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 12507
2025-08-09 20:32:20,357 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:32:20,613 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=TB3MS&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 836
2025-08-09 20:32:20,660 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:32:20,877 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=BAA10YM&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 843
2025-08-09 20:32:20,904 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:32:21,130 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=TEDRATE&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 4539
2025-08-09 20:32:21,362 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:32:21,662 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=IPMAN&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 1046
2025-08-09 20:32:21,692 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:32:21,970 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=NEWORDER&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 951
2025-08-09 20:32:22,016 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:32:22,327 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=CFNAIMA3&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 838
2025-08-09 20:32:22,403 INFO Completed run: phase=late_cycle date=2021-12-01
2025-08-09 20:33:34,960 DEBUG Entering download()
2025-08-09 20:33:34,961 DEBUG  Entering history()
2025-08-09 20:33:34,963 DEBUG ('CREATE TABLE IF NOT EXISTS "_tz_kv" ("key" VARCHAR(255) NOT NULL PRIMARY KEY, "value" VARCHAR(255)) WITHOUT ROWID', [])
2025-08-09 20:33:34,964 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['^GSPC', 1, 0])
2025-08-09 20:33:35,030 DEBUG   Entering history()
2025-08-09 20:33:35,035 DEBUG ^GSPC: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:33:35,035 DEBUG    Entering get()
2025-08-09 20:33:35,035 DEBUG     Entering _make_request()
2025-08-09 20:33:35,036 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/^GSPC
2025-08-09 20:33:35,036 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:33:35,037 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:33:35,037 DEBUG cookie_mode = 'basic'
2025-08-09 20:33:35,037 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:33:35,038 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:33:35,038 DEBUG         Entering _load_cookie_curlCffi()
2025-08-09 20:33:35,041 DEBUG ('CREATE TABLE IF NOT EXISTS "_cookieschema" ("strategy" VARCHAR(255) NOT NULL PRIMARY KEY, "fetch_date" DATETIME NOT NULL, "cookie_bytes" BLOB NOT NULL) WITHOUT ROWID', [])
2025-08-09 20:33:35,042 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-09 20:33:35,042 DEBUG         Exiting _load_cookie_curlCffi()
2025-08-09 20:33:35,043 DEBUG reusing persistent cookie
2025-08-09 20:33:35,043 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:33:35,043 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:33:35,044 DEBUG         Entering _get_cookie_basic()
2025-08-09 20:33:35,044 DEBUG reusing cookie
2025-08-09 20:33:35,045 DEBUG         Exiting _get_cookie_basic()
2025-08-09 20:33:35,189 DEBUG crumb = 'FULGNX2cwi/'
2025-08-09 20:33:35,189 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:33:35,190 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:33:35,190 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:33:35,406 DEBUG response code=200
2025-08-09 20:33:35,406 DEBUG     Exiting _make_request()
2025-08-09 20:33:35,407 DEBUG    Exiting get()
2025-08-09 20:33:35,416 DEBUG ^GSPC: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:33:35,419 DEBUG ^GSPC: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:33:35,426 DEBUG ^GSPC: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:33:35,433 DEBUG ^GSPC: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:33:35,434 DEBUG   Exiting history()
2025-08-09 20:33:35,434 DEBUG  Exiting history()
2025-08-09 20:33:35,438 DEBUG Exiting download()
2025-08-09 20:33:35,441 DEBUG Entering download()
2025-08-09 20:33:35,442 DEBUG  Entering history()
2025-08-09 20:33:35,443 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['XAUUSD=X', 1, 0])
2025-08-09 20:33:35,443 DEBUG   Entering _fetch_ticker_tz()
2025-08-09 20:33:35,444 DEBUG    Entering get()
2025-08-09 20:33:35,444 DEBUG     Entering _make_request()
2025-08-09 20:33:35,444 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/XAUUSD=X
2025-08-09 20:33:35,445 DEBUG params=frozendict.frozendict({'range': '1d', 'interval': '1d'})
2025-08-09 20:33:35,445 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:33:35,445 DEBUG cookie_mode = 'basic'
2025-08-09 20:33:35,445 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:33:35,446 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:33:35,446 DEBUG reusing cookie
2025-08-09 20:33:35,446 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:33:35,446 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:33:35,447 DEBUG reusing crumb
2025-08-09 20:33:35,447 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:33:35,447 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:33:35,447 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:33:35,591 DEBUG response code=404
2025-08-09 20:33:35,592 DEBUG toggling cookie strategy basic -> csrf
2025-08-09 20:33:35,594 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:33:35,595 DEBUG cookie_mode = 'csrf'
2025-08-09 20:33:35,596 DEBUG       Entering _get_crumb_csrf()
2025-08-09 20:33:35,597 DEBUG        Entering _get_cookie_csrf()
2025-08-09 20:33:35,599 DEBUG         Entering _load_cookie_curlCffi()
2025-08-09 20:33:35,601 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-09 20:33:35,604 DEBUG         Exiting _load_cookie_curlCffi()
2025-08-09 20:33:35,605 DEBUG reusing persistent cookie
2025-08-09 20:33:35,607 DEBUG        Exiting _get_cookie_csrf()
2025-08-09 20:33:35,678 DEBUG crumb = 'FULGNX2cwi/'
2025-08-09 20:33:35,679 DEBUG       Exiting _get_crumb_csrf()
2025-08-09 20:33:35,680 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:33:35,755 DEBUG response code=404
2025-08-09 20:33:35,756 DEBUG     Exiting _make_request()
2025-08-09 20:33:35,756 DEBUG    Exiting get()
2025-08-09 20:33:35,757 DEBUG Got error from yahoo api for ticker XAUUSD=X, Error: {'code': 'Not Found', 'description': 'No data found, symbol may be delisted'}
2025-08-09 20:33:35,758 DEBUG   Exiting _fetch_ticker_tz()
2025-08-09 20:33:35,759 DEBUG get_raw_json(): https://query2.finance.yahoo.com/v10/finance/quoteSummary/XAUUSD=X
2025-08-09 20:33:35,759 DEBUG   Entering get()
2025-08-09 20:33:35,761 DEBUG    Entering _make_request()
2025-08-09 20:33:35,762 DEBUG url=https://query2.finance.yahoo.com/v10/finance/quoteSummary/XAUUSD=X
2025-08-09 20:33:35,763 DEBUG params={'modules': 'financialData,quoteType,defaultKeyStatistics,assetProfile,summaryDetail', 'corsDomain': 'finance.yahoo.com', 'formatted': 'false', 'symbol': 'XAUUSD=X'}
2025-08-09 20:33:35,765 DEBUG     Entering _get_cookie_and_crumb()
2025-08-09 20:33:35,766 DEBUG cookie_mode = 'csrf'
2025-08-09 20:33:35,768 DEBUG      Entering _get_crumb_csrf()
2025-08-09 20:33:35,769 DEBUG reusing crumb
2025-08-09 20:33:35,770 DEBUG      Exiting _get_crumb_csrf()
2025-08-09 20:33:35,772 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-09 20:33:35,929 DEBUG response code=404
2025-08-09 20:33:35,929 DEBUG toggling cookie strategy csrf -> basic
2025-08-09 20:33:35,929 DEBUG     Entering _get_cookie_and_crumb()
2025-08-09 20:33:35,930 DEBUG cookie_mode = 'basic'
2025-08-09 20:33:35,930 DEBUG      Entering _get_cookie_and_crumb_basic()
2025-08-09 20:33:35,931 DEBUG       Entering _get_cookie_basic()
2025-08-09 20:33:35,931 DEBUG        Entering _load_cookie_curlCffi()
2025-08-09 20:33:35,932 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-09 20:33:35,932 DEBUG        Exiting _load_cookie_curlCffi()
2025-08-09 20:33:35,933 DEBUG reusing persistent cookie
2025-08-09 20:33:35,933 DEBUG       Exiting _get_cookie_basic()
2025-08-09 20:33:35,934 DEBUG       Entering _get_crumb_basic()
2025-08-09 20:33:35,934 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:33:35,934 DEBUG reusing cookie
2025-08-09 20:33:35,935 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:33:36,057 DEBUG crumb = 'FULGNX2cwi/'
2025-08-09 20:33:36,058 DEBUG       Exiting _get_crumb_basic()
2025-08-09 20:33:36,058 DEBUG      Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:33:36,059 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-09 20:33:36,214 DEBUG response code=404
2025-08-09 20:33:36,215 DEBUG    Exiting _make_request()
2025-08-09 20:33:36,215 DEBUG   Exiting get()
2025-08-09 20:33:36,216 ERROR HTTP Error 404: 
2025-08-09 20:33:36,216 DEBUG get_raw_json(): https://query1.finance.yahoo.com/v7/finance/quote?
2025-08-09 20:33:36,216 DEBUG   Entering get()
2025-08-09 20:33:36,217 DEBUG    Entering _make_request()
2025-08-09 20:33:36,217 DEBUG url=https://query1.finance.yahoo.com/v7/finance/quote?
2025-08-09 20:33:36,217 DEBUG params={'symbols': 'XAUUSD=X', 'formatted': 'false'}
2025-08-09 20:33:36,218 DEBUG     Entering _get_cookie_and_crumb()
2025-08-09 20:33:36,218 DEBUG cookie_mode = 'basic'
2025-08-09 20:33:36,218 DEBUG      Entering _get_cookie_and_crumb_basic()
2025-08-09 20:33:36,219 DEBUG       Entering _get_cookie_basic()
2025-08-09 20:33:36,219 DEBUG reusing cookie
2025-08-09 20:33:36,219 DEBUG       Exiting _get_cookie_basic()
2025-08-09 20:33:36,219 DEBUG       Entering _get_crumb_basic()
2025-08-09 20:33:36,220 DEBUG reusing crumb
2025-08-09 20:33:36,220 DEBUG       Exiting _get_crumb_basic()
2025-08-09 20:33:36,220 DEBUG      Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:33:36,220 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-09 20:33:36,291 DEBUG response code=200
2025-08-09 20:33:36,292 DEBUG    Exiting _make_request()
2025-08-09 20:33:36,293 DEBUG   Exiting get()
2025-08-09 20:33:36,294 DEBUG   Entering get()
2025-08-09 20:33:36,294 DEBUG    Entering _make_request()
2025-08-09 20:33:36,295 DEBUG url=https://query1.finance.yahoo.com/ws/fundamentals-timeseries/v1/finance/timeseries/XAUUSD=X?symbol=XAUUSD=X&type=trailingPegRatio&period1=1738972800&period2=1754784000
2025-08-09 20:33:36,296 DEBUG params=None
2025-08-09 20:33:36,296 DEBUG     Entering _get_cookie_and_crumb()
2025-08-09 20:33:36,297 DEBUG cookie_mode = 'basic'
2025-08-09 20:33:36,297 DEBUG      Entering _get_cookie_and_crumb_basic()
2025-08-09 20:33:36,298 DEBUG       Entering _get_cookie_basic()
2025-08-09 20:33:36,298 DEBUG reusing cookie
2025-08-09 20:33:36,299 DEBUG       Exiting _get_cookie_basic()
2025-08-09 20:33:36,299 DEBUG       Entering _get_crumb_basic()
2025-08-09 20:33:36,300 DEBUG reusing crumb
2025-08-09 20:33:36,300 DEBUG       Exiting _get_crumb_basic()
2025-08-09 20:33:36,301 DEBUG      Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:33:36,301 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-09 20:33:36,454 DEBUG response code=200
2025-08-09 20:33:36,455 DEBUG    Exiting _make_request()
2025-08-09 20:33:36,457 DEBUG   Exiting get()
2025-08-09 20:33:36,458 DEBUG   Entering history()
2025-08-09 20:33:36,475 ERROR 
1 Failed download:
2025-08-09 20:33:36,477 ERROR ['XAUUSD=X']: YFTzMissingError('possibly delisted; no timezone found')
2025-08-09 20:33:36,478 DEBUG ['XAUUSD=X']: Traceback (most recent call last):
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\multi.py", line 281, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\utils.py", line 92, in wrapper
    result = func(*args, **kwargs)
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\base.py", line 101, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\utils.py", line 92, in wrapper
    result = func(*args, **kwargs)
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\scrapers\history.py", line 128, in history
    raise _exception
yfinance.exceptions.YFTzMissingError: possibly delisted; no timezone found

2025-08-09 20:33:36,487 DEBUG Exiting download()
2025-08-09 20:33:36,488 DEBUG Entering download()
2025-08-09 20:33:36,489 DEBUG  Entering history()
2025-08-09 20:33:36,490 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GC=F', 1, 0])
2025-08-09 20:33:36,492 DEBUG   Entering history()
2025-08-09 20:33:36,494 DEBUG GC=F: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:33:36,495 DEBUG    Entering get()
2025-08-09 20:33:36,495 DEBUG     Entering _make_request()
2025-08-09 20:33:36,496 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/GC=F
2025-08-09 20:33:36,497 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:33:36,497 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:33:36,498 DEBUG cookie_mode = 'basic'
2025-08-09 20:33:36,499 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:33:36,499 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:33:36,500 DEBUG reusing cookie
2025-08-09 20:33:36,500 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:33:36,501 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:33:36,502 DEBUG reusing crumb
2025-08-09 20:33:36,502 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:33:36,503 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:33:36,504 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:33:36,659 DEBUG response code=200
2025-08-09 20:33:36,660 DEBUG     Exiting _make_request()
2025-08-09 20:33:36,661 DEBUG    Exiting get()
2025-08-09 20:33:36,674 DEBUG GC=F: yfinance received OHLC data: 2019-08-12 04:00:00 -> 2025-08-08 04:00:00
2025-08-09 20:33:36,677 DEBUG GC=F: OHLC after cleaning: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:33:36,683 DEBUG GC=F: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:33:36,691 DEBUG GC=F: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:33:36,691 DEBUG   Exiting history()
2025-08-09 20:33:36,692 DEBUG  Exiting history()
2025-08-09 20:33:36,696 DEBUG Exiting download()
2025-08-09 20:33:36,698 DEBUG Entering download()
2025-08-09 20:33:36,698 DEBUG  Entering history()
2025-08-09 20:33:36,699 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['^VIX', 1, 0])
2025-08-09 20:33:36,700 DEBUG   Entering history()
2025-08-09 20:33:36,701 DEBUG ^VIX: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-05:00', 'period2': '2025-08-09 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:33:36,702 DEBUG    Entering get()
2025-08-09 20:33:36,702 DEBUG     Entering _make_request()
2025-08-09 20:33:36,702 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/^VIX
2025-08-09 20:33:36,703 DEBUG params=frozendict.frozendict({'period1': 1565499600, 'period2': 1754715600, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:33:36,703 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:33:36,703 DEBUG cookie_mode = 'basic'
2025-08-09 20:33:36,704 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:33:36,704 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:33:36,704 DEBUG reusing cookie
2025-08-09 20:33:36,705 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:33:36,705 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:33:36,705 DEBUG reusing crumb
2025-08-09 20:33:36,705 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:33:36,706 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:33:36,706 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:33:36,892 DEBUG response code=200
2025-08-09 20:33:36,893 DEBUG     Exiting _make_request()
2025-08-09 20:33:36,894 DEBUG    Exiting get()
2025-08-09 20:33:36,907 DEBUG ^VIX: yfinance received OHLC data: 2019-08-12 07:00:00 -> 2025-08-08 07:00:00
2025-08-09 20:33:36,911 DEBUG ^VIX: OHLC after cleaning: 2019-08-12 02:00:00-05:00 -> 2025-08-08 02:00:00-05:00
2025-08-09 20:33:36,916 DEBUG ^VIX: OHLC after combining events: 2019-08-12 00:00:00-05:00 -> 2025-08-08 00:00:00-05:00
2025-08-09 20:33:36,923 DEBUG ^VIX: yfinance returning OHLC: 2019-08-12 00:00:00-05:00 -> 2025-08-08 00:00:00-05:00
2025-08-09 20:33:36,924 DEBUG   Exiting history()
2025-08-09 20:33:36,924 DEBUG  Exiting history()
2025-08-09 20:33:36,928 DEBUG Exiting download()
2025-08-09 20:33:36,931 DEBUG Entering download()
2025-08-09 20:33:36,931 DEBUG  Entering history()
2025-08-09 20:33:36,932 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GNR', 1, 0])
2025-08-09 20:33:36,933 DEBUG   Entering history()
2025-08-09 20:33:36,933 DEBUG GNR: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:33:36,934 DEBUG    Entering get()
2025-08-09 20:33:36,934 DEBUG     Entering _make_request()
2025-08-09 20:33:36,934 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/GNR
2025-08-09 20:33:36,934 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:33:36,935 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:33:36,935 DEBUG cookie_mode = 'basic'
2025-08-09 20:33:36,935 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:33:36,936 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:33:36,936 DEBUG reusing cookie
2025-08-09 20:33:36,936 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:33:36,936 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:33:36,937 DEBUG reusing crumb
2025-08-09 20:33:36,937 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:33:36,937 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:33:36,937 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:33:37,128 DEBUG response code=200
2025-08-09 20:33:37,128 DEBUG     Exiting _make_request()
2025-08-09 20:33:37,129 DEBUG    Exiting get()
2025-08-09 20:33:37,135 DEBUG GNR: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:33:37,137 DEBUG GNR: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:33:37,148 DEBUG GNR: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:33:37,153 DEBUG GNR: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:33:37,153 DEBUG   Exiting history()
2025-08-09 20:33:37,154 DEBUG  Exiting history()
2025-08-09 20:33:37,158 DEBUG Exiting download()
2025-08-09 20:33:37,161 DEBUG Entering download()
2025-08-09 20:33:37,162 DEBUG  Entering history()
2025-08-09 20:33:37,162 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['XLU', 1, 0])
2025-08-09 20:33:37,163 DEBUG   Entering history()
2025-08-09 20:33:37,163 DEBUG XLU: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:33:37,164 DEBUG    Entering get()
2025-08-09 20:33:37,164 DEBUG     Entering _make_request()
2025-08-09 20:33:37,164 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/XLU
2025-08-09 20:33:37,165 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:33:37,165 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:33:37,165 DEBUG cookie_mode = 'basic'
2025-08-09 20:33:37,166 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:33:37,166 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:33:37,166 DEBUG reusing cookie
2025-08-09 20:33:37,166 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:33:37,167 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:33:37,167 DEBUG reusing crumb
2025-08-09 20:33:37,167 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:33:37,167 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:33:37,168 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:33:37,393 DEBUG response code=200
2025-08-09 20:33:37,394 DEBUG     Exiting _make_request()
2025-08-09 20:33:37,396 DEBUG    Exiting get()
2025-08-09 20:33:37,417 DEBUG XLU: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:33:37,420 DEBUG XLU: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:33:37,433 DEBUG XLU: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:33:37,439 DEBUG XLU: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:33:37,439 DEBUG   Exiting history()
2025-08-09 20:33:37,440 DEBUG  Exiting history()
2025-08-09 20:33:37,444 DEBUG Exiting download()
2025-08-09 20:33:37,446 DEBUG Entering download()
2025-08-09 20:33:37,447 DEBUG  Entering history()
2025-08-09 20:33:37,447 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['INDA', 1, 0])
2025-08-09 20:33:37,448 DEBUG   Entering history()
2025-08-09 20:33:37,449 DEBUG INDA: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:33:37,449 DEBUG    Entering get()
2025-08-09 20:33:37,449 DEBUG     Entering _make_request()
2025-08-09 20:33:37,450 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/INDA
2025-08-09 20:33:37,450 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:33:37,450 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:33:37,451 DEBUG cookie_mode = 'basic'
2025-08-09 20:33:37,451 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:33:37,451 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:33:37,451 DEBUG reusing cookie
2025-08-09 20:33:37,452 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:33:37,452 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:33:37,452 DEBUG reusing crumb
2025-08-09 20:33:37,452 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:33:37,452 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:33:37,453 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:33:37,677 DEBUG response code=200
2025-08-09 20:33:37,678 DEBUG     Exiting _make_request()
2025-08-09 20:33:37,678 DEBUG    Exiting get()
2025-08-09 20:33:37,684 DEBUG INDA: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:33:37,686 DEBUG INDA: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:33:37,697 DEBUG INDA: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:33:37,702 DEBUG INDA: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:33:37,703 DEBUG   Exiting history()
2025-08-09 20:33:37,703 DEBUG  Exiting history()
2025-08-09 20:33:37,706 DEBUG Exiting download()
2025-08-09 20:33:37,712 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:33:38,139 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=DGS10&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 12507
2025-08-09 20:33:38,681 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:33:38,929 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=TB3MS&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 836
2025-08-09 20:33:38,986 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:33:39,226 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=BAA10YM&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 843
2025-08-09 20:33:39,290 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:33:39,509 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=TEDRATE&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 4539
2025-08-09 20:33:39,711 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:33:39,965 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=IPMAN&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 1046
2025-08-09 20:33:40,006 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:33:40,231 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=NEWORDER&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 951
2025-08-09 20:33:40,264 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:33:40,488 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=CFNAIMA3&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 838
2025-08-09 20:33:40,561 DEBUG Starting new HTTPS connection (1): api.telegram.org:443
2025-08-09 20:33:43,458 DEBUG https://api.telegram.org:443 "POST /bot8164484731:AAGkwVn4U8sX4TquwepKKvUC8r0Aep7RRUc/sendMessage HTTP/1.1" 400 137
2025-08-09 20:33:43,460 WARNING Telegram send failed: 400 {"ok":false,"error_code":400,"description":"Bad Request: can't parse entities: Can't find end of the entity starting at byte offset 869"}
2025-08-09 20:33:43,466 INFO Completed run: phase=late_cycle date=2021-12-01
2025-08-09 20:37:00,564 DEBUG Entering download()
2025-08-09 20:37:00,565 DEBUG  Entering history()
2025-08-09 20:37:00,574 DEBUG ('CREATE TABLE IF NOT EXISTS "_tz_kv" ("key" VARCHAR(255) NOT NULL PRIMARY KEY, "value" VARCHAR(255)) WITHOUT ROWID', [])
2025-08-09 20:37:00,575 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['^GSPC', 1, 0])
2025-08-09 20:37:00,639 DEBUG   Entering history()
2025-08-09 20:37:00,656 DEBUG ^GSPC: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:37:00,660 DEBUG    Entering get()
2025-08-09 20:37:00,660 DEBUG     Entering _make_request()
2025-08-09 20:37:00,660 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/^GSPC
2025-08-09 20:37:00,660 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:37:00,661 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:37:00,661 DEBUG cookie_mode = 'basic'
2025-08-09 20:37:00,661 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:37:00,661 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:37:00,662 DEBUG         Entering _load_cookie_curlCffi()
2025-08-09 20:37:00,665 DEBUG ('CREATE TABLE IF NOT EXISTS "_cookieschema" ("strategy" VARCHAR(255) NOT NULL PRIMARY KEY, "fetch_date" DATETIME NOT NULL, "cookie_bytes" BLOB NOT NULL) WITHOUT ROWID', [])
2025-08-09 20:37:00,666 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-09 20:37:00,667 DEBUG         Exiting _load_cookie_curlCffi()
2025-08-09 20:37:00,667 DEBUG reusing persistent cookie
2025-08-09 20:37:00,667 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:37:00,668 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:37:00,668 DEBUG         Entering _get_cookie_basic()
2025-08-09 20:37:00,668 DEBUG reusing cookie
2025-08-09 20:37:00,668 DEBUG         Exiting _get_cookie_basic()
2025-08-09 20:37:00,825 DEBUG crumb = 'FULGNX2cwi/'
2025-08-09 20:37:00,826 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:37:00,826 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:37:00,827 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:37:01,013 DEBUG response code=200
2025-08-09 20:37:01,015 DEBUG     Exiting _make_request()
2025-08-09 20:37:01,016 DEBUG    Exiting get()
2025-08-09 20:37:01,072 DEBUG ^GSPC: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:37:01,091 DEBUG ^GSPC: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:37:01,131 DEBUG ^GSPC: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:37:01,165 DEBUG ^GSPC: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:37:01,166 DEBUG   Exiting history()
2025-08-09 20:37:01,166 DEBUG  Exiting history()
2025-08-09 20:37:01,187 DEBUG Exiting download()
2025-08-09 20:37:01,192 DEBUG Entering download()
2025-08-09 20:37:01,193 DEBUG  Entering history()
2025-08-09 20:37:01,194 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['XAUUSD=X', 1, 0])
2025-08-09 20:37:01,196 DEBUG   Entering _fetch_ticker_tz()
2025-08-09 20:37:01,196 DEBUG    Entering get()
2025-08-09 20:37:01,197 DEBUG     Entering _make_request()
2025-08-09 20:37:01,198 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/XAUUSD=X
2025-08-09 20:37:01,199 DEBUG params=frozendict.frozendict({'range': '1d', 'interval': '1d'})
2025-08-09 20:37:01,200 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:37:01,200 DEBUG cookie_mode = 'basic'
2025-08-09 20:37:01,201 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:37:01,202 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:37:01,203 DEBUG reusing cookie
2025-08-09 20:37:01,204 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:37:01,205 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:37:01,205 DEBUG reusing crumb
2025-08-09 20:37:01,206 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:37:01,207 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:37:01,207 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:37:01,325 DEBUG response code=404
2025-08-09 20:37:01,326 DEBUG toggling cookie strategy basic -> csrf
2025-08-09 20:37:01,326 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:37:01,326 DEBUG cookie_mode = 'csrf'
2025-08-09 20:37:01,327 DEBUG       Entering _get_crumb_csrf()
2025-08-09 20:37:01,327 DEBUG        Entering _get_cookie_csrf()
2025-08-09 20:37:01,328 DEBUG         Entering _load_cookie_curlCffi()
2025-08-09 20:37:01,328 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-09 20:37:01,329 DEBUG         Exiting _load_cookie_curlCffi()
2025-08-09 20:37:01,329 DEBUG reusing persistent cookie
2025-08-09 20:37:01,329 DEBUG        Exiting _get_cookie_csrf()
2025-08-09 20:37:01,394 DEBUG crumb = 'FULGNX2cwi/'
2025-08-09 20:37:01,395 DEBUG       Exiting _get_crumb_csrf()
2025-08-09 20:37:01,395 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:37:01,465 DEBUG response code=404
2025-08-09 20:37:01,465 DEBUG     Exiting _make_request()
2025-08-09 20:37:01,465 DEBUG    Exiting get()
2025-08-09 20:37:01,466 DEBUG Got error from yahoo api for ticker XAUUSD=X, Error: {'code': 'Not Found', 'description': 'No data found, symbol may be delisted'}
2025-08-09 20:37:01,466 DEBUG   Exiting _fetch_ticker_tz()
2025-08-09 20:37:01,466 DEBUG get_raw_json(): https://query2.finance.yahoo.com/v10/finance/quoteSummary/XAUUSD=X
2025-08-09 20:37:01,467 DEBUG   Entering get()
2025-08-09 20:37:01,467 DEBUG    Entering _make_request()
2025-08-09 20:37:01,467 DEBUG url=https://query2.finance.yahoo.com/v10/finance/quoteSummary/XAUUSD=X
2025-08-09 20:37:01,467 DEBUG params={'modules': 'financialData,quoteType,defaultKeyStatistics,assetProfile,summaryDetail', 'corsDomain': 'finance.yahoo.com', 'formatted': 'false', 'symbol': 'XAUUSD=X'}
2025-08-09 20:37:01,468 DEBUG     Entering _get_cookie_and_crumb()
2025-08-09 20:37:01,468 DEBUG cookie_mode = 'csrf'
2025-08-09 20:37:01,468 DEBUG      Entering _get_crumb_csrf()
2025-08-09 20:37:01,468 DEBUG reusing crumb
2025-08-09 20:37:01,468 DEBUG      Exiting _get_crumb_csrf()
2025-08-09 20:37:01,469 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-09 20:37:01,621 DEBUG response code=404
2025-08-09 20:37:01,622 DEBUG toggling cookie strategy csrf -> basic
2025-08-09 20:37:01,622 DEBUG     Entering _get_cookie_and_crumb()
2025-08-09 20:37:01,623 DEBUG cookie_mode = 'basic'
2025-08-09 20:37:01,623 DEBUG      Entering _get_cookie_and_crumb_basic()
2025-08-09 20:37:01,623 DEBUG       Entering _get_cookie_basic()
2025-08-09 20:37:01,624 DEBUG        Entering _load_cookie_curlCffi()
2025-08-09 20:37:01,624 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-09 20:37:01,625 DEBUG        Exiting _load_cookie_curlCffi()
2025-08-09 20:37:01,625 DEBUG reusing persistent cookie
2025-08-09 20:37:01,626 DEBUG       Exiting _get_cookie_basic()
2025-08-09 20:37:01,626 DEBUG       Entering _get_crumb_basic()
2025-08-09 20:37:01,626 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:37:01,626 DEBUG reusing cookie
2025-08-09 20:37:01,627 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:37:01,824 DEBUG crumb = 'FULGNX2cwi/'
2025-08-09 20:37:01,825 DEBUG       Exiting _get_crumb_basic()
2025-08-09 20:37:01,826 DEBUG      Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:37:01,826 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-09 20:37:01,980 DEBUG response code=404
2025-08-09 20:37:01,981 DEBUG    Exiting _make_request()
2025-08-09 20:37:01,982 DEBUG   Exiting get()
2025-08-09 20:37:01,984 ERROR HTTP Error 404: 
2025-08-09 20:37:01,985 DEBUG get_raw_json(): https://query1.finance.yahoo.com/v7/finance/quote?
2025-08-09 20:37:01,986 DEBUG   Entering get()
2025-08-09 20:37:01,987 DEBUG    Entering _make_request()
2025-08-09 20:37:01,989 DEBUG url=https://query1.finance.yahoo.com/v7/finance/quote?
2025-08-09 20:37:01,990 DEBUG params={'symbols': 'XAUUSD=X', 'formatted': 'false'}
2025-08-09 20:37:01,991 DEBUG     Entering _get_cookie_and_crumb()
2025-08-09 20:37:01,993 DEBUG cookie_mode = 'basic'
2025-08-09 20:37:01,994 DEBUG      Entering _get_cookie_and_crumb_basic()
2025-08-09 20:37:01,996 DEBUG       Entering _get_cookie_basic()
2025-08-09 20:37:01,998 DEBUG reusing cookie
2025-08-09 20:37:01,999 DEBUG       Exiting _get_cookie_basic()
2025-08-09 20:37:02,017 DEBUG       Entering _get_crumb_basic()
2025-08-09 20:37:02,018 DEBUG reusing crumb
2025-08-09 20:37:02,019 DEBUG       Exiting _get_crumb_basic()
2025-08-09 20:37:02,020 DEBUG      Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:37:02,024 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-09 20:37:02,095 DEBUG response code=200
2025-08-09 20:37:02,095 DEBUG    Exiting _make_request()
2025-08-09 20:37:02,096 DEBUG   Exiting get()
2025-08-09 20:37:02,096 DEBUG   Entering get()
2025-08-09 20:37:02,097 DEBUG    Entering _make_request()
2025-08-09 20:37:02,097 DEBUG url=https://query1.finance.yahoo.com/ws/fundamentals-timeseries/v1/finance/timeseries/XAUUSD=X?symbol=XAUUSD=X&type=trailingPegRatio&period1=1738972800&period2=1754784000
2025-08-09 20:37:02,097 DEBUG params=None
2025-08-09 20:37:02,098 DEBUG     Entering _get_cookie_and_crumb()
2025-08-09 20:37:02,098 DEBUG cookie_mode = 'basic'
2025-08-09 20:37:02,098 DEBUG      Entering _get_cookie_and_crumb_basic()
2025-08-09 20:37:02,098 DEBUG       Entering _get_cookie_basic()
2025-08-09 20:37:02,099 DEBUG reusing cookie
2025-08-09 20:37:02,099 DEBUG       Exiting _get_cookie_basic()
2025-08-09 20:37:02,099 DEBUG       Entering _get_crumb_basic()
2025-08-09 20:37:02,100 DEBUG reusing crumb
2025-08-09 20:37:02,100 DEBUG       Exiting _get_crumb_basic()
2025-08-09 20:37:02,100 DEBUG      Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:37:02,100 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-09 20:37:02,434 DEBUG response code=200
2025-08-09 20:37:02,435 DEBUG    Exiting _make_request()
2025-08-09 20:37:02,435 DEBUG   Exiting get()
2025-08-09 20:37:02,436 DEBUG   Entering history()
2025-08-09 20:37:02,450 ERROR 
1 Failed download:
2025-08-09 20:37:02,451 ERROR ['XAUUSD=X']: YFTzMissingError('possibly delisted; no timezone found')
2025-08-09 20:37:02,452 DEBUG ['XAUUSD=X']: Traceback (most recent call last):
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\multi.py", line 281, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\utils.py", line 92, in wrapper
    result = func(*args, **kwargs)
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\base.py", line 101, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\utils.py", line 92, in wrapper
    result = func(*args, **kwargs)
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\scrapers\history.py", line 128, in history
    raise _exception
yfinance.exceptions.YFTzMissingError: possibly delisted; no timezone found

2025-08-09 20:37:02,461 DEBUG Exiting download()
2025-08-09 20:37:02,462 DEBUG Entering download()
2025-08-09 20:37:02,463 DEBUG  Entering history()
2025-08-09 20:37:02,463 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GC=F', 1, 0])
2025-08-09 20:37:02,464 DEBUG   Entering history()
2025-08-09 20:37:02,465 DEBUG GC=F: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:37:02,466 DEBUG    Entering get()
2025-08-09 20:37:02,467 DEBUG     Entering _make_request()
2025-08-09 20:37:02,467 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/GC=F
2025-08-09 20:37:02,468 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:37:02,468 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:37:02,469 DEBUG cookie_mode = 'basic'
2025-08-09 20:37:02,469 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:37:02,470 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:37:02,470 DEBUG reusing cookie
2025-08-09 20:37:02,470 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:37:02,471 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:37:02,471 DEBUG reusing crumb
2025-08-09 20:37:02,471 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:37:02,472 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:37:02,472 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:37:02,645 DEBUG response code=200
2025-08-09 20:37:02,645 DEBUG     Exiting _make_request()
2025-08-09 20:37:02,646 DEBUG    Exiting get()
2025-08-09 20:37:02,662 DEBUG GC=F: yfinance received OHLC data: 2019-08-12 04:00:00 -> 2025-08-08 04:00:00
2025-08-09 20:37:02,667 DEBUG GC=F: OHLC after cleaning: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:37:02,676 DEBUG GC=F: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:37:02,685 DEBUG GC=F: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:37:02,686 DEBUG   Exiting history()
2025-08-09 20:37:02,686 DEBUG  Exiting history()
2025-08-09 20:37:02,690 DEBUG Exiting download()
2025-08-09 20:37:02,692 DEBUG Entering download()
2025-08-09 20:37:02,692 DEBUG  Entering history()
2025-08-09 20:37:02,693 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['^VIX', 1, 0])
2025-08-09 20:37:02,695 DEBUG   Entering history()
2025-08-09 20:37:02,696 DEBUG ^VIX: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-05:00', 'period2': '2025-08-09 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:37:02,696 DEBUG    Entering get()
2025-08-09 20:37:02,697 DEBUG     Entering _make_request()
2025-08-09 20:37:02,697 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/^VIX
2025-08-09 20:37:02,697 DEBUG params=frozendict.frozendict({'period1': 1565499600, 'period2': 1754715600, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:37:02,698 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:37:02,698 DEBUG cookie_mode = 'basic'
2025-08-09 20:37:02,698 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:37:02,698 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:37:02,699 DEBUG reusing cookie
2025-08-09 20:37:02,699 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:37:02,700 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:37:02,700 DEBUG reusing crumb
2025-08-09 20:37:02,700 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:37:02,701 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:37:02,701 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:37:02,905 DEBUG response code=200
2025-08-09 20:37:02,906 DEBUG     Exiting _make_request()
2025-08-09 20:37:02,906 DEBUG    Exiting get()
2025-08-09 20:37:02,922 DEBUG ^VIX: yfinance received OHLC data: 2019-08-12 07:00:00 -> 2025-08-08 07:00:00
2025-08-09 20:37:02,926 DEBUG ^VIX: OHLC after cleaning: 2019-08-12 02:00:00-05:00 -> 2025-08-08 02:00:00-05:00
2025-08-09 20:37:02,937 DEBUG ^VIX: OHLC after combining events: 2019-08-12 00:00:00-05:00 -> 2025-08-08 00:00:00-05:00
2025-08-09 20:37:02,947 DEBUG ^VIX: yfinance returning OHLC: 2019-08-12 00:00:00-05:00 -> 2025-08-08 00:00:00-05:00
2025-08-09 20:37:02,948 DEBUG   Exiting history()
2025-08-09 20:37:02,948 DEBUG  Exiting history()
2025-08-09 20:37:02,953 DEBUG Exiting download()
2025-08-09 20:37:02,956 DEBUG Entering download()
2025-08-09 20:37:02,956 DEBUG  Entering history()
2025-08-09 20:37:02,957 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GNR', 1, 0])
2025-08-09 20:37:02,957 DEBUG   Entering history()
2025-08-09 20:37:02,958 DEBUG GNR: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:37:02,958 DEBUG    Entering get()
2025-08-09 20:37:02,959 DEBUG     Entering _make_request()
2025-08-09 20:37:02,959 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/GNR
2025-08-09 20:37:02,959 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:37:02,960 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:37:02,960 DEBUG cookie_mode = 'basic'
2025-08-09 20:37:02,960 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:37:02,961 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:37:02,961 DEBUG reusing cookie
2025-08-09 20:37:02,961 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:37:02,962 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:37:02,962 DEBUG reusing crumb
2025-08-09 20:37:02,962 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:37:02,962 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:37:02,963 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:37:03,149 DEBUG response code=200
2025-08-09 20:37:03,149 DEBUG     Exiting _make_request()
2025-08-09 20:37:03,150 DEBUG    Exiting get()
2025-08-09 20:37:03,167 DEBUG GNR: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:37:03,171 DEBUG GNR: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:37:03,195 DEBUG GNR: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:37:03,204 DEBUG GNR: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:37:03,204 DEBUG   Exiting history()
2025-08-09 20:37:03,205 DEBUG  Exiting history()
2025-08-09 20:37:03,209 DEBUG Exiting download()
2025-08-09 20:37:03,211 DEBUG Entering download()
2025-08-09 20:37:03,212 DEBUG  Entering history()
2025-08-09 20:37:03,212 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['XLU', 1, 0])
2025-08-09 20:37:03,213 DEBUG   Entering history()
2025-08-09 20:37:03,214 DEBUG XLU: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:37:03,214 DEBUG    Entering get()
2025-08-09 20:37:03,214 DEBUG     Entering _make_request()
2025-08-09 20:37:03,215 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/XLU
2025-08-09 20:37:03,215 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:37:03,215 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:37:03,215 DEBUG cookie_mode = 'basic'
2025-08-09 20:37:03,216 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:37:03,216 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:37:03,216 DEBUG reusing cookie
2025-08-09 20:37:03,217 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:37:03,217 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:37:03,218 DEBUG reusing crumb
2025-08-09 20:37:03,218 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:37:03,218 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:37:03,218 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:37:03,423 DEBUG response code=200
2025-08-09 20:37:03,424 DEBUG     Exiting _make_request()
2025-08-09 20:37:03,424 DEBUG    Exiting get()
2025-08-09 20:37:03,433 DEBUG XLU: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:37:03,435 DEBUG XLU: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:37:03,447 DEBUG XLU: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:37:03,454 DEBUG XLU: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:37:03,454 DEBUG   Exiting history()
2025-08-09 20:37:03,454 DEBUG  Exiting history()
2025-08-09 20:37:03,458 DEBUG Exiting download()
2025-08-09 20:37:03,460 DEBUG Entering download()
2025-08-09 20:37:03,460 DEBUG  Entering history()
2025-08-09 20:37:03,461 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['INDA', 1, 0])
2025-08-09 20:37:03,461 DEBUG   Entering history()
2025-08-09 20:37:03,462 DEBUG INDA: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:37:03,462 DEBUG    Entering get()
2025-08-09 20:37:03,462 DEBUG     Entering _make_request()
2025-08-09 20:37:03,463 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/INDA
2025-08-09 20:37:03,463 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:37:03,463 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:37:03,464 DEBUG cookie_mode = 'basic'
2025-08-09 20:37:03,464 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:37:03,464 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:37:03,464 DEBUG reusing cookie
2025-08-09 20:37:03,464 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:37:03,465 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:37:03,465 DEBUG reusing crumb
2025-08-09 20:37:03,465 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:37:03,465 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:37:03,466 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:37:03,699 DEBUG response code=200
2025-08-09 20:37:03,700 DEBUG     Exiting _make_request()
2025-08-09 20:37:03,701 DEBUG    Exiting get()
2025-08-09 20:37:03,727 DEBUG INDA: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:37:03,731 DEBUG INDA: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:37:03,757 DEBUG INDA: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:37:03,764 DEBUG INDA: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:37:03,764 DEBUG   Exiting history()
2025-08-09 20:37:03,765 DEBUG  Exiting history()
2025-08-09 20:37:03,769 DEBUG Exiting download()
2025-08-09 20:37:03,775 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:37:04,246 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=DGS10&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 12507
2025-08-09 20:37:04,919 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:37:05,159 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=TB3MS&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 836
2025-08-09 20:37:05,217 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:37:05,436 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=BAA10YM&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 843
2025-08-09 20:37:05,477 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:37:05,692 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=TEDRATE&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 4539
2025-08-09 20:37:05,938 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:37:06,221 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=IPMAN&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 1046
2025-08-09 20:37:06,283 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:37:06,610 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=NEWORDER&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 951
2025-08-09 20:37:06,656 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:37:06,868 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=CFNAIMA3&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 838
2025-08-09 20:37:06,944 DEBUG Starting new HTTPS connection (1): api.telegram.org:443
2025-08-09 20:37:07,132 DEBUG https://api.telegram.org:443 "POST /bot8164484731:AAGkwVn4U8sX4TquwepKKvUC8r0Aep7RRUc/sendMessage HTTP/1.1" 400 73
2025-08-09 20:37:07,135 WARNING Telegram send failed: 400 {"ok":false,"error_code":400,"description":"Bad Request: chat not found"}
2025-08-09 20:37:07,144 INFO Completed run: phase=late_cycle date=2021-12-01
2025-08-09 20:40:41,067 DEBUG Entering download()
2025-08-09 20:40:41,068 DEBUG  Entering history()
2025-08-09 20:40:41,096 DEBUG ('CREATE TABLE IF NOT EXISTS "_tz_kv" ("key" VARCHAR(255) NOT NULL PRIMARY KEY, "value" VARCHAR(255)) WITHOUT ROWID', [])
2025-08-09 20:40:41,102 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['^GSPC', 1, 0])
2025-08-09 20:40:41,264 DEBUG   Entering history()
2025-08-09 20:40:41,279 DEBUG ^GSPC: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:40:41,282 DEBUG    Entering get()
2025-08-09 20:40:41,283 DEBUG     Entering _make_request()
2025-08-09 20:40:41,283 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/^GSPC
2025-08-09 20:40:41,284 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:40:41,284 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:40:41,284 DEBUG cookie_mode = 'basic'
2025-08-09 20:40:41,285 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:40:41,286 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:40:41,286 DEBUG         Entering _load_cookie_curlCffi()
2025-08-09 20:40:41,291 DEBUG ('CREATE TABLE IF NOT EXISTS "_cookieschema" ("strategy" VARCHAR(255) NOT NULL PRIMARY KEY, "fetch_date" DATETIME NOT NULL, "cookie_bytes" BLOB NOT NULL) WITHOUT ROWID', [])
2025-08-09 20:40:41,295 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-09 20:40:41,296 DEBUG         Exiting _load_cookie_curlCffi()
2025-08-09 20:40:41,297 DEBUG reusing persistent cookie
2025-08-09 20:40:41,297 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:40:41,298 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:40:41,298 DEBUG         Entering _get_cookie_basic()
2025-08-09 20:40:41,299 DEBUG reusing cookie
2025-08-09 20:40:41,299 DEBUG         Exiting _get_cookie_basic()
2025-08-09 20:40:41,495 DEBUG crumb = 'FULGNX2cwi/'
2025-08-09 20:40:41,496 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:40:41,496 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:40:41,497 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:40:41,682 DEBUG response code=200
2025-08-09 20:40:41,683 DEBUG     Exiting _make_request()
2025-08-09 20:40:41,683 DEBUG    Exiting get()
2025-08-09 20:40:41,707 DEBUG ^GSPC: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:40:41,726 DEBUG ^GSPC: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:40:41,761 DEBUG ^GSPC: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:40:41,804 DEBUG ^GSPC: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:40:41,805 DEBUG   Exiting history()
2025-08-09 20:40:41,806 DEBUG  Exiting history()
2025-08-09 20:40:41,831 DEBUG Exiting download()
2025-08-09 20:40:41,837 DEBUG Entering download()
2025-08-09 20:40:41,838 DEBUG  Entering history()
2025-08-09 20:40:41,839 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['XAUUSD=X', 1, 0])
2025-08-09 20:40:41,841 DEBUG   Entering _fetch_ticker_tz()
2025-08-09 20:40:41,842 DEBUG    Entering get()
2025-08-09 20:40:41,855 DEBUG     Entering _make_request()
2025-08-09 20:40:41,856 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/XAUUSD=X
2025-08-09 20:40:41,856 DEBUG params=frozendict.frozendict({'range': '1d', 'interval': '1d'})
2025-08-09 20:40:41,857 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:40:41,861 DEBUG cookie_mode = 'basic'
2025-08-09 20:40:41,862 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:40:41,865 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:40:41,866 DEBUG reusing cookie
2025-08-09 20:40:41,867 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:40:41,868 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:40:41,868 DEBUG reusing crumb
2025-08-09 20:40:41,869 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:40:41,869 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:40:41,870 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:40:42,001 DEBUG response code=404
2025-08-09 20:40:42,001 DEBUG toggling cookie strategy basic -> csrf
2025-08-09 20:40:42,002 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:40:42,002 DEBUG cookie_mode = 'csrf'
2025-08-09 20:40:42,002 DEBUG       Entering _get_crumb_csrf()
2025-08-09 20:40:42,003 DEBUG        Entering _get_cookie_csrf()
2025-08-09 20:40:42,003 DEBUG         Entering _load_cookie_curlCffi()
2025-08-09 20:40:42,004 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-09 20:40:42,005 DEBUG         Exiting _load_cookie_curlCffi()
2025-08-09 20:40:42,005 DEBUG reusing persistent cookie
2025-08-09 20:40:42,005 DEBUG        Exiting _get_cookie_csrf()
2025-08-09 20:40:42,086 DEBUG crumb = 'FULGNX2cwi/'
2025-08-09 20:40:42,086 DEBUG       Exiting _get_crumb_csrf()
2025-08-09 20:40:42,087 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:40:42,154 DEBUG response code=404
2025-08-09 20:40:42,154 DEBUG     Exiting _make_request()
2025-08-09 20:40:42,155 DEBUG    Exiting get()
2025-08-09 20:40:42,155 DEBUG Got error from yahoo api for ticker XAUUSD=X, Error: {'code': 'Not Found', 'description': 'No data found, symbol may be delisted'}
2025-08-09 20:40:42,155 DEBUG   Exiting _fetch_ticker_tz()
2025-08-09 20:40:42,156 DEBUG get_raw_json(): https://query2.finance.yahoo.com/v10/finance/quoteSummary/XAUUSD=X
2025-08-09 20:40:42,156 DEBUG   Entering get()
2025-08-09 20:40:42,157 DEBUG    Entering _make_request()
2025-08-09 20:40:42,158 DEBUG url=https://query2.finance.yahoo.com/v10/finance/quoteSummary/XAUUSD=X
2025-08-09 20:40:42,160 DEBUG params={'modules': 'financialData,quoteType,defaultKeyStatistics,assetProfile,summaryDetail', 'corsDomain': 'finance.yahoo.com', 'formatted': 'false', 'symbol': 'XAUUSD=X'}
2025-08-09 20:40:42,163 DEBUG     Entering _get_cookie_and_crumb()
2025-08-09 20:40:42,163 DEBUG cookie_mode = 'csrf'
2025-08-09 20:40:42,164 DEBUG      Entering _get_crumb_csrf()
2025-08-09 20:40:42,164 DEBUG reusing crumb
2025-08-09 20:40:42,165 DEBUG      Exiting _get_crumb_csrf()
2025-08-09 20:40:42,165 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-09 20:40:42,319 DEBUG response code=404
2025-08-09 20:40:42,320 DEBUG toggling cookie strategy csrf -> basic
2025-08-09 20:40:42,321 DEBUG     Entering _get_cookie_and_crumb()
2025-08-09 20:40:42,321 DEBUG cookie_mode = 'basic'
2025-08-09 20:40:42,322 DEBUG      Entering _get_cookie_and_crumb_basic()
2025-08-09 20:40:42,322 DEBUG       Entering _get_cookie_basic()
2025-08-09 20:40:42,323 DEBUG        Entering _load_cookie_curlCffi()
2025-08-09 20:40:42,324 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-09 20:40:42,326 DEBUG        Exiting _load_cookie_curlCffi()
2025-08-09 20:40:42,329 DEBUG reusing persistent cookie
2025-08-09 20:40:42,330 DEBUG       Exiting _get_cookie_basic()
2025-08-09 20:40:42,331 DEBUG       Entering _get_crumb_basic()
2025-08-09 20:40:42,332 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:40:42,332 DEBUG reusing cookie
2025-08-09 20:40:42,333 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:40:42,471 DEBUG crumb = 'FULGNX2cwi/'
2025-08-09 20:40:42,472 DEBUG       Exiting _get_crumb_basic()
2025-08-09 20:40:42,473 DEBUG      Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:40:42,473 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-09 20:40:42,627 DEBUG response code=404
2025-08-09 20:40:42,628 DEBUG    Exiting _make_request()
2025-08-09 20:40:42,629 DEBUG   Exiting get()
2025-08-09 20:40:42,629 ERROR HTTP Error 404: 
2025-08-09 20:40:42,630 DEBUG get_raw_json(): https://query1.finance.yahoo.com/v7/finance/quote?
2025-08-09 20:40:42,631 DEBUG   Entering get()
2025-08-09 20:40:42,631 DEBUG    Entering _make_request()
2025-08-09 20:40:42,632 DEBUG url=https://query1.finance.yahoo.com/v7/finance/quote?
2025-08-09 20:40:42,632 DEBUG params={'symbols': 'XAUUSD=X', 'formatted': 'false'}
2025-08-09 20:40:42,633 DEBUG     Entering _get_cookie_and_crumb()
2025-08-09 20:40:42,633 DEBUG cookie_mode = 'basic'
2025-08-09 20:40:42,633 DEBUG      Entering _get_cookie_and_crumb_basic()
2025-08-09 20:40:42,634 DEBUG       Entering _get_cookie_basic()
2025-08-09 20:40:42,634 DEBUG reusing cookie
2025-08-09 20:40:42,635 DEBUG       Exiting _get_cookie_basic()
2025-08-09 20:40:42,635 DEBUG       Entering _get_crumb_basic()
2025-08-09 20:40:42,636 DEBUG reusing crumb
2025-08-09 20:40:42,636 DEBUG       Exiting _get_crumb_basic()
2025-08-09 20:40:42,637 DEBUG      Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:40:42,637 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-09 20:40:42,752 DEBUG response code=200
2025-08-09 20:40:42,753 DEBUG    Exiting _make_request()
2025-08-09 20:40:42,753 DEBUG   Exiting get()
2025-08-09 20:40:42,755 DEBUG   Entering get()
2025-08-09 20:40:42,755 DEBUG    Entering _make_request()
2025-08-09 20:40:42,755 DEBUG url=https://query1.finance.yahoo.com/ws/fundamentals-timeseries/v1/finance/timeseries/XAUUSD=X?symbol=XAUUSD=X&type=trailingPegRatio&period1=1738972800&period2=1754784000
2025-08-09 20:40:42,756 DEBUG params=None
2025-08-09 20:40:42,756 DEBUG     Entering _get_cookie_and_crumb()
2025-08-09 20:40:42,757 DEBUG cookie_mode = 'basic'
2025-08-09 20:40:42,757 DEBUG      Entering _get_cookie_and_crumb_basic()
2025-08-09 20:40:42,757 DEBUG       Entering _get_cookie_basic()
2025-08-09 20:40:42,758 DEBUG reusing cookie
2025-08-09 20:40:42,759 DEBUG       Exiting _get_cookie_basic()
2025-08-09 20:40:42,760 DEBUG       Entering _get_crumb_basic()
2025-08-09 20:40:42,761 DEBUG reusing crumb
2025-08-09 20:40:42,762 DEBUG       Exiting _get_crumb_basic()
2025-08-09 20:40:42,763 DEBUG      Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:40:42,765 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-09 20:40:42,915 DEBUG response code=200
2025-08-09 20:40:42,916 DEBUG    Exiting _make_request()
2025-08-09 20:40:42,917 DEBUG   Exiting get()
2025-08-09 20:40:42,918 DEBUG   Entering history()
2025-08-09 20:40:42,929 ERROR 
1 Failed download:
2025-08-09 20:40:42,931 ERROR ['XAUUSD=X']: YFTzMissingError('possibly delisted; no timezone found')
2025-08-09 20:40:42,932 DEBUG ['XAUUSD=X']: Traceback (most recent call last):
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\multi.py", line 281, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\utils.py", line 92, in wrapper
    result = func(*args, **kwargs)
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\base.py", line 101, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\utils.py", line 92, in wrapper
    result = func(*args, **kwargs)
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\scrapers\history.py", line 128, in history
    raise _exception
yfinance.exceptions.YFTzMissingError: possibly delisted; no timezone found

2025-08-09 20:40:42,942 DEBUG Exiting download()
2025-08-09 20:40:42,944 DEBUG Entering download()
2025-08-09 20:40:42,949 DEBUG  Entering history()
2025-08-09 20:40:42,952 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GC=F', 1, 0])
2025-08-09 20:40:42,954 DEBUG   Entering history()
2025-08-09 20:40:42,955 DEBUG GC=F: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:40:42,956 DEBUG    Entering get()
2025-08-09 20:40:42,957 DEBUG     Entering _make_request()
2025-08-09 20:40:42,957 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/GC=F
2025-08-09 20:40:42,957 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:40:42,958 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:40:42,958 DEBUG cookie_mode = 'basic'
2025-08-09 20:40:42,960 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:40:42,961 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:40:42,962 DEBUG reusing cookie
2025-08-09 20:40:42,963 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:40:42,964 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:40:42,965 DEBUG reusing crumb
2025-08-09 20:40:42,965 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:40:42,966 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:40:42,967 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:40:43,143 DEBUG response code=200
2025-08-09 20:40:43,145 DEBUG     Exiting _make_request()
2025-08-09 20:40:43,147 DEBUG    Exiting get()
2025-08-09 20:40:43,158 DEBUG GC=F: yfinance received OHLC data: 2019-08-12 04:00:00 -> 2025-08-08 04:00:00
2025-08-09 20:40:43,164 DEBUG GC=F: OHLC after cleaning: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:40:43,176 DEBUG GC=F: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:40:43,200 DEBUG GC=F: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:40:43,202 DEBUG   Exiting history()
2025-08-09 20:40:43,202 DEBUG  Exiting history()
2025-08-09 20:40:43,209 DEBUG Exiting download()
2025-08-09 20:40:43,222 DEBUG Entering download()
2025-08-09 20:40:43,223 DEBUG  Entering history()
2025-08-09 20:40:43,224 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['^VIX', 1, 0])
2025-08-09 20:40:43,231 DEBUG   Entering history()
2025-08-09 20:40:43,234 DEBUG ^VIX: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-05:00', 'period2': '2025-08-09 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:40:43,234 DEBUG    Entering get()
2025-08-09 20:40:43,235 DEBUG     Entering _make_request()
2025-08-09 20:40:43,235 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/^VIX
2025-08-09 20:40:43,236 DEBUG params=frozendict.frozendict({'period1': 1565499600, 'period2': 1754715600, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:40:43,236 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:40:43,237 DEBUG cookie_mode = 'basic'
2025-08-09 20:40:43,237 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:40:43,238 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:40:43,238 DEBUG reusing cookie
2025-08-09 20:40:43,238 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:40:43,239 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:40:43,240 DEBUG reusing crumb
2025-08-09 20:40:43,241 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:40:43,241 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:40:43,242 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:40:43,503 DEBUG response code=200
2025-08-09 20:40:43,503 DEBUG     Exiting _make_request()
2025-08-09 20:40:43,504 DEBUG    Exiting get()
2025-08-09 20:40:43,522 DEBUG ^VIX: yfinance received OHLC data: 2019-08-12 07:00:00 -> 2025-08-08 07:00:00
2025-08-09 20:40:43,527 DEBUG ^VIX: OHLC after cleaning: 2019-08-12 02:00:00-05:00 -> 2025-08-08 02:00:00-05:00
2025-08-09 20:40:43,540 DEBUG ^VIX: OHLC after combining events: 2019-08-12 00:00:00-05:00 -> 2025-08-08 00:00:00-05:00
2025-08-09 20:40:43,562 DEBUG ^VIX: yfinance returning OHLC: 2019-08-12 00:00:00-05:00 -> 2025-08-08 00:00:00-05:00
2025-08-09 20:40:43,564 DEBUG   Exiting history()
2025-08-09 20:40:43,565 DEBUG  Exiting history()
2025-08-09 20:40:43,572 DEBUG Exiting download()
2025-08-09 20:40:43,575 DEBUG Entering download()
2025-08-09 20:40:43,576 DEBUG  Entering history()
2025-08-09 20:40:43,583 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GNR', 1, 0])
2025-08-09 20:40:43,588 DEBUG   Entering history()
2025-08-09 20:40:43,590 DEBUG GNR: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:40:43,591 DEBUG    Entering get()
2025-08-09 20:40:43,592 DEBUG     Entering _make_request()
2025-08-09 20:40:43,593 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/GNR
2025-08-09 20:40:43,594 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:40:43,597 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:40:43,599 DEBUG cookie_mode = 'basic'
2025-08-09 20:40:43,599 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:40:43,600 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:40:43,601 DEBUG reusing cookie
2025-08-09 20:40:43,601 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:40:43,602 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:40:43,602 DEBUG reusing crumb
2025-08-09 20:40:43,603 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:40:43,603 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:40:43,604 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:40:43,816 DEBUG response code=200
2025-08-09 20:40:43,817 DEBUG     Exiting _make_request()
2025-08-09 20:40:43,817 DEBUG    Exiting get()
2025-08-09 20:40:43,829 DEBUG GNR: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:40:43,833 DEBUG GNR: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:40:43,867 DEBUG GNR: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:40:43,877 DEBUG GNR: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:40:43,880 DEBUG   Exiting history()
2025-08-09 20:40:43,883 DEBUG  Exiting history()
2025-08-09 20:40:43,891 DEBUG Exiting download()
2025-08-09 20:40:43,896 DEBUG Entering download()
2025-08-09 20:40:43,898 DEBUG  Entering history()
2025-08-09 20:40:43,899 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['XLU', 1, 0])
2025-08-09 20:40:43,901 DEBUG   Entering history()
2025-08-09 20:40:43,902 DEBUG XLU: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:40:43,903 DEBUG    Entering get()
2025-08-09 20:40:43,903 DEBUG     Entering _make_request()
2025-08-09 20:40:43,903 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/XLU
2025-08-09 20:40:43,904 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:40:43,905 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:40:43,905 DEBUG cookie_mode = 'basic'
2025-08-09 20:40:43,905 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:40:43,906 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:40:43,906 DEBUG reusing cookie
2025-08-09 20:40:43,907 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:40:43,907 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:40:43,907 DEBUG reusing crumb
2025-08-09 20:40:43,908 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:40:43,908 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:40:43,908 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:40:44,163 DEBUG response code=200
2025-08-09 20:40:44,164 DEBUG     Exiting _make_request()
2025-08-09 20:40:44,164 DEBUG    Exiting get()
2025-08-09 20:40:44,174 DEBUG XLU: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:40:44,178 DEBUG XLU: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:40:44,205 DEBUG XLU: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:40:44,230 DEBUG XLU: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:40:44,233 DEBUG   Exiting history()
2025-08-09 20:40:44,234 DEBUG  Exiting history()
2025-08-09 20:40:44,240 DEBUG Exiting download()
2025-08-09 20:40:44,245 DEBUG Entering download()
2025-08-09 20:40:44,250 DEBUG  Entering history()
2025-08-09 20:40:44,255 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['INDA', 1, 0])
2025-08-09 20:40:44,258 DEBUG   Entering history()
2025-08-09 20:40:44,260 DEBUG INDA: Yahoo GET parameters: {'period1': '2019-08-11 00:00:00-04:00', 'period2': '2025-08-09 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-09 20:40:44,265 DEBUG    Entering get()
2025-08-09 20:40:44,265 DEBUG     Entering _make_request()
2025-08-09 20:40:44,266 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/INDA
2025-08-09 20:40:44,267 DEBUG params=frozendict.frozendict({'period1': 1565496000, 'period2': 1754712000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-09 20:40:44,268 DEBUG      Entering _get_cookie_and_crumb()
2025-08-09 20:40:44,269 DEBUG cookie_mode = 'basic'
2025-08-09 20:40:44,269 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-09 20:40:44,270 DEBUG        Entering _get_cookie_basic()
2025-08-09 20:40:44,270 DEBUG reusing cookie
2025-08-09 20:40:44,271 DEBUG        Exiting _get_cookie_basic()
2025-08-09 20:40:44,271 DEBUG        Entering _get_crumb_basic()
2025-08-09 20:40:44,272 DEBUG reusing crumb
2025-08-09 20:40:44,272 DEBUG        Exiting _get_crumb_basic()
2025-08-09 20:40:44,272 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-09 20:40:44,273 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-09 20:40:44,481 DEBUG response code=200
2025-08-09 20:40:44,482 DEBUG     Exiting _make_request()
2025-08-09 20:40:44,483 DEBUG    Exiting get()
2025-08-09 20:40:44,499 DEBUG INDA: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-09 20:40:44,503 DEBUG INDA: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-09 20:40:44,526 DEBUG INDA: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:40:44,542 DEBUG INDA: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-09 20:40:44,544 DEBUG   Exiting history()
2025-08-09 20:40:44,546 DEBUG  Exiting history()
2025-08-09 20:40:44,566 DEBUG Exiting download()
2025-08-09 20:40:44,574 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:40:45,117 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=DGS10&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 12507
2025-08-09 20:40:46,272 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:40:46,501 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=TB3MS&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 836
2025-08-09 20:40:46,554 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:40:46,749 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=BAA10YM&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 843
2025-08-09 20:40:46,801 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:40:47,011 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=TEDRATE&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 4539
2025-08-09 20:40:47,424 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:40:47,701 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=IPMAN&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 1046
2025-08-09 20:40:47,755 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:40:47,986 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=NEWORDER&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 951
2025-08-09 20:40:48,049 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-09 20:40:48,264 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=CFNAIMA3&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-11&observation_end=2025-08-09 HTTP/1.1" 200 838
2025-08-09 20:40:48,362 DEBUG Starting new HTTPS connection (1): api.telegram.org:443
2025-08-09 20:40:48,547 DEBUG https://api.telegram.org:443 "POST /bot8164484731:AAGkwVn4U8sX4TquwepKKvUC8r0Aep7RRUc/sendMessage HTTP/1.1" 200 1600
2025-08-09 20:40:48,553 INFO Completed run: phase=late_cycle date=2021-12-01
2025-08-10 09:37:04,793 DEBUG Entering download()
2025-08-10 09:37:04,794 DEBUG  Entering history()
2025-08-10 09:37:04,805 DEBUG ('CREATE TABLE IF NOT EXISTS "_tz_kv" ("key" VARCHAR(255) NOT NULL PRIMARY KEY, "value" VARCHAR(255)) WITHOUT ROWID', [])
2025-08-10 09:37:04,806 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['^GSPC', 1, 0])
2025-08-10 09:37:05,041 DEBUG   Entering history()
2025-08-10 09:37:05,051 DEBUG ^GSPC: Yahoo GET parameters: {'period1': '2019-08-12 00:00:00-04:00', 'period2': '2025-08-10 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-10 09:37:05,053 DEBUG    Entering get()
2025-08-10 09:37:05,054 DEBUG     Entering _make_request()
2025-08-10 09:37:05,054 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/^GSPC
2025-08-10 09:37:05,054 DEBUG params=frozendict.frozendict({'period1': 1565582400, 'period2': 1754798400, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-10 09:37:05,055 DEBUG      Entering _get_cookie_and_crumb()
2025-08-10 09:37:05,055 DEBUG cookie_mode = 'basic'
2025-08-10 09:37:05,055 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-10 09:37:05,055 DEBUG        Entering _get_cookie_basic()
2025-08-10 09:37:05,055 DEBUG         Entering _load_cookie_curlCffi()
2025-08-10 09:37:05,061 DEBUG ('CREATE TABLE IF NOT EXISTS "_cookieschema" ("strategy" VARCHAR(255) NOT NULL PRIMARY KEY, "fetch_date" DATETIME NOT NULL, "cookie_bytes" BLOB NOT NULL) WITHOUT ROWID', [])
2025-08-10 09:37:05,062 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-10 09:37:05,064 DEBUG         Exiting _load_cookie_curlCffi()
2025-08-10 09:37:05,064 DEBUG reusing persistent cookie
2025-08-10 09:37:05,064 DEBUG        Exiting _get_cookie_basic()
2025-08-10 09:37:05,064 DEBUG        Entering _get_crumb_basic()
2025-08-10 09:37:05,065 DEBUG         Entering _get_cookie_basic()
2025-08-10 09:37:05,065 DEBUG reusing cookie
2025-08-10 09:37:05,065 DEBUG         Exiting _get_cookie_basic()
2025-08-10 09:37:05,271 DEBUG crumb = 'FULGNX2cwi/'
2025-08-10 09:37:05,272 DEBUG        Exiting _get_crumb_basic()
2025-08-10 09:37:05,273 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-10 09:37:05,273 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-10 09:37:05,442 DEBUG response code=200
2025-08-10 09:37:05,443 DEBUG     Exiting _make_request()
2025-08-10 09:37:05,444 DEBUG    Exiting get()
2025-08-10 09:37:05,474 DEBUG ^GSPC: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-10 09:37:05,482 DEBUG ^GSPC: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-10 09:37:05,499 DEBUG ^GSPC: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-10 09:37:05,512 DEBUG ^GSPC: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-10 09:37:05,513 DEBUG   Exiting history()
2025-08-10 09:37:05,513 DEBUG  Exiting history()
2025-08-10 09:37:05,522 DEBUG Exiting download()
2025-08-10 09:37:05,525 DEBUG Entering download()
2025-08-10 09:37:05,526 DEBUG  Entering history()
2025-08-10 09:37:05,527 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['XAUUSD=X', 1, 0])
2025-08-10 09:37:05,528 DEBUG   Entering _fetch_ticker_tz()
2025-08-10 09:37:05,528 DEBUG    Entering get()
2025-08-10 09:37:05,528 DEBUG     Entering _make_request()
2025-08-10 09:37:05,529 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/XAUUSD=X
2025-08-10 09:37:05,529 DEBUG params=frozendict.frozendict({'range': '1d', 'interval': '1d'})
2025-08-10 09:37:05,529 DEBUG      Entering _get_cookie_and_crumb()
2025-08-10 09:37:05,529 DEBUG cookie_mode = 'basic'
2025-08-10 09:37:05,530 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-10 09:37:05,530 DEBUG        Entering _get_cookie_basic()
2025-08-10 09:37:05,530 DEBUG reusing cookie
2025-08-10 09:37:05,531 DEBUG        Exiting _get_cookie_basic()
2025-08-10 09:37:05,531 DEBUG        Entering _get_crumb_basic()
2025-08-10 09:37:05,531 DEBUG reusing crumb
2025-08-10 09:37:05,531 DEBUG        Exiting _get_crumb_basic()
2025-08-10 09:37:05,532 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-10 09:37:05,532 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-10 09:37:05,641 DEBUG response code=404
2025-08-10 09:37:05,641 DEBUG toggling cookie strategy basic -> csrf
2025-08-10 09:37:05,641 DEBUG      Entering _get_cookie_and_crumb()
2025-08-10 09:37:05,642 DEBUG cookie_mode = 'csrf'
2025-08-10 09:37:05,642 DEBUG       Entering _get_crumb_csrf()
2025-08-10 09:37:05,643 DEBUG        Entering _get_cookie_csrf()
2025-08-10 09:37:05,643 DEBUG         Entering _load_cookie_curlCffi()
2025-08-10 09:37:05,644 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-10 09:37:05,644 DEBUG         Exiting _load_cookie_curlCffi()
2025-08-10 09:37:05,645 DEBUG reusing persistent cookie
2025-08-10 09:37:05,645 DEBUG        Exiting _get_cookie_csrf()
2025-08-10 09:37:05,712 DEBUG crumb = 'FULGNX2cwi/'
2025-08-10 09:37:05,712 DEBUG       Exiting _get_crumb_csrf()
2025-08-10 09:37:05,713 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-10 09:37:05,780 DEBUG response code=404
2025-08-10 09:37:05,780 DEBUG     Exiting _make_request()
2025-08-10 09:37:05,781 DEBUG    Exiting get()
2025-08-10 09:37:05,781 DEBUG Got error from yahoo api for ticker XAUUSD=X, Error: {'code': 'Not Found', 'description': 'No data found, symbol may be delisted'}
2025-08-10 09:37:05,781 DEBUG   Exiting _fetch_ticker_tz()
2025-08-10 09:37:05,782 DEBUG get_raw_json(): https://query2.finance.yahoo.com/v10/finance/quoteSummary/XAUUSD=X
2025-08-10 09:37:05,782 DEBUG   Entering get()
2025-08-10 09:37:05,782 DEBUG    Entering _make_request()
2025-08-10 09:37:05,783 DEBUG url=https://query2.finance.yahoo.com/v10/finance/quoteSummary/XAUUSD=X
2025-08-10 09:37:05,783 DEBUG params={'modules': 'financialData,quoteType,defaultKeyStatistics,assetProfile,summaryDetail', 'corsDomain': 'finance.yahoo.com', 'formatted': 'false', 'symbol': 'XAUUSD=X'}
2025-08-10 09:37:05,783 DEBUG     Entering _get_cookie_and_crumb()
2025-08-10 09:37:05,783 DEBUG cookie_mode = 'csrf'
2025-08-10 09:37:05,784 DEBUG      Entering _get_crumb_csrf()
2025-08-10 09:37:05,784 DEBUG reusing crumb
2025-08-10 09:37:05,784 DEBUG      Exiting _get_crumb_csrf()
2025-08-10 09:37:05,784 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-10 09:37:05,932 DEBUG response code=404
2025-08-10 09:37:05,933 DEBUG toggling cookie strategy csrf -> basic
2025-08-10 09:37:05,933 DEBUG     Entering _get_cookie_and_crumb()
2025-08-10 09:37:05,934 DEBUG cookie_mode = 'basic'
2025-08-10 09:37:05,935 DEBUG      Entering _get_cookie_and_crumb_basic()
2025-08-10 09:37:05,935 DEBUG       Entering _get_cookie_basic()
2025-08-10 09:37:05,936 DEBUG        Entering _load_cookie_curlCffi()
2025-08-10 09:37:05,937 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-10 09:37:05,938 DEBUG        Exiting _load_cookie_curlCffi()
2025-08-10 09:37:05,938 DEBUG reusing persistent cookie
2025-08-10 09:37:05,939 DEBUG       Exiting _get_cookie_basic()
2025-08-10 09:37:05,939 DEBUG       Entering _get_crumb_basic()
2025-08-10 09:37:05,940 DEBUG        Entering _get_cookie_basic()
2025-08-10 09:37:05,940 DEBUG reusing cookie
2025-08-10 09:37:05,941 DEBUG        Exiting _get_cookie_basic()
2025-08-10 09:37:06,049 DEBUG crumb = 'FULGNX2cwi/'
2025-08-10 09:37:06,050 DEBUG       Exiting _get_crumb_basic()
2025-08-10 09:37:06,050 DEBUG      Exiting _get_cookie_and_crumb_basic()
2025-08-10 09:37:06,050 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-10 09:37:06,206 DEBUG response code=404
2025-08-10 09:37:06,207 DEBUG    Exiting _make_request()
2025-08-10 09:37:06,208 DEBUG   Exiting get()
2025-08-10 09:37:06,208 ERROR HTTP Error 404: 
2025-08-10 09:37:06,209 DEBUG get_raw_json(): https://query1.finance.yahoo.com/v7/finance/quote?
2025-08-10 09:37:06,210 DEBUG   Entering get()
2025-08-10 09:37:06,211 DEBUG    Entering _make_request()
2025-08-10 09:37:06,211 DEBUG url=https://query1.finance.yahoo.com/v7/finance/quote?
2025-08-10 09:37:06,212 DEBUG params={'symbols': 'XAUUSD=X', 'formatted': 'false'}
2025-08-10 09:37:06,213 DEBUG     Entering _get_cookie_and_crumb()
2025-08-10 09:37:06,214 DEBUG cookie_mode = 'basic'
2025-08-10 09:37:06,215 DEBUG      Entering _get_cookie_and_crumb_basic()
2025-08-10 09:37:06,216 DEBUG       Entering _get_cookie_basic()
2025-08-10 09:37:06,216 DEBUG reusing cookie
2025-08-10 09:37:06,217 DEBUG       Exiting _get_cookie_basic()
2025-08-10 09:37:06,218 DEBUG       Entering _get_crumb_basic()
2025-08-10 09:37:06,219 DEBUG reusing crumb
2025-08-10 09:37:06,220 DEBUG       Exiting _get_crumb_basic()
2025-08-10 09:37:06,221 DEBUG      Exiting _get_cookie_and_crumb_basic()
2025-08-10 09:37:06,222 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-10 09:37:06,299 DEBUG response code=200
2025-08-10 09:37:06,300 DEBUG    Exiting _make_request()
2025-08-10 09:37:06,301 DEBUG   Exiting get()
2025-08-10 09:37:06,303 DEBUG   Entering get()
2025-08-10 09:37:06,303 DEBUG    Entering _make_request()
2025-08-10 09:37:06,304 DEBUG url=https://query1.finance.yahoo.com/ws/fundamentals-timeseries/v1/finance/timeseries/XAUUSD=X?symbol=XAUUSD=X&type=trailingPegRatio&period1=1739059200&period2=1754870400
2025-08-10 09:37:06,305 DEBUG params=None
2025-08-10 09:37:06,306 DEBUG     Entering _get_cookie_and_crumb()
2025-08-10 09:37:06,307 DEBUG cookie_mode = 'basic'
2025-08-10 09:37:06,308 DEBUG      Entering _get_cookie_and_crumb_basic()
2025-08-10 09:37:06,309 DEBUG       Entering _get_cookie_basic()
2025-08-10 09:37:06,310 DEBUG reusing cookie
2025-08-10 09:37:06,311 DEBUG       Exiting _get_cookie_basic()
2025-08-10 09:37:06,311 DEBUG       Entering _get_crumb_basic()
2025-08-10 09:37:06,312 DEBUG reusing crumb
2025-08-10 09:37:06,313 DEBUG       Exiting _get_crumb_basic()
2025-08-10 09:37:06,314 DEBUG      Exiting _get_cookie_and_crumb_basic()
2025-08-10 09:37:06,314 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-10 09:37:06,465 DEBUG response code=200
2025-08-10 09:37:06,466 DEBUG    Exiting _make_request()
2025-08-10 09:37:06,467 DEBUG   Exiting get()
2025-08-10 09:37:06,468 DEBUG   Entering history()
2025-08-10 09:37:06,485 ERROR 
1 Failed download:
2025-08-10 09:37:06,486 ERROR ['XAUUSD=X']: YFTzMissingError('possibly delisted; no timezone found')
2025-08-10 09:37:06,487 DEBUG ['XAUUSD=X']: Traceback (most recent call last):
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\multi.py", line 281, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\utils.py", line 92, in wrapper
    result = func(*args, **kwargs)
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\base.py", line 101, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\utils.py", line 92, in wrapper
    result = func(*args, **kwargs)
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\scrapers\history.py", line 128, in history
    raise _exception
yfinance.exceptions.YFTzMissingError: possibly delisted; no timezone found

2025-08-10 09:37:06,498 DEBUG Exiting download()
2025-08-10 09:37:06,499 DEBUG Entering download()
2025-08-10 09:37:06,501 DEBUG  Entering history()
2025-08-10 09:37:06,502 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GC=F', 1, 0])
2025-08-10 09:37:06,504 DEBUG   Entering history()
2025-08-10 09:37:06,506 DEBUG GC=F: Yahoo GET parameters: {'period1': '2019-08-12 00:00:00-04:00', 'period2': '2025-08-10 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-10 09:37:06,507 DEBUG    Entering get()
2025-08-10 09:37:06,508 DEBUG     Entering _make_request()
2025-08-10 09:37:06,509 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/GC=F
2025-08-10 09:37:06,510 DEBUG params=frozendict.frozendict({'period1': 1565582400, 'period2': 1754798400, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-10 09:37:06,511 DEBUG      Entering _get_cookie_and_crumb()
2025-08-10 09:37:06,512 DEBUG cookie_mode = 'basic'
2025-08-10 09:37:06,512 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-10 09:37:06,513 DEBUG        Entering _get_cookie_basic()
2025-08-10 09:37:06,514 DEBUG reusing cookie
2025-08-10 09:37:06,515 DEBUG        Exiting _get_cookie_basic()
2025-08-10 09:37:06,516 DEBUG        Entering _get_crumb_basic()
2025-08-10 09:37:06,517 DEBUG reusing crumb
2025-08-10 09:37:06,518 DEBUG        Exiting _get_crumb_basic()
2025-08-10 09:37:06,519 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-10 09:37:06,520 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-10 09:37:06,701 DEBUG response code=200
2025-08-10 09:37:06,702 DEBUG     Exiting _make_request()
2025-08-10 09:37:06,703 DEBUG    Exiting get()
2025-08-10 09:37:06,719 DEBUG GC=F: yfinance received OHLC data: 2019-08-12 04:00:00 -> 2025-08-08 20:59:59
2025-08-10 09:37:06,723 DEBUG GC=F: OHLC after cleaning: 2019-08-12 00:00:00-04:00 -> 2025-08-08 16:59:59-04:00
2025-08-10 09:37:06,736 DEBUG GC=F: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-10 09:37:06,749 DEBUG GC=F: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-10 09:37:06,750 DEBUG   Exiting history()
2025-08-10 09:37:06,751 DEBUG  Exiting history()
2025-08-10 09:37:06,755 DEBUG Exiting download()
2025-08-10 09:37:06,758 DEBUG Entering download()
2025-08-10 09:37:06,758 DEBUG  Entering history()
2025-08-10 09:37:06,759 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['^VIX', 1, 0])
2025-08-10 09:37:06,761 DEBUG   Entering history()
2025-08-10 09:37:06,763 DEBUG ^VIX: Yahoo GET parameters: {'period1': '2019-08-12 00:00:00-05:00', 'period2': '2025-08-10 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-10 09:37:06,763 DEBUG    Entering get()
2025-08-10 09:37:06,763 DEBUG     Entering _make_request()
2025-08-10 09:37:06,764 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/^VIX
2025-08-10 09:37:06,764 DEBUG params=frozendict.frozendict({'period1': 1565586000, 'period2': 1754802000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-10 09:37:06,764 DEBUG      Entering _get_cookie_and_crumb()
2025-08-10 09:37:06,765 DEBUG cookie_mode = 'basic'
2025-08-10 09:37:06,765 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-10 09:37:06,765 DEBUG        Entering _get_cookie_basic()
2025-08-10 09:37:06,766 DEBUG reusing cookie
2025-08-10 09:37:06,766 DEBUG        Exiting _get_cookie_basic()
2025-08-10 09:37:06,766 DEBUG        Entering _get_crumb_basic()
2025-08-10 09:37:06,766 DEBUG reusing crumb
2025-08-10 09:37:06,767 DEBUG        Exiting _get_crumb_basic()
2025-08-10 09:37:06,767 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-10 09:37:06,767 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-10 09:37:06,965 DEBUG response code=200
2025-08-10 09:37:06,965 DEBUG     Exiting _make_request()
2025-08-10 09:37:06,966 DEBUG    Exiting get()
2025-08-10 09:37:06,972 DEBUG ^VIX: yfinance received OHLC data: 2019-08-12 07:00:00 -> 2025-08-08 07:00:00
2025-08-10 09:37:06,974 DEBUG ^VIX: OHLC after cleaning: 2019-08-12 02:00:00-05:00 -> 2025-08-08 02:00:00-05:00
2025-08-10 09:37:06,981 DEBUG ^VIX: OHLC after combining events: 2019-08-12 00:00:00-05:00 -> 2025-08-08 00:00:00-05:00
2025-08-10 09:37:06,987 DEBUG ^VIX: yfinance returning OHLC: 2019-08-12 00:00:00-05:00 -> 2025-08-08 00:00:00-05:00
2025-08-10 09:37:06,988 DEBUG   Exiting history()
2025-08-10 09:37:06,988 DEBUG  Exiting history()
2025-08-10 09:37:06,992 DEBUG Exiting download()
2025-08-10 09:37:06,996 DEBUG Entering download()
2025-08-10 09:37:06,996 DEBUG  Entering history()
2025-08-10 09:37:06,997 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GNR', 1, 0])
2025-08-10 09:37:06,997 DEBUG   Entering history()
2025-08-10 09:37:06,998 DEBUG GNR: Yahoo GET parameters: {'period1': '2019-08-12 00:00:00-04:00', 'period2': '2025-08-10 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-10 09:37:06,998 DEBUG    Entering get()
2025-08-10 09:37:06,999 DEBUG     Entering _make_request()
2025-08-10 09:37:06,999 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/GNR
2025-08-10 09:37:06,999 DEBUG params=frozendict.frozendict({'period1': 1565582400, 'period2': 1754798400, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-10 09:37:06,999 DEBUG      Entering _get_cookie_and_crumb()
2025-08-10 09:37:07,000 DEBUG cookie_mode = 'basic'
2025-08-10 09:37:07,000 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-10 09:37:07,000 DEBUG        Entering _get_cookie_basic()
2025-08-10 09:37:07,001 DEBUG reusing cookie
2025-08-10 09:37:07,001 DEBUG        Exiting _get_cookie_basic()
2025-08-10 09:37:07,001 DEBUG        Entering _get_crumb_basic()
2025-08-10 09:37:07,001 DEBUG reusing crumb
2025-08-10 09:37:07,002 DEBUG        Exiting _get_crumb_basic()
2025-08-10 09:37:07,002 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-10 09:37:07,002 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-10 09:37:07,216 DEBUG response code=200
2025-08-10 09:37:07,216 DEBUG     Exiting _make_request()
2025-08-10 09:37:07,217 DEBUG    Exiting get()
2025-08-10 09:37:07,235 DEBUG GNR: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-10 09:37:07,239 DEBUG GNR: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-10 09:37:07,266 DEBUG GNR: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-10 09:37:07,273 DEBUG GNR: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-10 09:37:07,273 DEBUG   Exiting history()
2025-08-10 09:37:07,273 DEBUG  Exiting history()
2025-08-10 09:37:07,278 DEBUG Exiting download()
2025-08-10 09:37:07,281 DEBUG Entering download()
2025-08-10 09:37:07,282 DEBUG  Entering history()
2025-08-10 09:37:07,282 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['XLU', 1, 0])
2025-08-10 09:37:07,283 DEBUG   Entering history()
2025-08-10 09:37:07,283 DEBUG XLU: Yahoo GET parameters: {'period1': '2019-08-12 00:00:00-04:00', 'period2': '2025-08-10 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-10 09:37:07,284 DEBUG    Entering get()
2025-08-10 09:37:07,284 DEBUG     Entering _make_request()
2025-08-10 09:37:07,284 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/XLU
2025-08-10 09:37:07,285 DEBUG params=frozendict.frozendict({'period1': 1565582400, 'period2': 1754798400, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-10 09:37:07,285 DEBUG      Entering _get_cookie_and_crumb()
2025-08-10 09:37:07,285 DEBUG cookie_mode = 'basic'
2025-08-10 09:37:07,286 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-10 09:37:07,286 DEBUG        Entering _get_cookie_basic()
2025-08-10 09:37:07,286 DEBUG reusing cookie
2025-08-10 09:37:07,286 DEBUG        Exiting _get_cookie_basic()
2025-08-10 09:37:07,287 DEBUG        Entering _get_crumb_basic()
2025-08-10 09:37:07,287 DEBUG reusing crumb
2025-08-10 09:37:07,287 DEBUG        Exiting _get_crumb_basic()
2025-08-10 09:37:07,287 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-10 09:37:07,288 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-10 09:37:07,486 DEBUG response code=200
2025-08-10 09:37:07,487 DEBUG     Exiting _make_request()
2025-08-10 09:37:07,488 DEBUG    Exiting get()
2025-08-10 09:37:07,507 DEBUG XLU: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-10 09:37:07,512 DEBUG XLU: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-10 09:37:07,535 DEBUG XLU: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-10 09:37:07,541 DEBUG XLU: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-10 09:37:07,542 DEBUG   Exiting history()
2025-08-10 09:37:07,543 DEBUG  Exiting history()
2025-08-10 09:37:07,548 DEBUG Exiting download()
2025-08-10 09:37:07,550 DEBUG Entering download()
2025-08-10 09:37:07,550 DEBUG  Entering history()
2025-08-10 09:37:07,551 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['INDA', 1, 0])
2025-08-10 09:37:07,551 DEBUG   Entering history()
2025-08-10 09:37:07,552 DEBUG INDA: Yahoo GET parameters: {'period1': '2019-08-12 00:00:00-04:00', 'period2': '2025-08-10 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-10 09:37:07,552 DEBUG    Entering get()
2025-08-10 09:37:07,553 DEBUG     Entering _make_request()
2025-08-10 09:37:07,553 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/INDA
2025-08-10 09:37:07,553 DEBUG params=frozendict.frozendict({'period1': 1565582400, 'period2': 1754798400, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-10 09:37:07,553 DEBUG      Entering _get_cookie_and_crumb()
2025-08-10 09:37:07,554 DEBUG cookie_mode = 'basic'
2025-08-10 09:37:07,554 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-10 09:37:07,554 DEBUG        Entering _get_cookie_basic()
2025-08-10 09:37:07,554 DEBUG reusing cookie
2025-08-10 09:37:07,555 DEBUG        Exiting _get_cookie_basic()
2025-08-10 09:37:07,555 DEBUG        Entering _get_crumb_basic()
2025-08-10 09:37:07,555 DEBUG reusing crumb
2025-08-10 09:37:07,555 DEBUG        Exiting _get_crumb_basic()
2025-08-10 09:37:07,556 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-10 09:37:07,556 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-10 09:37:07,734 DEBUG response code=200
2025-08-10 09:37:07,735 DEBUG     Exiting _make_request()
2025-08-10 09:37:07,735 DEBUG    Exiting get()
2025-08-10 09:37:07,746 DEBUG INDA: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-10 09:37:07,748 DEBUG INDA: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-10 09:37:07,764 DEBUG INDA: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-10 09:37:07,770 DEBUG INDA: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-10 09:37:07,770 DEBUG   Exiting history()
2025-08-10 09:37:07,771 DEBUG  Exiting history()
2025-08-10 09:37:07,774 DEBUG Exiting download()
2025-08-10 09:37:07,781 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-10 09:37:08,235 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=DGS10&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-12&observation_end=2025-08-10 HTTP/1.1" 200 12546
2025-08-10 09:37:08,844 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-10 09:37:09,244 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=TB3MS&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-12&observation_end=2025-08-10 HTTP/1.1" 200 833
2025-08-10 09:37:09,283 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-10 09:37:09,535 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=BAA10YM&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-12&observation_end=2025-08-10 HTTP/1.1" 200 841
2025-08-10 09:37:09,574 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-10 09:37:09,871 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=TEDRATE&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-12&observation_end=2025-08-10 HTTP/1.1" 200 4541
2025-08-10 09:37:10,134 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-10 09:37:10,438 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=IPMAN&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-12&observation_end=2025-08-10 HTTP/1.1" 200 1044
2025-08-10 09:37:10,478 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-10 09:37:10,769 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=NEWORDER&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-12&observation_end=2025-08-10 HTTP/1.1" 200 949
2025-08-10 09:37:10,814 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-10 09:37:11,211 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=CFNAIMA3&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-12&observation_end=2025-08-10 HTTP/1.1" 200 836
2025-08-10 09:37:11,275 DEBUG Starting new HTTPS connection (1): api.telegram.org:443
2025-08-10 09:37:11,495 DEBUG https://api.telegram.org:443 "POST /bot8164484731:AAGkwVn4U8sX4TquwepKKvUC8r0Aep7RRUc/sendMessage HTTP/1.1" 200 1600
2025-08-10 09:37:11,508 INFO Completed run: phase=late_cycle date=2021-12-01
2025-08-10 13:38:07,481 DEBUG Entering download()
2025-08-10 13:38:07,482 DEBUG  Entering history()
2025-08-10 13:38:07,493 DEBUG ('CREATE TABLE IF NOT EXISTS "_tz_kv" ("key" VARCHAR(255) NOT NULL PRIMARY KEY, "value" VARCHAR(255)) WITHOUT ROWID', [])
2025-08-10 13:38:07,495 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['^GSPC', 1, 0])
2025-08-10 13:38:09,281 DEBUG   Entering history()
2025-08-10 13:38:09,302 DEBUG ^GSPC: Yahoo GET parameters: {'period1': '2019-08-12 00:00:00-04:00', 'period2': '2025-08-10 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-10 13:38:09,305 DEBUG    Entering get()
2025-08-10 13:38:09,305 DEBUG     Entering _make_request()
2025-08-10 13:38:09,306 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/^GSPC
2025-08-10 13:38:09,306 DEBUG params=frozendict.frozendict({'period1': 1565582400, 'period2': 1754798400, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-10 13:38:09,306 DEBUG      Entering _get_cookie_and_crumb()
2025-08-10 13:38:09,306 DEBUG cookie_mode = 'basic'
2025-08-10 13:38:09,307 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-10 13:38:09,307 DEBUG        Entering _get_cookie_basic()
2025-08-10 13:38:09,307 DEBUG         Entering _load_cookie_curlCffi()
2025-08-10 13:38:09,311 DEBUG ('CREATE TABLE IF NOT EXISTS "_cookieschema" ("strategy" VARCHAR(255) NOT NULL PRIMARY KEY, "fetch_date" DATETIME NOT NULL, "cookie_bytes" BLOB NOT NULL) WITHOUT ROWID', [])
2025-08-10 13:38:09,312 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-10 13:38:09,313 DEBUG         Exiting _load_cookie_curlCffi()
2025-08-10 13:38:09,314 DEBUG reusing persistent cookie
2025-08-10 13:38:09,314 DEBUG        Exiting _get_cookie_basic()
2025-08-10 13:38:09,314 DEBUG        Entering _get_crumb_basic()
2025-08-10 13:38:09,315 DEBUG         Entering _get_cookie_basic()
2025-08-10 13:38:09,315 DEBUG reusing cookie
2025-08-10 13:38:09,315 DEBUG         Exiting _get_cookie_basic()
2025-08-10 13:38:09,454 DEBUG crumb = 'FULGNX2cwi/'
2025-08-10 13:38:09,455 DEBUG        Exiting _get_crumb_basic()
2025-08-10 13:38:09,455 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-10 13:38:09,456 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-10 13:38:09,647 DEBUG response code=200
2025-08-10 13:38:09,648 DEBUG     Exiting _make_request()
2025-08-10 13:38:09,648 DEBUG    Exiting get()
2025-08-10 13:38:09,671 DEBUG ^GSPC: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-10 13:38:09,679 DEBUG ^GSPC: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-10 13:38:09,697 DEBUG ^GSPC: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-10 13:38:09,710 DEBUG ^GSPC: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-10 13:38:09,710 DEBUG   Exiting history()
2025-08-10 13:38:09,711 DEBUG  Exiting history()
2025-08-10 13:38:09,721 DEBUG Exiting download()
2025-08-10 13:38:09,723 DEBUG Entering download()
2025-08-10 13:38:09,723 DEBUG  Entering history()
2025-08-10 13:38:09,724 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['XAUUSD=X', 1, 0])
2025-08-10 13:38:09,724 DEBUG   Entering _fetch_ticker_tz()
2025-08-10 13:38:09,725 DEBUG    Entering get()
2025-08-10 13:38:09,725 DEBUG     Entering _make_request()
2025-08-10 13:38:09,725 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/XAUUSD=X
2025-08-10 13:38:09,725 DEBUG params=frozendict.frozendict({'range': '1d', 'interval': '1d'})
2025-08-10 13:38:09,726 DEBUG      Entering _get_cookie_and_crumb()
2025-08-10 13:38:09,726 DEBUG cookie_mode = 'basic'
2025-08-10 13:38:09,726 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-10 13:38:09,727 DEBUG        Entering _get_cookie_basic()
2025-08-10 13:38:09,727 DEBUG reusing cookie
2025-08-10 13:38:09,727 DEBUG        Exiting _get_cookie_basic()
2025-08-10 13:38:09,727 DEBUG        Entering _get_crumb_basic()
2025-08-10 13:38:09,727 DEBUG reusing crumb
2025-08-10 13:38:09,728 DEBUG        Exiting _get_crumb_basic()
2025-08-10 13:38:09,728 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-10 13:38:09,728 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-10 13:38:09,868 DEBUG response code=404
2025-08-10 13:38:09,868 DEBUG toggling cookie strategy basic -> csrf
2025-08-10 13:38:09,868 DEBUG      Entering _get_cookie_and_crumb()
2025-08-10 13:38:09,869 DEBUG cookie_mode = 'csrf'
2025-08-10 13:38:09,869 DEBUG       Entering _get_crumb_csrf()
2025-08-10 13:38:09,870 DEBUG        Entering _get_cookie_csrf()
2025-08-10 13:38:09,870 DEBUG         Entering _load_cookie_curlCffi()
2025-08-10 13:38:09,871 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-10 13:38:09,872 DEBUG         Exiting _load_cookie_curlCffi()
2025-08-10 13:38:09,872 DEBUG reusing persistent cookie
2025-08-10 13:38:09,872 DEBUG        Exiting _get_cookie_csrf()
2025-08-10 13:38:09,948 DEBUG crumb = 'FULGNX2cwi/'
2025-08-10 13:38:09,949 DEBUG       Exiting _get_crumb_csrf()
2025-08-10 13:38:09,949 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-10 13:38:10,022 DEBUG response code=404
2025-08-10 13:38:10,022 DEBUG     Exiting _make_request()
2025-08-10 13:38:10,023 DEBUG    Exiting get()
2025-08-10 13:38:10,023 DEBUG Got error from yahoo api for ticker XAUUSD=X, Error: {'code': 'Not Found', 'description': 'No data found, symbol may be delisted'}
2025-08-10 13:38:10,024 DEBUG   Exiting _fetch_ticker_tz()
2025-08-10 13:38:10,024 DEBUG get_raw_json(): https://query2.finance.yahoo.com/v10/finance/quoteSummary/XAUUSD=X
2025-08-10 13:38:10,025 DEBUG   Entering get()
2025-08-10 13:38:10,025 DEBUG    Entering _make_request()
2025-08-10 13:38:10,025 DEBUG url=https://query2.finance.yahoo.com/v10/finance/quoteSummary/XAUUSD=X
2025-08-10 13:38:10,026 DEBUG params={'modules': 'financialData,quoteType,defaultKeyStatistics,assetProfile,summaryDetail', 'corsDomain': 'finance.yahoo.com', 'formatted': 'false', 'symbol': 'XAUUSD=X'}
2025-08-10 13:38:10,026 DEBUG     Entering _get_cookie_and_crumb()
2025-08-10 13:38:10,027 DEBUG cookie_mode = 'csrf'
2025-08-10 13:38:10,027 DEBUG      Entering _get_crumb_csrf()
2025-08-10 13:38:10,027 DEBUG reusing crumb
2025-08-10 13:38:10,028 DEBUG      Exiting _get_crumb_csrf()
2025-08-10 13:38:10,028 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-10 13:38:10,183 DEBUG response code=404
2025-08-10 13:38:10,184 DEBUG toggling cookie strategy csrf -> basic
2025-08-10 13:38:10,184 DEBUG     Entering _get_cookie_and_crumb()
2025-08-10 13:38:10,184 DEBUG cookie_mode = 'basic'
2025-08-10 13:38:10,185 DEBUG      Entering _get_cookie_and_crumb_basic()
2025-08-10 13:38:10,185 DEBUG       Entering _get_cookie_basic()
2025-08-10 13:38:10,186 DEBUG        Entering _load_cookie_curlCffi()
2025-08-10 13:38:10,186 DEBUG ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
2025-08-10 13:38:10,187 DEBUG        Exiting _load_cookie_curlCffi()
2025-08-10 13:38:10,187 DEBUG reusing persistent cookie
2025-08-10 13:38:10,187 DEBUG       Exiting _get_cookie_basic()
2025-08-10 13:38:10,188 DEBUG       Entering _get_crumb_basic()
2025-08-10 13:38:10,188 DEBUG        Entering _get_cookie_basic()
2025-08-10 13:38:10,188 DEBUG reusing cookie
2025-08-10 13:38:10,189 DEBUG        Exiting _get_cookie_basic()
2025-08-10 13:38:10,300 DEBUG crumb = 'FULGNX2cwi/'
2025-08-10 13:38:10,300 DEBUG       Exiting _get_crumb_basic()
2025-08-10 13:38:10,301 DEBUG      Exiting _get_cookie_and_crumb_basic()
2025-08-10 13:38:10,301 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-10 13:38:10,451 DEBUG response code=404
2025-08-10 13:38:10,452 DEBUG    Exiting _make_request()
2025-08-10 13:38:10,452 DEBUG   Exiting get()
2025-08-10 13:38:10,453 ERROR HTTP Error 404: 
2025-08-10 13:38:10,453 DEBUG get_raw_json(): https://query1.finance.yahoo.com/v7/finance/quote?
2025-08-10 13:38:10,454 DEBUG   Entering get()
2025-08-10 13:38:10,454 DEBUG    Entering _make_request()
2025-08-10 13:38:10,455 DEBUG url=https://query1.finance.yahoo.com/v7/finance/quote?
2025-08-10 13:38:10,455 DEBUG params={'symbols': 'XAUUSD=X', 'formatted': 'false'}
2025-08-10 13:38:10,456 DEBUG     Entering _get_cookie_and_crumb()
2025-08-10 13:38:10,457 DEBUG cookie_mode = 'basic'
2025-08-10 13:38:10,457 DEBUG      Entering _get_cookie_and_crumb_basic()
2025-08-10 13:38:10,458 DEBUG       Entering _get_cookie_basic()
2025-08-10 13:38:10,458 DEBUG reusing cookie
2025-08-10 13:38:10,459 DEBUG       Exiting _get_cookie_basic()
2025-08-10 13:38:10,460 DEBUG       Entering _get_crumb_basic()
2025-08-10 13:38:10,460 DEBUG reusing crumb
2025-08-10 13:38:10,461 DEBUG       Exiting _get_crumb_basic()
2025-08-10 13:38:10,461 DEBUG      Exiting _get_cookie_and_crumb_basic()
2025-08-10 13:38:10,462 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-10 13:38:10,534 DEBUG response code=200
2025-08-10 13:38:10,534 DEBUG    Exiting _make_request()
2025-08-10 13:38:10,535 DEBUG   Exiting get()
2025-08-10 13:38:10,536 DEBUG   Entering get()
2025-08-10 13:38:10,537 DEBUG    Entering _make_request()
2025-08-10 13:38:10,537 DEBUG url=https://query1.finance.yahoo.com/ws/fundamentals-timeseries/v1/finance/timeseries/XAUUSD=X?symbol=XAUUSD=X&type=trailingPegRatio&period1=1739059200&period2=1754870400
2025-08-10 13:38:10,538 DEBUG params=None
2025-08-10 13:38:10,539 DEBUG     Entering _get_cookie_and_crumb()
2025-08-10 13:38:10,539 DEBUG cookie_mode = 'basic'
2025-08-10 13:38:10,540 DEBUG      Entering _get_cookie_and_crumb_basic()
2025-08-10 13:38:10,540 DEBUG       Entering _get_cookie_basic()
2025-08-10 13:38:10,541 DEBUG reusing cookie
2025-08-10 13:38:10,542 DEBUG       Exiting _get_cookie_basic()
2025-08-10 13:38:10,542 DEBUG       Entering _get_crumb_basic()
2025-08-10 13:38:10,543 DEBUG reusing crumb
2025-08-10 13:38:10,543 DEBUG       Exiting _get_crumb_basic()
2025-08-10 13:38:10,544 DEBUG      Exiting _get_cookie_and_crumb_basic()
2025-08-10 13:38:10,544 DEBUG     Exiting _get_cookie_and_crumb()
2025-08-10 13:38:10,712 DEBUG response code=200
2025-08-10 13:38:10,713 DEBUG    Exiting _make_request()
2025-08-10 13:38:10,714 DEBUG   Exiting get()
2025-08-10 13:38:10,714 DEBUG   Entering history()
2025-08-10 13:38:10,892 ERROR 
1 Failed download:
2025-08-10 13:38:10,892 ERROR ['XAUUSD=X']: YFTzMissingError('possibly delisted; no timezone found')
2025-08-10 13:38:10,893 DEBUG ['XAUUSD=X']: Traceback (most recent call last):
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\multi.py", line 281, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\utils.py", line 92, in wrapper
    result = func(*args, **kwargs)
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\base.py", line 101, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\utils.py", line 92, in wrapper
    result = func(*args, **kwargs)
  File "C:\Dev\market_monitor\venv\Lib\site-packages\yfinance\scrapers\history.py", line 128, in history
    raise _exception
yfinance.exceptions.YFTzMissingError: possibly delisted; no timezone found

2025-08-10 13:38:10,897 DEBUG Exiting download()
2025-08-10 13:38:10,897 DEBUG Entering download()
2025-08-10 13:38:10,898 DEBUG  Entering history()
2025-08-10 13:38:10,898 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GC=F', 1, 0])
2025-08-10 13:38:10,899 DEBUG   Entering history()
2025-08-10 13:38:10,899 DEBUG GC=F: Yahoo GET parameters: {'period1': '2019-08-12 00:00:00-04:00', 'period2': '2025-08-10 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-10 13:38:10,900 DEBUG    Entering get()
2025-08-10 13:38:10,900 DEBUG     Entering _make_request()
2025-08-10 13:38:10,900 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/GC=F
2025-08-10 13:38:10,900 DEBUG params=frozendict.frozendict({'period1': 1565582400, 'period2': 1754798400, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-10 13:38:10,901 DEBUG      Entering _get_cookie_and_crumb()
2025-08-10 13:38:10,901 DEBUG cookie_mode = 'basic'
2025-08-10 13:38:10,901 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-10 13:38:10,902 DEBUG        Entering _get_cookie_basic()
2025-08-10 13:38:10,902 DEBUG reusing cookie
2025-08-10 13:38:10,902 DEBUG        Exiting _get_cookie_basic()
2025-08-10 13:38:10,903 DEBUG        Entering _get_crumb_basic()
2025-08-10 13:38:10,903 DEBUG reusing crumb
2025-08-10 13:38:10,904 DEBUG        Exiting _get_crumb_basic()
2025-08-10 13:38:10,904 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-10 13:38:10,905 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-10 13:38:11,210 DEBUG response code=200
2025-08-10 13:38:11,210 DEBUG     Exiting _make_request()
2025-08-10 13:38:11,211 DEBUG    Exiting get()
2025-08-10 13:38:11,224 DEBUG GC=F: yfinance received OHLC data: 2019-08-12 04:00:00 -> 2025-08-08 20:59:59
2025-08-10 13:38:11,227 DEBUG GC=F: OHLC after cleaning: 2019-08-12 00:00:00-04:00 -> 2025-08-08 16:59:59-04:00
2025-08-10 13:38:11,235 DEBUG GC=F: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-10 13:38:11,243 DEBUG GC=F: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-10 13:38:11,243 DEBUG   Exiting history()
2025-08-10 13:38:11,244 DEBUG  Exiting history()
2025-08-10 13:38:11,248 DEBUG Exiting download()
2025-08-10 13:38:11,252 DEBUG Entering download()
2025-08-10 13:38:11,253 DEBUG  Entering history()
2025-08-10 13:38:11,253 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['^VIX', 1, 0])
2025-08-10 13:38:11,254 DEBUG   Entering history()
2025-08-10 13:38:11,256 DEBUG ^VIX: Yahoo GET parameters: {'period1': '2019-08-12 00:00:00-05:00', 'period2': '2025-08-10 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-10 13:38:11,256 DEBUG    Entering get()
2025-08-10 13:38:11,257 DEBUG     Entering _make_request()
2025-08-10 13:38:11,257 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/^VIX
2025-08-10 13:38:11,257 DEBUG params=frozendict.frozendict({'period1': 1565586000, 'period2': 1754802000, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-10 13:38:11,258 DEBUG      Entering _get_cookie_and_crumb()
2025-08-10 13:38:11,258 DEBUG cookie_mode = 'basic'
2025-08-10 13:38:11,258 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-10 13:38:11,258 DEBUG        Entering _get_cookie_basic()
2025-08-10 13:38:11,259 DEBUG reusing cookie
2025-08-10 13:38:11,259 DEBUG        Exiting _get_cookie_basic()
2025-08-10 13:38:11,259 DEBUG        Entering _get_crumb_basic()
2025-08-10 13:38:11,259 DEBUG reusing crumb
2025-08-10 13:38:11,259 DEBUG        Exiting _get_crumb_basic()
2025-08-10 13:38:11,260 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-10 13:38:11,260 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-10 13:38:11,435 DEBUG response code=200
2025-08-10 13:38:11,436 DEBUG     Exiting _make_request()
2025-08-10 13:38:11,437 DEBUG    Exiting get()
2025-08-10 13:38:11,454 DEBUG ^VIX: yfinance received OHLC data: 2019-08-12 07:00:00 -> 2025-08-08 07:00:00
2025-08-10 13:38:11,459 DEBUG ^VIX: OHLC after cleaning: 2019-08-12 02:00:00-05:00 -> 2025-08-08 02:00:00-05:00
2025-08-10 13:38:11,473 DEBUG ^VIX: OHLC after combining events: 2019-08-12 00:00:00-05:00 -> 2025-08-08 00:00:00-05:00
2025-08-10 13:38:11,486 DEBUG ^VIX: yfinance returning OHLC: 2019-08-12 00:00:00-05:00 -> 2025-08-08 00:00:00-05:00
2025-08-10 13:38:11,487 DEBUG   Exiting history()
2025-08-10 13:38:11,487 DEBUG  Exiting history()
2025-08-10 13:38:11,494 DEBUG Exiting download()
2025-08-10 13:38:11,496 DEBUG Entering download()
2025-08-10 13:38:11,497 DEBUG  Entering history()
2025-08-10 13:38:11,497 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GNR', 1, 0])
2025-08-10 13:38:11,498 DEBUG   Entering history()
2025-08-10 13:38:11,500 DEBUG GNR: Yahoo GET parameters: {'period1': '2019-08-12 00:00:00-04:00', 'period2': '2025-08-10 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-10 13:38:11,500 DEBUG    Entering get()
2025-08-10 13:38:11,500 DEBUG     Entering _make_request()
2025-08-10 13:38:11,501 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/GNR
2025-08-10 13:38:11,501 DEBUG params=frozendict.frozendict({'period1': 1565582400, 'period2': 1754798400, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-10 13:38:11,502 DEBUG      Entering _get_cookie_and_crumb()
2025-08-10 13:38:11,502 DEBUG cookie_mode = 'basic'
2025-08-10 13:38:11,502 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-10 13:38:11,503 DEBUG        Entering _get_cookie_basic()
2025-08-10 13:38:11,504 DEBUG reusing cookie
2025-08-10 13:38:11,504 DEBUG        Exiting _get_cookie_basic()
2025-08-10 13:38:11,505 DEBUG        Entering _get_crumb_basic()
2025-08-10 13:38:11,505 DEBUG reusing crumb
2025-08-10 13:38:11,505 DEBUG        Exiting _get_crumb_basic()
2025-08-10 13:38:11,505 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-10 13:38:11,506 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-10 13:38:11,737 DEBUG response code=200
2025-08-10 13:38:11,738 DEBUG     Exiting _make_request()
2025-08-10 13:38:11,738 DEBUG    Exiting get()
2025-08-10 13:38:11,756 DEBUG GNR: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-10 13:38:11,761 DEBUG GNR: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-10 13:38:11,789 DEBUG GNR: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-10 13:38:11,796 DEBUG GNR: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-10 13:38:11,797 DEBUG   Exiting history()
2025-08-10 13:38:11,797 DEBUG  Exiting history()
2025-08-10 13:38:11,803 DEBUG Exiting download()
2025-08-10 13:38:11,805 DEBUG Entering download()
2025-08-10 13:38:11,805 DEBUG  Entering history()
2025-08-10 13:38:11,806 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['XLU', 1, 0])
2025-08-10 13:38:11,806 DEBUG   Entering history()
2025-08-10 13:38:11,807 DEBUG XLU: Yahoo GET parameters: {'period1': '2019-08-12 00:00:00-04:00', 'period2': '2025-08-10 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-10 13:38:11,807 DEBUG    Entering get()
2025-08-10 13:38:11,808 DEBUG     Entering _make_request()
2025-08-10 13:38:11,808 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/XLU
2025-08-10 13:38:11,808 DEBUG params=frozendict.frozendict({'period1': 1565582400, 'period2': 1754798400, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-10 13:38:11,809 DEBUG      Entering _get_cookie_and_crumb()
2025-08-10 13:38:11,809 DEBUG cookie_mode = 'basic'
2025-08-10 13:38:11,809 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-10 13:38:11,809 DEBUG        Entering _get_cookie_basic()
2025-08-10 13:38:11,809 DEBUG reusing cookie
2025-08-10 13:38:11,810 DEBUG        Exiting _get_cookie_basic()
2025-08-10 13:38:11,810 DEBUG        Entering _get_crumb_basic()
2025-08-10 13:38:11,810 DEBUG reusing crumb
2025-08-10 13:38:11,810 DEBUG        Exiting _get_crumb_basic()
2025-08-10 13:38:11,811 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-10 13:38:11,811 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-10 13:38:12,053 DEBUG response code=200
2025-08-10 13:38:12,053 DEBUG     Exiting _make_request()
2025-08-10 13:38:12,054 DEBUG    Exiting get()
2025-08-10 13:38:12,060 DEBUG XLU: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-10 13:38:12,062 DEBUG XLU: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-10 13:38:12,075 DEBUG XLU: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-10 13:38:12,081 DEBUG XLU: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-10 13:38:12,082 DEBUG   Exiting history()
2025-08-10 13:38:12,082 DEBUG  Exiting history()
2025-08-10 13:38:12,087 DEBUG Exiting download()
2025-08-10 13:38:12,089 DEBUG Entering download()
2025-08-10 13:38:12,089 DEBUG  Entering history()
2025-08-10 13:38:12,090 DEBUG ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['INDA', 1, 0])
2025-08-10 13:38:12,090 DEBUG   Entering history()
2025-08-10 13:38:12,091 DEBUG INDA: Yahoo GET parameters: {'period1': '2019-08-12 00:00:00-04:00', 'period2': '2025-08-10 00:00:00-04:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-08-10 13:38:12,091 DEBUG    Entering get()
2025-08-10 13:38:12,092 DEBUG     Entering _make_request()
2025-08-10 13:38:12,092 DEBUG url=https://query2.finance.yahoo.com/v8/finance/chart/INDA
2025-08-10 13:38:12,092 DEBUG params=frozendict.frozendict({'period1': 1565582400, 'period2': 1754798400, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-08-10 13:38:12,093 DEBUG      Entering _get_cookie_and_crumb()
2025-08-10 13:38:12,093 DEBUG cookie_mode = 'basic'
2025-08-10 13:38:12,093 DEBUG       Entering _get_cookie_and_crumb_basic()
2025-08-10 13:38:12,094 DEBUG        Entering _get_cookie_basic()
2025-08-10 13:38:12,094 DEBUG reusing cookie
2025-08-10 13:38:12,094 DEBUG        Exiting _get_cookie_basic()
2025-08-10 13:38:12,095 DEBUG        Entering _get_crumb_basic()
2025-08-10 13:38:12,095 DEBUG reusing crumb
2025-08-10 13:38:12,095 DEBUG        Exiting _get_crumb_basic()
2025-08-10 13:38:12,095 DEBUG       Exiting _get_cookie_and_crumb_basic()
2025-08-10 13:38:12,096 DEBUG      Exiting _get_cookie_and_crumb()
2025-08-10 13:38:12,326 DEBUG response code=200
2025-08-10 13:38:12,326 DEBUG     Exiting _make_request()
2025-08-10 13:38:12,327 DEBUG    Exiting get()
2025-08-10 13:38:12,339 DEBUG INDA: yfinance received OHLC data: 2019-08-12 13:30:00 -> 2025-08-08 13:30:00
2025-08-10 13:38:12,342 DEBUG INDA: OHLC after cleaning: 2019-08-12 09:30:00-04:00 -> 2025-08-08 09:30:00-04:00
2025-08-10 13:38:12,356 DEBUG INDA: OHLC after combining events: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-10 13:38:12,361 DEBUG INDA: yfinance returning OHLC: 2019-08-12 00:00:00-04:00 -> 2025-08-08 00:00:00-04:00
2025-08-10 13:38:12,362 DEBUG   Exiting history()
2025-08-10 13:38:12,362 DEBUG  Exiting history()
2025-08-10 13:38:12,366 DEBUG Exiting download()
2025-08-10 13:38:12,375 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-10 13:38:12,776 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=DGS10&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-12&observation_end=2025-08-10 HTTP/1.1" 200 12546
2025-08-10 13:38:13,473 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-10 13:38:13,761 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=TB3MS&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-12&observation_end=2025-08-10 HTTP/1.1" 200 833
2025-08-10 13:38:13,790 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-10 13:38:14,098 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=BAA10YM&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-12&observation_end=2025-08-10 HTTP/1.1" 200 841
2025-08-10 13:38:14,140 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-10 13:38:14,332 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=TEDRATE&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-12&observation_end=2025-08-10 HTTP/1.1" 200 4541
2025-08-10 13:38:14,590 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-10 13:38:14,880 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=IPMAN&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-12&observation_end=2025-08-10 HTTP/1.1" 200 1044
2025-08-10 13:38:14,908 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-10 13:38:15,177 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=NEWORDER&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-12&observation_end=2025-08-10 HTTP/1.1" 200 949
2025-08-10 13:38:15,216 DEBUG Starting new HTTPS connection (1): api.stlouisfed.org:443
2025-08-10 13:38:15,447 DEBUG https://api.stlouisfed.org:443 "GET /fred/series/observations?series_id=CFNAIMA3&api_key=4c877fec8975dc6eb050a01a8f0a4a67&file_type=json&observation_start=2019-08-12&observation_end=2025-08-10 HTTP/1.1" 200 836
2025-08-10 13:38:15,517 DEBUG Starting new HTTPS connection (1): api.telegram.org:443
2025-08-10 13:38:15,772 DEBUG https://api.telegram.org:443 "POST /bot8164484731:AAGkwVn4U8sX4TquwepKKvUC8r0Aep7RRUc/sendMessage HTTP/1.1" 200 1600
2025-08-10 13:38:15,776 INFO Completed run: phase=late_cycle date=2021-12-01
2025-08-10 13:39:34,002 ERROR HTTP Error 404: 
2025-08-10 13:39:34,239 ERROR 
1 Failed download:
2025-08-10 13:39:34,239 ERROR ['XAUUSD=X']: YFTzMissingError('possibly delisted; no timezone found')
2025-08-10 13:39:38,557 INFO Completed run: phase=late_cycle date=2021-12-01
